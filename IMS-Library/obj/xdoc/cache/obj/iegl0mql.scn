id: IMS-Library
language: CSharp
name:
  Default: IMS-Library
qualifiedName:
  Default: IMS-Library
type: Assembly
modifiers: {}
items:
- id: IMS_Library
  commentId: N:IMS_Library
  language: CSharp
  name:
    CSharp: IMS_Library
    VB: IMS_Library
  nameWithType:
    CSharp: IMS_Library
    VB: IMS_Library
  qualifiedName:
    CSharp: IMS_Library
    VB: IMS_Library
  type: Namespace
  assemblies:
  - IMS-Library
  modifiers: {}
  items:
  - id: IMS_Library.ChildProcessTracker
    commentId: T:IMS_Library.ChildProcessTracker
    language: CSharp
    name:
      CSharp: ChildProcessTracker
      VB: ChildProcessTracker
    nameWithType:
      CSharp: ChildProcessTracker
      VB: ChildProcessTracker
    qualifiedName:
      CSharp: IMS_Library.ChildProcessTracker
      VB: IMS_Library.ChildProcessTracker
    type: Class
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: ChildProcessTracker
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\ChildProcessTracker.cs
      startLine: 17
    summary: "\nAllows processes to be automatically killed if this parent process unexpectedly quits.\nThis feature requires Windows 8 or greater. On Windows 7, nothing is done."
    remarks: "References:\n https://stackoverflow.com/a/4657392/386091\n https://stackoverflow.com/a/9164742/386091 "
    example: []
    syntax:
      content:
        CSharp: public static class ChildProcessTracker
        VB: Public Module ChildProcessTracker
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: IMS_Library.ChildProcessTracker.AddProcess(System.Diagnostics.Process)
      commentId: M:IMS_Library.ChildProcessTracker.AddProcess(System.Diagnostics.Process)
      language: CSharp
      name:
        CSharp: AddProcess(Process)
        VB: AddProcess(Process)
      nameWithType:
        CSharp: ChildProcessTracker.AddProcess(Process)
        VB: ChildProcessTracker.AddProcess(Process)
      qualifiedName:
        CSharp: IMS_Library.ChildProcessTracker.AddProcess(System.Diagnostics.Process)
        VB: IMS_Library.ChildProcessTracker.AddProcess(System.Diagnostics.Process)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: AddProcess
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\ChildProcessTracker.cs
        startLine: 24
      summary: "\nAdd the process to be tracked. If our current process is killed, the child processes\nthat we are tracking will be automatically killed, too. If the child process terminates\nfirst, that&apos;s fine, too."
      example: []
      syntax:
        content:
          CSharp: public static void AddProcess(Process process)
          VB: Public Shared Sub AddProcess(process As Process)
        parameters:
        - id: process
          type: System.Diagnostics.Process
          description: ''
      overload: IMS_Library.ChildProcessTracker.AddProcess*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: IMS_Library.JobObjectInfoType
    commentId: T:IMS_Library.JobObjectInfoType
    language: CSharp
    name:
      CSharp: JobObjectInfoType
      VB: JobObjectInfoType
    nameWithType:
      CSharp: JobObjectInfoType
      VB: JobObjectInfoType
    qualifiedName:
      CSharp: IMS_Library.JobObjectInfoType
      VB: IMS_Library.JobObjectInfoType
    type: Enum
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: JobObjectInfoType
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\ChildProcessTracker.cs
      startLine: 94
    syntax:
      content:
        CSharp: public enum JobObjectInfoType
        VB: Public Enum JobObjectInfoType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: IMS_Library.JobObjectInfoType.AssociateCompletionPortInformation
      commentId: F:IMS_Library.JobObjectInfoType.AssociateCompletionPortInformation
      language: CSharp
      name:
        CSharp: AssociateCompletionPortInformation
        VB: AssociateCompletionPortInformation
      nameWithType:
        CSharp: JobObjectInfoType.AssociateCompletionPortInformation
        VB: JobObjectInfoType.AssociateCompletionPortInformation
      qualifiedName:
        CSharp: IMS_Library.JobObjectInfoType.AssociateCompletionPortInformation
        VB: IMS_Library.JobObjectInfoType.AssociateCompletionPortInformation
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: AssociateCompletionPortInformation
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\ChildProcessTracker.cs
        startLine: 96
      syntax:
        content:
          CSharp: AssociateCompletionPortInformation = 7
          VB: AssociateCompletionPortInformation = 7
        return:
          type: IMS_Library.JobObjectInfoType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: IMS_Library.JobObjectInfoType.BasicLimitInformation
      commentId: F:IMS_Library.JobObjectInfoType.BasicLimitInformation
      language: CSharp
      name:
        CSharp: BasicLimitInformation
        VB: BasicLimitInformation
      nameWithType:
        CSharp: JobObjectInfoType.BasicLimitInformation
        VB: JobObjectInfoType.BasicLimitInformation
      qualifiedName:
        CSharp: IMS_Library.JobObjectInfoType.BasicLimitInformation
        VB: IMS_Library.JobObjectInfoType.BasicLimitInformation
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: BasicLimitInformation
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\ChildProcessTracker.cs
        startLine: 97
      syntax:
        content:
          CSharp: BasicLimitInformation = 2
          VB: BasicLimitInformation = 2
        return:
          type: IMS_Library.JobObjectInfoType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: IMS_Library.JobObjectInfoType.BasicUIRestrictions
      commentId: F:IMS_Library.JobObjectInfoType.BasicUIRestrictions
      language: CSharp
      name:
        CSharp: BasicUIRestrictions
        VB: BasicUIRestrictions
      nameWithType:
        CSharp: JobObjectInfoType.BasicUIRestrictions
        VB: JobObjectInfoType.BasicUIRestrictions
      qualifiedName:
        CSharp: IMS_Library.JobObjectInfoType.BasicUIRestrictions
        VB: IMS_Library.JobObjectInfoType.BasicUIRestrictions
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: BasicUIRestrictions
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\ChildProcessTracker.cs
        startLine: 98
      syntax:
        content:
          CSharp: BasicUIRestrictions = 4
          VB: BasicUIRestrictions = 4
        return:
          type: IMS_Library.JobObjectInfoType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: IMS_Library.JobObjectInfoType.EndOfJobTimeInformation
      commentId: F:IMS_Library.JobObjectInfoType.EndOfJobTimeInformation
      language: CSharp
      name:
        CSharp: EndOfJobTimeInformation
        VB: EndOfJobTimeInformation
      nameWithType:
        CSharp: JobObjectInfoType.EndOfJobTimeInformation
        VB: JobObjectInfoType.EndOfJobTimeInformation
      qualifiedName:
        CSharp: IMS_Library.JobObjectInfoType.EndOfJobTimeInformation
        VB: IMS_Library.JobObjectInfoType.EndOfJobTimeInformation
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: EndOfJobTimeInformation
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\ChildProcessTracker.cs
        startLine: 99
      syntax:
        content:
          CSharp: EndOfJobTimeInformation = 6
          VB: EndOfJobTimeInformation = 6
        return:
          type: IMS_Library.JobObjectInfoType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: IMS_Library.JobObjectInfoType.ExtendedLimitInformation
      commentId: F:IMS_Library.JobObjectInfoType.ExtendedLimitInformation
      language: CSharp
      name:
        CSharp: ExtendedLimitInformation
        VB: ExtendedLimitInformation
      nameWithType:
        CSharp: JobObjectInfoType.ExtendedLimitInformation
        VB: JobObjectInfoType.ExtendedLimitInformation
      qualifiedName:
        CSharp: IMS_Library.JobObjectInfoType.ExtendedLimitInformation
        VB: IMS_Library.JobObjectInfoType.ExtendedLimitInformation
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ExtendedLimitInformation
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\ChildProcessTracker.cs
        startLine: 100
      syntax:
        content:
          CSharp: ExtendedLimitInformation = 9
          VB: ExtendedLimitInformation = 9
        return:
          type: IMS_Library.JobObjectInfoType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: IMS_Library.JobObjectInfoType.SecurityLimitInformation
      commentId: F:IMS_Library.JobObjectInfoType.SecurityLimitInformation
      language: CSharp
      name:
        CSharp: SecurityLimitInformation
        VB: SecurityLimitInformation
      nameWithType:
        CSharp: JobObjectInfoType.SecurityLimitInformation
        VB: JobObjectInfoType.SecurityLimitInformation
      qualifiedName:
        CSharp: IMS_Library.JobObjectInfoType.SecurityLimitInformation
        VB: IMS_Library.JobObjectInfoType.SecurityLimitInformation
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: SecurityLimitInformation
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\ChildProcessTracker.cs
        startLine: 101
      syntax:
        content:
          CSharp: SecurityLimitInformation = 5
          VB: SecurityLimitInformation = 5
        return:
          type: IMS_Library.JobObjectInfoType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: IMS_Library.JobObjectInfoType.GroupInformation
      commentId: F:IMS_Library.JobObjectInfoType.GroupInformation
      language: CSharp
      name:
        CSharp: GroupInformation
        VB: GroupInformation
      nameWithType:
        CSharp: JobObjectInfoType.GroupInformation
        VB: JobObjectInfoType.GroupInformation
      qualifiedName:
        CSharp: IMS_Library.JobObjectInfoType.GroupInformation
        VB: IMS_Library.JobObjectInfoType.GroupInformation
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GroupInformation
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\ChildProcessTracker.cs
        startLine: 102
      syntax:
        content:
          CSharp: GroupInformation = 11
          VB: GroupInformation = 11
        return:
          type: IMS_Library.JobObjectInfoType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION
    commentId: T:IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION
    language: CSharp
    name:
      CSharp: JOBOBJECT_BASIC_LIMIT_INFORMATION
      VB: JOBOBJECT_BASIC_LIMIT_INFORMATION
    nameWithType:
      CSharp: JOBOBJECT_BASIC_LIMIT_INFORMATION
      VB: JOBOBJECT_BASIC_LIMIT_INFORMATION
    qualifiedName:
      CSharp: IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION
      VB: IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION
    type: Struct
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: JOBOBJECT_BASIC_LIMIT_INFORMATION
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\ChildProcessTracker.cs
      startLine: 105
    syntax:
      content:
        CSharp: public struct JOBOBJECT_BASIC_LIMIT_INFORMATION
        VB: Public Structure JOBOBJECT_BASIC_LIMIT_INFORMATION
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION.PerProcessUserTimeLimit
      commentId: F:IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION.PerProcessUserTimeLimit
      language: CSharp
      name:
        CSharp: PerProcessUserTimeLimit
        VB: PerProcessUserTimeLimit
      nameWithType:
        CSharp: JOBOBJECT_BASIC_LIMIT_INFORMATION.PerProcessUserTimeLimit
        VB: JOBOBJECT_BASIC_LIMIT_INFORMATION.PerProcessUserTimeLimit
      qualifiedName:
        CSharp: IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION.PerProcessUserTimeLimit
        VB: IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION.PerProcessUserTimeLimit
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: PerProcessUserTimeLimit
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\ChildProcessTracker.cs
        startLine: 108
      syntax:
        content:
          CSharp: public long PerProcessUserTimeLimit
          VB: Public PerProcessUserTimeLimit As Long
        return:
          type: System.Int64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION.PerJobUserTimeLimit
      commentId: F:IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION.PerJobUserTimeLimit
      language: CSharp
      name:
        CSharp: PerJobUserTimeLimit
        VB: PerJobUserTimeLimit
      nameWithType:
        CSharp: JOBOBJECT_BASIC_LIMIT_INFORMATION.PerJobUserTimeLimit
        VB: JOBOBJECT_BASIC_LIMIT_INFORMATION.PerJobUserTimeLimit
      qualifiedName:
        CSharp: IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION.PerJobUserTimeLimit
        VB: IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION.PerJobUserTimeLimit
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: PerJobUserTimeLimit
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\ChildProcessTracker.cs
        startLine: 109
      syntax:
        content:
          CSharp: public long PerJobUserTimeLimit
          VB: Public PerJobUserTimeLimit As Long
        return:
          type: System.Int64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION.LimitFlags
      commentId: F:IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION.LimitFlags
      language: CSharp
      name:
        CSharp: LimitFlags
        VB: LimitFlags
      nameWithType:
        CSharp: JOBOBJECT_BASIC_LIMIT_INFORMATION.LimitFlags
        VB: JOBOBJECT_BASIC_LIMIT_INFORMATION.LimitFlags
      qualifiedName:
        CSharp: IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION.LimitFlags
        VB: IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION.LimitFlags
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: LimitFlags
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\ChildProcessTracker.cs
        startLine: 110
      syntax:
        content:
          CSharp: public JOBOBJECTLIMIT LimitFlags
          VB: Public LimitFlags As JOBOBJECTLIMIT
        return:
          type: IMS_Library.JOBOBJECTLIMIT
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION.MinimumWorkingSetSize
      commentId: F:IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION.MinimumWorkingSetSize
      language: CSharp
      name:
        CSharp: MinimumWorkingSetSize
        VB: MinimumWorkingSetSize
      nameWithType:
        CSharp: JOBOBJECT_BASIC_LIMIT_INFORMATION.MinimumWorkingSetSize
        VB: JOBOBJECT_BASIC_LIMIT_INFORMATION.MinimumWorkingSetSize
      qualifiedName:
        CSharp: IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION.MinimumWorkingSetSize
        VB: IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION.MinimumWorkingSetSize
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: MinimumWorkingSetSize
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\ChildProcessTracker.cs
        startLine: 111
      syntax:
        content:
          CSharp: public UIntPtr MinimumWorkingSetSize
          VB: Public MinimumWorkingSetSize As UIntPtr
        return:
          type: System.UIntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION.MaximumWorkingSetSize
      commentId: F:IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION.MaximumWorkingSetSize
      language: CSharp
      name:
        CSharp: MaximumWorkingSetSize
        VB: MaximumWorkingSetSize
      nameWithType:
        CSharp: JOBOBJECT_BASIC_LIMIT_INFORMATION.MaximumWorkingSetSize
        VB: JOBOBJECT_BASIC_LIMIT_INFORMATION.MaximumWorkingSetSize
      qualifiedName:
        CSharp: IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION.MaximumWorkingSetSize
        VB: IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION.MaximumWorkingSetSize
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: MaximumWorkingSetSize
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\ChildProcessTracker.cs
        startLine: 112
      syntax:
        content:
          CSharp: public UIntPtr MaximumWorkingSetSize
          VB: Public MaximumWorkingSetSize As UIntPtr
        return:
          type: System.UIntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION.ActiveProcessLimit
      commentId: F:IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION.ActiveProcessLimit
      language: CSharp
      name:
        CSharp: ActiveProcessLimit
        VB: ActiveProcessLimit
      nameWithType:
        CSharp: JOBOBJECT_BASIC_LIMIT_INFORMATION.ActiveProcessLimit
        VB: JOBOBJECT_BASIC_LIMIT_INFORMATION.ActiveProcessLimit
      qualifiedName:
        CSharp: IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION.ActiveProcessLimit
        VB: IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION.ActiveProcessLimit
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ActiveProcessLimit
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\ChildProcessTracker.cs
        startLine: 113
      syntax:
        content:
          CSharp: public uint ActiveProcessLimit
          VB: Public ActiveProcessLimit As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION.Affinity
      commentId: F:IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION.Affinity
      language: CSharp
      name:
        CSharp: Affinity
        VB: Affinity
      nameWithType:
        CSharp: JOBOBJECT_BASIC_LIMIT_INFORMATION.Affinity
        VB: JOBOBJECT_BASIC_LIMIT_INFORMATION.Affinity
      qualifiedName:
        CSharp: IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION.Affinity
        VB: IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION.Affinity
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Affinity
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\ChildProcessTracker.cs
        startLine: 114
      syntax:
        content:
          CSharp: public long Affinity
          VB: Public Affinity As Long
        return:
          type: System.Int64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION.PriorityClass
      commentId: F:IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION.PriorityClass
      language: CSharp
      name:
        CSharp: PriorityClass
        VB: PriorityClass
      nameWithType:
        CSharp: JOBOBJECT_BASIC_LIMIT_INFORMATION.PriorityClass
        VB: JOBOBJECT_BASIC_LIMIT_INFORMATION.PriorityClass
      qualifiedName:
        CSharp: IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION.PriorityClass
        VB: IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION.PriorityClass
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: PriorityClass
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\ChildProcessTracker.cs
        startLine: 115
      syntax:
        content:
          CSharp: public uint PriorityClass
          VB: Public PriorityClass As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION.SchedulingClass
      commentId: F:IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION.SchedulingClass
      language: CSharp
      name:
        CSharp: SchedulingClass
        VB: SchedulingClass
      nameWithType:
        CSharp: JOBOBJECT_BASIC_LIMIT_INFORMATION.SchedulingClass
        VB: JOBOBJECT_BASIC_LIMIT_INFORMATION.SchedulingClass
      qualifiedName:
        CSharp: IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION.SchedulingClass
        VB: IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION.SchedulingClass
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: SchedulingClass
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\ChildProcessTracker.cs
        startLine: 116
      syntax:
        content:
          CSharp: public uint SchedulingClass
          VB: Public SchedulingClass As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: IMS_Library.JOBOBJECTLIMIT
    commentId: T:IMS_Library.JOBOBJECTLIMIT
    language: CSharp
    name:
      CSharp: JOBOBJECTLIMIT
      VB: JOBOBJECTLIMIT
    nameWithType:
      CSharp: JOBOBJECTLIMIT
      VB: JOBOBJECTLIMIT
    qualifiedName:
      CSharp: IMS_Library.JOBOBJECTLIMIT
      VB: IMS_Library.JOBOBJECTLIMIT
    type: Enum
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: JOBOBJECTLIMIT
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\ChildProcessTracker.cs
      startLine: 119
    syntax:
      content:
        CSharp: >-
          [Flags]

          public enum JOBOBJECTLIMIT : uint
        VB: >-
          <Flags>

          Public Enum JOBOBJECTLIMIT As UInteger
    attributes:
    - type: System.FlagsAttribute
      ctor: System.FlagsAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: IMS_Library.JOBOBJECTLIMIT.JOB_OBJECT_LIMIT_KILL_ON_JOB_CLOSE
      commentId: F:IMS_Library.JOBOBJECTLIMIT.JOB_OBJECT_LIMIT_KILL_ON_JOB_CLOSE
      language: CSharp
      name:
        CSharp: JOB_OBJECT_LIMIT_KILL_ON_JOB_CLOSE
        VB: JOB_OBJECT_LIMIT_KILL_ON_JOB_CLOSE
      nameWithType:
        CSharp: JOBOBJECTLIMIT.JOB_OBJECT_LIMIT_KILL_ON_JOB_CLOSE
        VB: JOBOBJECTLIMIT.JOB_OBJECT_LIMIT_KILL_ON_JOB_CLOSE
      qualifiedName:
        CSharp: IMS_Library.JOBOBJECTLIMIT.JOB_OBJECT_LIMIT_KILL_ON_JOB_CLOSE
        VB: IMS_Library.JOBOBJECTLIMIT.JOB_OBJECT_LIMIT_KILL_ON_JOB_CLOSE
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: JOB_OBJECT_LIMIT_KILL_ON_JOB_CLOSE
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\ChildProcessTracker.cs
        startLine: 122
      syntax:
        content:
          CSharp: JOB_OBJECT_LIMIT_KILL_ON_JOB_CLOSE = 8192U
          VB: JOB_OBJECT_LIMIT_KILL_ON_JOB_CLOSE = 8192UI
        return:
          type: IMS_Library.JOBOBJECTLIMIT
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: IMS_Library.IO_COUNTERS
    commentId: T:IMS_Library.IO_COUNTERS
    language: CSharp
    name:
      CSharp: IO_COUNTERS
      VB: IO_COUNTERS
    nameWithType:
      CSharp: IO_COUNTERS
      VB: IO_COUNTERS
    qualifiedName:
      CSharp: IMS_Library.IO_COUNTERS
      VB: IMS_Library.IO_COUNTERS
    type: Struct
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: IO_COUNTERS
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\ChildProcessTracker.cs
      startLine: 125
    syntax:
      content:
        CSharp: public struct IO_COUNTERS
        VB: Public Structure IO_COUNTERS
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: IMS_Library.IO_COUNTERS.ReadOperationCount
      commentId: F:IMS_Library.IO_COUNTERS.ReadOperationCount
      language: CSharp
      name:
        CSharp: ReadOperationCount
        VB: ReadOperationCount
      nameWithType:
        CSharp: IO_COUNTERS.ReadOperationCount
        VB: IO_COUNTERS.ReadOperationCount
      qualifiedName:
        CSharp: IMS_Library.IO_COUNTERS.ReadOperationCount
        VB: IMS_Library.IO_COUNTERS.ReadOperationCount
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ReadOperationCount
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\ChildProcessTracker.cs
        startLine: 128
      syntax:
        content:
          CSharp: public ulong ReadOperationCount
          VB: Public ReadOperationCount As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.IO_COUNTERS.WriteOperationCount
      commentId: F:IMS_Library.IO_COUNTERS.WriteOperationCount
      language: CSharp
      name:
        CSharp: WriteOperationCount
        VB: WriteOperationCount
      nameWithType:
        CSharp: IO_COUNTERS.WriteOperationCount
        VB: IO_COUNTERS.WriteOperationCount
      qualifiedName:
        CSharp: IMS_Library.IO_COUNTERS.WriteOperationCount
        VB: IMS_Library.IO_COUNTERS.WriteOperationCount
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: WriteOperationCount
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\ChildProcessTracker.cs
        startLine: 129
      syntax:
        content:
          CSharp: public ulong WriteOperationCount
          VB: Public WriteOperationCount As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.IO_COUNTERS.OtherOperationCount
      commentId: F:IMS_Library.IO_COUNTERS.OtherOperationCount
      language: CSharp
      name:
        CSharp: OtherOperationCount
        VB: OtherOperationCount
      nameWithType:
        CSharp: IO_COUNTERS.OtherOperationCount
        VB: IO_COUNTERS.OtherOperationCount
      qualifiedName:
        CSharp: IMS_Library.IO_COUNTERS.OtherOperationCount
        VB: IMS_Library.IO_COUNTERS.OtherOperationCount
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: OtherOperationCount
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\ChildProcessTracker.cs
        startLine: 130
      syntax:
        content:
          CSharp: public ulong OtherOperationCount
          VB: Public OtherOperationCount As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.IO_COUNTERS.ReadTransferCount
      commentId: F:IMS_Library.IO_COUNTERS.ReadTransferCount
      language: CSharp
      name:
        CSharp: ReadTransferCount
        VB: ReadTransferCount
      nameWithType:
        CSharp: IO_COUNTERS.ReadTransferCount
        VB: IO_COUNTERS.ReadTransferCount
      qualifiedName:
        CSharp: IMS_Library.IO_COUNTERS.ReadTransferCount
        VB: IMS_Library.IO_COUNTERS.ReadTransferCount
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ReadTransferCount
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\ChildProcessTracker.cs
        startLine: 131
      syntax:
        content:
          CSharp: public ulong ReadTransferCount
          VB: Public ReadTransferCount As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.IO_COUNTERS.WriteTransferCount
      commentId: F:IMS_Library.IO_COUNTERS.WriteTransferCount
      language: CSharp
      name:
        CSharp: WriteTransferCount
        VB: WriteTransferCount
      nameWithType:
        CSharp: IO_COUNTERS.WriteTransferCount
        VB: IO_COUNTERS.WriteTransferCount
      qualifiedName:
        CSharp: IMS_Library.IO_COUNTERS.WriteTransferCount
        VB: IMS_Library.IO_COUNTERS.WriteTransferCount
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: WriteTransferCount
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\ChildProcessTracker.cs
        startLine: 132
      syntax:
        content:
          CSharp: public ulong WriteTransferCount
          VB: Public WriteTransferCount As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.IO_COUNTERS.OtherTransferCount
      commentId: F:IMS_Library.IO_COUNTERS.OtherTransferCount
      language: CSharp
      name:
        CSharp: OtherTransferCount
        VB: OtherTransferCount
      nameWithType:
        CSharp: IO_COUNTERS.OtherTransferCount
        VB: IO_COUNTERS.OtherTransferCount
      qualifiedName:
        CSharp: IMS_Library.IO_COUNTERS.OtherTransferCount
        VB: IMS_Library.IO_COUNTERS.OtherTransferCount
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: OtherTransferCount
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\ChildProcessTracker.cs
        startLine: 133
      syntax:
        content:
          CSharp: public ulong OtherTransferCount
          VB: Public OtherTransferCount As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: IMS_Library.JOBOBJECT_EXTENDED_LIMIT_INFORMATION
    commentId: T:IMS_Library.JOBOBJECT_EXTENDED_LIMIT_INFORMATION
    language: CSharp
    name:
      CSharp: JOBOBJECT_EXTENDED_LIMIT_INFORMATION
      VB: JOBOBJECT_EXTENDED_LIMIT_INFORMATION
    nameWithType:
      CSharp: JOBOBJECT_EXTENDED_LIMIT_INFORMATION
      VB: JOBOBJECT_EXTENDED_LIMIT_INFORMATION
    qualifiedName:
      CSharp: IMS_Library.JOBOBJECT_EXTENDED_LIMIT_INFORMATION
      VB: IMS_Library.JOBOBJECT_EXTENDED_LIMIT_INFORMATION
    type: Struct
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: JOBOBJECT_EXTENDED_LIMIT_INFORMATION
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\ChildProcessTracker.cs
      startLine: 136
    syntax:
      content:
        CSharp: public struct JOBOBJECT_EXTENDED_LIMIT_INFORMATION
        VB: Public Structure JOBOBJECT_EXTENDED_LIMIT_INFORMATION
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: IMS_Library.JOBOBJECT_EXTENDED_LIMIT_INFORMATION.BasicLimitInformation
      commentId: F:IMS_Library.JOBOBJECT_EXTENDED_LIMIT_INFORMATION.BasicLimitInformation
      language: CSharp
      name:
        CSharp: BasicLimitInformation
        VB: BasicLimitInformation
      nameWithType:
        CSharp: JOBOBJECT_EXTENDED_LIMIT_INFORMATION.BasicLimitInformation
        VB: JOBOBJECT_EXTENDED_LIMIT_INFORMATION.BasicLimitInformation
      qualifiedName:
        CSharp: IMS_Library.JOBOBJECT_EXTENDED_LIMIT_INFORMATION.BasicLimitInformation
        VB: IMS_Library.JOBOBJECT_EXTENDED_LIMIT_INFORMATION.BasicLimitInformation
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: BasicLimitInformation
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\ChildProcessTracker.cs
        startLine: 139
      syntax:
        content:
          CSharp: public JOBOBJECT_BASIC_LIMIT_INFORMATION BasicLimitInformation
          VB: Public BasicLimitInformation As JOBOBJECT_BASIC_LIMIT_INFORMATION
        return:
          type: IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JOBOBJECT_EXTENDED_LIMIT_INFORMATION.IoInfo
      commentId: F:IMS_Library.JOBOBJECT_EXTENDED_LIMIT_INFORMATION.IoInfo
      language: CSharp
      name:
        CSharp: IoInfo
        VB: IoInfo
      nameWithType:
        CSharp: JOBOBJECT_EXTENDED_LIMIT_INFORMATION.IoInfo
        VB: JOBOBJECT_EXTENDED_LIMIT_INFORMATION.IoInfo
      qualifiedName:
        CSharp: IMS_Library.JOBOBJECT_EXTENDED_LIMIT_INFORMATION.IoInfo
        VB: IMS_Library.JOBOBJECT_EXTENDED_LIMIT_INFORMATION.IoInfo
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: IoInfo
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\ChildProcessTracker.cs
        startLine: 140
      syntax:
        content:
          CSharp: public IO_COUNTERS IoInfo
          VB: Public IoInfo As IO_COUNTERS
        return:
          type: IMS_Library.IO_COUNTERS
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JOBOBJECT_EXTENDED_LIMIT_INFORMATION.ProcessMemoryLimit
      commentId: F:IMS_Library.JOBOBJECT_EXTENDED_LIMIT_INFORMATION.ProcessMemoryLimit
      language: CSharp
      name:
        CSharp: ProcessMemoryLimit
        VB: ProcessMemoryLimit
      nameWithType:
        CSharp: JOBOBJECT_EXTENDED_LIMIT_INFORMATION.ProcessMemoryLimit
        VB: JOBOBJECT_EXTENDED_LIMIT_INFORMATION.ProcessMemoryLimit
      qualifiedName:
        CSharp: IMS_Library.JOBOBJECT_EXTENDED_LIMIT_INFORMATION.ProcessMemoryLimit
        VB: IMS_Library.JOBOBJECT_EXTENDED_LIMIT_INFORMATION.ProcessMemoryLimit
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ProcessMemoryLimit
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\ChildProcessTracker.cs
        startLine: 141
      syntax:
        content:
          CSharp: public UIntPtr ProcessMemoryLimit
          VB: Public ProcessMemoryLimit As UIntPtr
        return:
          type: System.UIntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JOBOBJECT_EXTENDED_LIMIT_INFORMATION.JobMemoryLimit
      commentId: F:IMS_Library.JOBOBJECT_EXTENDED_LIMIT_INFORMATION.JobMemoryLimit
      language: CSharp
      name:
        CSharp: JobMemoryLimit
        VB: JobMemoryLimit
      nameWithType:
        CSharp: JOBOBJECT_EXTENDED_LIMIT_INFORMATION.JobMemoryLimit
        VB: JOBOBJECT_EXTENDED_LIMIT_INFORMATION.JobMemoryLimit
      qualifiedName:
        CSharp: IMS_Library.JOBOBJECT_EXTENDED_LIMIT_INFORMATION.JobMemoryLimit
        VB: IMS_Library.JOBOBJECT_EXTENDED_LIMIT_INFORMATION.JobMemoryLimit
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: JobMemoryLimit
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\ChildProcessTracker.cs
        startLine: 142
      syntax:
        content:
          CSharp: public UIntPtr JobMemoryLimit
          VB: Public JobMemoryLimit As UIntPtr
        return:
          type: System.UIntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JOBOBJECT_EXTENDED_LIMIT_INFORMATION.PeakProcessMemoryUsed
      commentId: F:IMS_Library.JOBOBJECT_EXTENDED_LIMIT_INFORMATION.PeakProcessMemoryUsed
      language: CSharp
      name:
        CSharp: PeakProcessMemoryUsed
        VB: PeakProcessMemoryUsed
      nameWithType:
        CSharp: JOBOBJECT_EXTENDED_LIMIT_INFORMATION.PeakProcessMemoryUsed
        VB: JOBOBJECT_EXTENDED_LIMIT_INFORMATION.PeakProcessMemoryUsed
      qualifiedName:
        CSharp: IMS_Library.JOBOBJECT_EXTENDED_LIMIT_INFORMATION.PeakProcessMemoryUsed
        VB: IMS_Library.JOBOBJECT_EXTENDED_LIMIT_INFORMATION.PeakProcessMemoryUsed
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: PeakProcessMemoryUsed
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\ChildProcessTracker.cs
        startLine: 143
      syntax:
        content:
          CSharp: public UIntPtr PeakProcessMemoryUsed
          VB: Public PeakProcessMemoryUsed As UIntPtr
        return:
          type: System.UIntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JOBOBJECT_EXTENDED_LIMIT_INFORMATION.PeakJobMemoryUsed
      commentId: F:IMS_Library.JOBOBJECT_EXTENDED_LIMIT_INFORMATION.PeakJobMemoryUsed
      language: CSharp
      name:
        CSharp: PeakJobMemoryUsed
        VB: PeakJobMemoryUsed
      nameWithType:
        CSharp: JOBOBJECT_EXTENDED_LIMIT_INFORMATION.PeakJobMemoryUsed
        VB: JOBOBJECT_EXTENDED_LIMIT_INFORMATION.PeakJobMemoryUsed
      qualifiedName:
        CSharp: IMS_Library.JOBOBJECT_EXTENDED_LIMIT_INFORMATION.PeakJobMemoryUsed
        VB: IMS_Library.JOBOBJECT_EXTENDED_LIMIT_INFORMATION.PeakJobMemoryUsed
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: PeakJobMemoryUsed
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\ChildProcessTracker.cs
        startLine: 144
      syntax:
        content:
          CSharp: public UIntPtr PeakJobMemoryUsed
          VB: Public PeakJobMemoryUsed As UIntPtr
        return:
          type: System.UIntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: IMS_Library.Constants
    commentId: T:IMS_Library.Constants
    language: CSharp
    name:
      CSharp: Constants
      VB: Constants
    nameWithType:
      CSharp: Constants
      VB: Constants
    qualifiedName:
      CSharp: IMS_Library.Constants
      VB: IMS_Library.Constants
    type: Class
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: Constants
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Constants.cs
      startLine: 13
    summary: "\nThis class contains constant data that is necessary for program operation, like the paths to various IMS files.\n"
    example: []
    syntax:
      content:
        CSharp: public static class Constants
        VB: Public Module Constants
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: IMS_Library.Constants.ServiceName
      commentId: F:IMS_Library.Constants.ServiceName
      language: CSharp
      name:
        CSharp: ServiceName
        VB: ServiceName
      nameWithType:
        CSharp: Constants.ServiceName
        VB: Constants.ServiceName
      qualifiedName:
        CSharp: IMS_Library.Constants.ServiceName
        VB: IMS_Library.Constants.ServiceName
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ServiceName
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Constants.cs
        startLine: 18
      summary: "\nThis is the name of the IMS Windows service.\n"
      example: []
      syntax:
        content:
          CSharp: public const string ServiceName = "IMS"
          VB: Public Const ServiceName As String = "IMS"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: IMS_Library.Constants.DataLocation
      commentId: F:IMS_Library.Constants.DataLocation
      language: CSharp
      name:
        CSharp: DataLocation
        VB: DataLocation
      nameWithType:
        CSharp: Constants.DataLocation
        VB: Constants.DataLocation
      qualifiedName:
        CSharp: IMS_Library.Constants.DataLocation
        VB: IMS_Library.Constants.DataLocation
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: DataLocation
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Constants.cs
        startLine: 22
      summary: "\nThis is the folder, relative to the IMS root directory, that contains data necessary for IMS&apos;s operation.\n"
      example: []
      syntax:
        content:
          CSharp: public const string DataLocation = "/Data"
          VB: Public Const DataLocation As String = "/Data"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: IMS_Library.Constants.LogLocation
      commentId: F:IMS_Library.Constants.LogLocation
      language: CSharp
      name:
        CSharp: LogLocation
        VB: LogLocation
      nameWithType:
        CSharp: Constants.LogLocation
        VB: Constants.LogLocation
      qualifiedName:
        CSharp: IMS_Library.Constants.LogLocation
        VB: IMS_Library.Constants.LogLocation
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: LogLocation
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Constants.cs
        startLine: 26
      summary: "\nThis is the folder, relative to the IMS root directory, which contains IMS logfiles.\n"
      example: []
      syntax:
        content:
          CSharp: public const string LogLocation = "/Data/Log"
          VB: Public Const LogLocation As String = "/Data/Log"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: IMS_Library.Constants.ConfigurationFilePath
      commentId: F:IMS_Library.Constants.ConfigurationFilePath
      language: CSharp
      name:
        CSharp: ConfigurationFilePath
        VB: ConfigurationFilePath
      nameWithType:
        CSharp: Constants.ConfigurationFilePath
        VB: Constants.ConfigurationFilePath
      qualifiedName:
        CSharp: IMS_Library.Constants.ConfigurationFilePath
        VB: IMS_Library.Constants.ConfigurationFilePath
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ConfigurationFilePath
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Constants.cs
        startLine: 30
      summary: "\nThis is the path, relative to the IMS root directory, of the IMS settings file.\n"
      example: []
      syntax:
        content:
          CSharp: public const string ConfigurationFilePath = "/Data/imssettings.xml"
          VB: Public Const ConfigurationFilePath As String = "/Data/imssettings.xml"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: IMS_Library.Constants.ServerFolderLocation
      commentId: F:IMS_Library.Constants.ServerFolderLocation
      language: CSharp
      name:
        CSharp: ServerFolderLocation
        VB: ServerFolderLocation
      nameWithType:
        CSharp: Constants.ServerFolderLocation
        VB: Constants.ServerFolderLocation
      qualifiedName:
        CSharp: IMS_Library.Constants.ServerFolderLocation
        VB: IMS_Library.Constants.ServerFolderLocation
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ServerFolderLocation
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Constants.cs
        startLine: 34
      summary: "\nThis is the folder, relative to the IMS root directory, which contains Minecraft server data.\n"
      example: []
      syntax:
        content:
          CSharp: public const string ServerFolderLocation = "/Data/Server"
          VB: Public Const ServerFolderLocation As String = "/Data/Server"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: IMS_Library.Constants.WorldFolderLocation
      commentId: F:IMS_Library.Constants.WorldFolderLocation
      language: CSharp
      name:
        CSharp: WorldFolderLocation
        VB: WorldFolderLocation
      nameWithType:
        CSharp: Constants.WorldFolderLocation
        VB: Constants.WorldFolderLocation
      qualifiedName:
        CSharp: IMS_Library.Constants.WorldFolderLocation
        VB: IMS_Library.Constants.WorldFolderLocation
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: WorldFolderLocation
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Constants.cs
        startLine: 38
      summary: "\nThis is the folder, relative to the IMS root directory, which contains Minecraft world data.\n"
      example: []
      syntax:
        content:
          CSharp: public const string WorldFolderLocation = "/Data/World"
          VB: Public Const WorldFolderLocation As String = "/Data/World"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: IMS_Library.Constants.BinariesFolderLocation
      commentId: F:IMS_Library.Constants.BinariesFolderLocation
      language: CSharp
      name:
        CSharp: BinariesFolderLocation
        VB: BinariesFolderLocation
      nameWithType:
        CSharp: Constants.BinariesFolderLocation
        VB: Constants.BinariesFolderLocation
      qualifiedName:
        CSharp: IMS_Library.Constants.BinariesFolderLocation
        VB: IMS_Library.Constants.BinariesFolderLocation
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: BinariesFolderLocation
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Constants.cs
        startLine: 42
      summary: "\nThis is the folder, relative to the IMS root directory, which contains executable assemblies that IMS uses (like the JRE).\n"
      example: []
      syntax:
        content:
          CSharp: public const string BinariesFolderLocation = "/Data/Binaries"
          VB: Public Const BinariesFolderLocation As String = "/Data/Binaries"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: IMS_Library.Constants.ServerBinariesFolderLocation
      commentId: F:IMS_Library.Constants.ServerBinariesFolderLocation
      language: CSharp
      name:
        CSharp: ServerBinariesFolderLocation
        VB: ServerBinariesFolderLocation
      nameWithType:
        CSharp: Constants.ServerBinariesFolderLocation
        VB: Constants.ServerBinariesFolderLocation
      qualifiedName:
        CSharp: IMS_Library.Constants.ServerBinariesFolderLocation
        VB: IMS_Library.Constants.ServerBinariesFolderLocation
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ServerBinariesFolderLocation
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Constants.cs
        startLine: 46
      summary: "\nThis is the folder, relative to the IMS root directory, which contains Minecraft server executables.\n"
      example: []
      syntax:
        content:
          CSharp: public const string ServerBinariesFolderLocation = "/Data/Binaries/Servers"
          VB: Public Const ServerBinariesFolderLocation As String = "/Data/Binaries/Servers"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: IMS_Library.Constants.JavaExecutableLocation
      commentId: F:IMS_Library.Constants.JavaExecutableLocation
      language: CSharp
      name:
        CSharp: JavaExecutableLocation
        VB: JavaExecutableLocation
      nameWithType:
        CSharp: Constants.JavaExecutableLocation
        VB: Constants.JavaExecutableLocation
      qualifiedName:
        CSharp: IMS_Library.Constants.JavaExecutableLocation
        VB: IMS_Library.Constants.JavaExecutableLocation
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: JavaExecutableLocation
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Constants.cs
        startLine: 50
      summary: "\nThis is the path, relative to the IMS root directory, of the bundled Java runtime environment.\n"
      example: []
      syntax:
        content:
          CSharp: public const string JavaExecutableLocation = "/Data/Binaries/Java/bin/java.exe"
          VB: Public Const JavaExecutableLocation As String = "/Data/Binaries/Java/bin/java.exe"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: IMS_Library.Constants.ExecutionPath
      commentId: F:IMS_Library.Constants.ExecutionPath
      language: CSharp
      name:
        CSharp: ExecutionPath
        VB: ExecutionPath
      nameWithType:
        CSharp: Constants.ExecutionPath
        VB: Constants.ExecutionPath
      qualifiedName:
        CSharp: IMS_Library.Constants.ExecutionPath
        VB: IMS_Library.Constants.ExecutionPath
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ExecutionPath
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Constants.cs
        startLine: 54
      summary: "\nThis is the path of the current IMS root directory.\n"
      example: []
      syntax:
        content:
          CSharp: public static readonly string ExecutionPath
          VB: Public Shared ReadOnly ExecutionPath As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: IMS_Library.Constants.CheckToEnsureNATConnectedInterval
      commentId: F:IMS_Library.Constants.CheckToEnsureNATConnectedInterval
      language: CSharp
      name:
        CSharp: CheckToEnsureNATConnectedInterval
        VB: CheckToEnsureNATConnectedInterval
      nameWithType:
        CSharp: Constants.CheckToEnsureNATConnectedInterval
        VB: Constants.CheckToEnsureNATConnectedInterval
      qualifiedName:
        CSharp: IMS_Library.Constants.CheckToEnsureNATConnectedInterval
        VB: IMS_Library.Constants.CheckToEnsureNATConnectedInterval
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: CheckToEnsureNATConnectedInterval
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Constants.cs
        startLine: 59
      summary: "\nThis is how often the <xref href=\"IMS_Library.PortForwarder\" data-throw-if-not-resolved=\"false\"></xref> will check to see whether IMS is still connected to a UPnP router.\n"
      example: []
      syntax:
        content:
          CSharp: public const int CheckToEnsureNATConnectedInterval = 60000
          VB: Public Const CheckToEnsureNATConnectedInterval As Integer = 60000
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
      references:
        IMS_Library.PortForwarder: 
    - id: IMS_Library.Constants.MinecraftColorsHexAndFormattingCodes
      commentId: F:IMS_Library.Constants.MinecraftColorsHexAndFormattingCodes
      language: CSharp
      name:
        CSharp: MinecraftColorsHexAndFormattingCodes
        VB: MinecraftColorsHexAndFormattingCodes
      nameWithType:
        CSharp: Constants.MinecraftColorsHexAndFormattingCodes
        VB: Constants.MinecraftColorsHexAndFormattingCodes
      qualifiedName:
        CSharp: IMS_Library.Constants.MinecraftColorsHexAndFormattingCodes
        VB: IMS_Library.Constants.MinecraftColorsHexAndFormattingCodes
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: MinecraftColorsHexAndFormattingCodes
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Constants.cs
        startLine: 65
      summary: "\nThis is a dictionary which can be used to convert hex color codes (in the format &quot;#rrggbb&quot;) to Minecraft formatting letter codes.\n"
      example: []
      syntax:
        content:
          CSharp: public static readonly Dictionary<string, string> MinecraftColorsHexAndFormattingCodes
          VB: Public Shared ReadOnly MinecraftColorsHexAndFormattingCodes As Dictionary(Of String, String)
        return:
          type: System.Collections.Generic.Dictionary{System.String,System.String}
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
  - id: IMS_Library.Encryption
    commentId: T:IMS_Library.Encryption
    language: CSharp
    name:
      CSharp: Encryption
      VB: Encryption
    nameWithType:
      CSharp: Encryption
      VB: Encryption
    qualifiedName:
      CSharp: IMS_Library.Encryption
      VB: IMS_Library.Encryption
    type: Class
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: Encryption
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Encryption.cs
      startLine: 10
    summary: "\nThis static class contains methods for encrypting data using both symmetric and assymetric algorithms.\n"
    example: []
    syntax:
      content:
        CSharp: public static class Encryption
        VB: Public Module Encryption
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: IMS_Library.Encryption.GetRandomBytes(System.Byte)
      commentId: M:IMS_Library.Encryption.GetRandomBytes(System.Byte)
      language: CSharp
      name:
        CSharp: GetRandomBytes(Byte)
        VB: GetRandomBytes(Byte)
      nameWithType:
        CSharp: Encryption.GetRandomBytes(Byte)
        VB: Encryption.GetRandomBytes(Byte)
      qualifiedName:
        CSharp: IMS_Library.Encryption.GetRandomBytes(System.Byte)
        VB: IMS_Library.Encryption.GetRandomBytes(System.Byte)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetRandomBytes
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Encryption.cs
        startLine: 19
      summary: "\nRetrieves a securely-generated list of bytes for use in cryptographic operations.\n"
      example: []
      syntax:
        content:
          CSharp: public static byte[] GetRandomBytes(byte size)
          VB: Public Shared Function GetRandomBytes(size As Byte) As Byte()
        parameters:
        - id: size
          type: System.Byte
          description: The size of the byte array to return.
        return:
          type: System.Byte[]
          description: A byte array containing a series of randomized bytes.
      overload: IMS_Library.Encryption.GetRandomBytes*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: IMS_Library.Encryption.HashBytes(System.Byte[])
      commentId: M:IMS_Library.Encryption.HashBytes(System.Byte[])
      language: CSharp
      name:
        CSharp: HashBytes(Byte[])
        VB: HashBytes(Byte())
      nameWithType:
        CSharp: Encryption.HashBytes(Byte[])
        VB: Encryption.HashBytes(Byte())
      qualifiedName:
        CSharp: IMS_Library.Encryption.HashBytes(System.Byte[])
        VB: IMS_Library.Encryption.HashBytes(System.Byte())
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: HashBytes
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Encryption.cs
        startLine: 31
      summary: "\nHashes a series of bytes using the SHA512 encryption algorithm.\n"
      example: []
      syntax:
        content:
          CSharp: public static byte[] HashBytes(byte[] toEncrypt)
          VB: Public Shared Function HashBytes(toEncrypt As Byte()) As Byte()
        parameters:
        - id: toEncrypt
          type: System.Byte[]
          description: The series of bytes to encrypt.
        return:
          type: System.Byte[]
          description: An SHA512-hashed byte array.
      overload: IMS_Library.Encryption.HashBytes*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: IMS_Library.Encryption.HashBytes(System.Byte[],System.Byte[])
      commentId: M:IMS_Library.Encryption.HashBytes(System.Byte[],System.Byte[])
      language: CSharp
      name:
        CSharp: HashBytes(Byte[], Byte[])
        VB: HashBytes(Byte(), Byte())
      nameWithType:
        CSharp: Encryption.HashBytes(Byte[], Byte[])
        VB: Encryption.HashBytes(Byte(), Byte())
      qualifiedName:
        CSharp: IMS_Library.Encryption.HashBytes(System.Byte[], System.Byte[])
        VB: IMS_Library.Encryption.HashBytes(System.Byte(), System.Byte())
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: HashBytes
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Encryption.cs
        startLine: 42
      summary: "\nHashes a series of bytes, appended with a nonce, using the SHA512 encryption algorithm.\n"
      example: []
      syntax:
        content:
          CSharp: public static byte[] HashBytes(byte[] toEncrypt, byte[] nonce)
          VB: Public Shared Function HashBytes(toEncrypt As Byte(), nonce As Byte()) As Byte()
        parameters:
        - id: toEncrypt
          type: System.Byte[]
          description: The series of bytes to encrypt.
        - id: nonce
          type: System.Byte[]
          description: The random sequence to append.
        return:
          type: System.Byte[]
          description: An SHA512-hashed byte array.
      overload: IMS_Library.Encryption.HashBytes*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: IMS_Library.Encryption.GenerateAsymmetricKeyPair
      commentId: M:IMS_Library.Encryption.GenerateAsymmetricKeyPair
      language: CSharp
      name:
        CSharp: GenerateAsymmetricKeyPair()
        VB: GenerateAsymmetricKeyPair()
      nameWithType:
        CSharp: Encryption.GenerateAsymmetricKeyPair()
        VB: Encryption.GenerateAsymmetricKeyPair()
      qualifiedName:
        CSharp: IMS_Library.Encryption.GenerateAsymmetricKeyPair()
        VB: IMS_Library.Encryption.GenerateAsymmetricKeyPair()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GenerateAsymmetricKeyPair
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Encryption.cs
        startLine: 53
      summary: "\nGenerates an asymmetric keypair for encryption.\n"
      example: []
      syntax:
        content:
          CSharp: public static Tuple<RSAParameters, RSAParameters> GenerateAsymmetricKeyPair()
          VB: Public Shared Function GenerateAsymmetricKeyPair As Tuple(Of RSAParameters, RSAParameters)
        return:
          type: System.Tuple{System.Security.Cryptography.RSAParameters,System.Security.Cryptography.RSAParameters}
          description: A Tuple which contains the public encryption information, and then the private decryption information.
      overload: IMS_Library.Encryption.GenerateAsymmetricKeyPair*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: IMS_Library.Encryption.DecryptBytesAsymmetric(System.Byte[],System.Security.Cryptography.RSAParameters)
      commentId: M:IMS_Library.Encryption.DecryptBytesAsymmetric(System.Byte[],System.Security.Cryptography.RSAParameters)
      language: CSharp
      name:
        CSharp: DecryptBytesAsymmetric(Byte[], RSAParameters)
        VB: DecryptBytesAsymmetric(Byte(), RSAParameters)
      nameWithType:
        CSharp: Encryption.DecryptBytesAsymmetric(Byte[], RSAParameters)
        VB: Encryption.DecryptBytesAsymmetric(Byte(), RSAParameters)
      qualifiedName:
        CSharp: IMS_Library.Encryption.DecryptBytesAsymmetric(System.Byte[], System.Security.Cryptography.RSAParameters)
        VB: IMS_Library.Encryption.DecryptBytesAsymmetric(System.Byte(), System.Security.Cryptography.RSAParameters)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: DecryptBytesAsymmetric
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Encryption.cs
        startLine: 71
      summary: "\nDecrypts a series of bytes using a key.\n"
      example: []
      syntax:
        content:
          CSharp: public static byte[] DecryptBytesAsymmetric(byte[] data, RSAParameters key)
          VB: Public Shared Function DecryptBytesAsymmetric(data As Byte(), key As RSAParameters) As Byte()
        parameters:
        - id: data
          type: System.Byte[]
          description: The byte array to decrypt.
        - id: key
          type: System.Security.Cryptography.RSAParameters
          description: The key to use in decryption.
        return:
          type: System.Byte[]
          description: The decrypted byte array.
      overload: IMS_Library.Encryption.DecryptBytesAsymmetric*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: IMS_Library.Encryption.EncryptBytesAsymmetric(System.Byte[],System.Security.Cryptography.RSAParameters)
      commentId: M:IMS_Library.Encryption.EncryptBytesAsymmetric(System.Byte[],System.Security.Cryptography.RSAParameters)
      language: CSharp
      name:
        CSharp: EncryptBytesAsymmetric(Byte[], RSAParameters)
        VB: EncryptBytesAsymmetric(Byte(), RSAParameters)
      nameWithType:
        CSharp: Encryption.EncryptBytesAsymmetric(Byte[], RSAParameters)
        VB: Encryption.EncryptBytesAsymmetric(Byte(), RSAParameters)
      qualifiedName:
        CSharp: IMS_Library.Encryption.EncryptBytesAsymmetric(System.Byte[], System.Security.Cryptography.RSAParameters)
        VB: IMS_Library.Encryption.EncryptBytesAsymmetric(System.Byte(), System.Security.Cryptography.RSAParameters)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: EncryptBytesAsymmetric
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Encryption.cs
        startLine: 86
      summary: "\nEncrypts a series of bytes using a key.\n"
      example: []
      syntax:
        content:
          CSharp: public static byte[] EncryptBytesAsymmetric(byte[] data, RSAParameters key)
          VB: Public Shared Function EncryptBytesAsymmetric(data As Byte(), key As RSAParameters) As Byte()
        parameters:
        - id: data
          type: System.Byte[]
          description: The data to encrypt.
        - id: key
          type: System.Security.Cryptography.RSAParameters
          description: The encryption key to use.
        return:
          type: System.Byte[]
          description: The encrypted byte array.
      overload: IMS_Library.Encryption.EncryptBytesAsymmetric*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: IMS_Library.Extensions
    commentId: T:IMS_Library.Extensions
    language: CSharp
    name:
      CSharp: Extensions
      VB: Extensions
    nameWithType:
      CSharp: Extensions
      VB: Extensions
    qualifiedName:
      CSharp: IMS_Library.Extensions
      VB: IMS_Library.Extensions
    type: Class
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: Extensions
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Extensions.cs
      startLine: 12
    summary: "\nProvides general-purpose extension methods for various operations.\n"
    example: []
    syntax:
      content:
        CSharp: public static class Extensions
        VB: Public Module Extensions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: IMS_Library.Extensions.Remove``2(System.Collections.Concurrent.ConcurrentDictionary{``0,``1},``0)
      commentId: M:IMS_Library.Extensions.Remove``2(System.Collections.Concurrent.ConcurrentDictionary{``0,``1},``0)
      language: CSharp
      name:
        CSharp: Remove<K, V>(ConcurrentDictionary<K, V>, K)
        VB: Remove(Of K, V)(ConcurrentDictionary(Of K, V), K)
      nameWithType:
        CSharp: Extensions.Remove<K, V>(ConcurrentDictionary<K, V>, K)
        VB: Extensions.Remove(Of K, V)(ConcurrentDictionary(Of K, V), K)
      qualifiedName:
        CSharp: IMS_Library.Extensions.Remove<K, V>(System.Collections.Concurrent.ConcurrentDictionary<K, V>, K)
        VB: IMS_Library.Extensions.Remove(Of K, V)(System.Collections.Concurrent.ConcurrentDictionary(Of K, V), K)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Remove
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Extensions.cs
        startLine: 22
      summary: "\nRemoves an object from a <xref href=\"System.Collections.Concurrent.ConcurrentDictionary%602\" data-throw-if-not-resolved=\"false\"></xref> using its key.\n"
      example: []
      syntax:
        content:
          CSharp: public static bool Remove<K, V>(this ConcurrentDictionary<K, V> dictionary, K key)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function Remove(Of K, V)(dictionary As ConcurrentDictionary(Of K, V), key As K) As Boolean
        parameters:
        - id: dictionary
          type: System.Collections.Concurrent.ConcurrentDictionary{{K},{V}}
          description: The dictionary to remove an item from.
        - id: key
          type: '{K}'
          description: The key of the item to remove.
        typeParameters:
        - id: K
          description: The type of the key.
        - id: V
          description: The type of value that the dictionary stores.
        return:
          type: System.Boolean
          description: A <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> that represents whether the item was found/removed from the dictionary successfully.
      overload: IMS_Library.Extensions.Remove*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        System.Collections.Concurrent.ConcurrentDictionary`2: 
        System.Boolean: 
    - isExtensionMethod: true
      id: IMS_Library.Extensions.IsFileLocked(System.IO.FileInfo)
      commentId: M:IMS_Library.Extensions.IsFileLocked(System.IO.FileInfo)
      language: CSharp
      name:
        CSharp: IsFileLocked(FileInfo)
        VB: IsFileLocked(FileInfo)
      nameWithType:
        CSharp: Extensions.IsFileLocked(FileInfo)
        VB: Extensions.IsFileLocked(FileInfo)
      qualifiedName:
        CSharp: IMS_Library.Extensions.IsFileLocked(System.IO.FileInfo)
        VB: IMS_Library.Extensions.IsFileLocked(System.IO.FileInfo)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: IsFileLocked
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Extensions.cs
        startLine: 33
      summary: "\nThis method checks whether another program has a file lock on the specified file.\n"
      example: []
      syntax:
        content:
          CSharp: public static bool IsFileLocked(this FileInfo file)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function IsFileLocked(file As FileInfo) As Boolean
        parameters:
        - id: file
          type: System.IO.FileInfo
          description: The file to check.
        return:
          type: System.Boolean
          description: Whether the file is locked or not.
      overload: IMS_Library.Extensions.IsFileLocked*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: IMS_Library.Extensions.CopyFolder(System.String,System.String)
      commentId: M:IMS_Library.Extensions.CopyFolder(System.String,System.String)
      language: CSharp
      name:
        CSharp: CopyFolder(String, String)
        VB: CopyFolder(String, String)
      nameWithType:
        CSharp: Extensions.CopyFolder(String, String)
        VB: Extensions.CopyFolder(String, String)
      qualifiedName:
        CSharp: IMS_Library.Extensions.CopyFolder(System.String, System.String)
        VB: IMS_Library.Extensions.CopyFolder(System.String, System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: CopyFolder
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Extensions.cs
        startLine: 60
      summary: "\nCopies an entire folder to a different directory, including subdirectories.\n"
      example: []
      syntax:
        content:
          CSharp: public static void CopyFolder(string sourceDirectory, string targetDirectory)
          VB: Public Shared Sub CopyFolder(sourceDirectory As String, targetDirectory As String)
        parameters:
        - id: sourceDirectory
          type: System.String
          description: The path of the directory to copy.
        - id: targetDirectory
          type: System.String
          description: The path of the newly-created clone directory.
      overload: IMS_Library.Extensions.CopyFolder*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: IMS_Library.FirewallController
    commentId: T:IMS_Library.FirewallController
    language: CSharp
    name:
      CSharp: FirewallController
      VB: FirewallController
    nameWithType:
      CSharp: FirewallController
      VB: FirewallController
    qualifiedName:
      CSharp: IMS_Library.FirewallController
      VB: IMS_Library.FirewallController
    type: Class
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: FirewallController
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\FirewallController.cs
      startLine: 12
    summary: "\nThis is a manager class which provides methods to add/remove Windows firewall exceptions.\n"
    example: []
    syntax:
      content:
        CSharp: public sealed class FirewallController
        VB: Public NotInheritable Class FirewallController
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: IMS_Library.FirewallController.CreateFirewallExecutableException(System.String,System.String)
      commentId: M:IMS_Library.FirewallController.CreateFirewallExecutableException(System.String,System.String)
      language: CSharp
      name:
        CSharp: CreateFirewallExecutableException(String, String)
        VB: CreateFirewallExecutableException(String, String)
      nameWithType:
        CSharp: FirewallController.CreateFirewallExecutableException(String, String)
        VB: FirewallController.CreateFirewallExecutableException(String, String)
      qualifiedName:
        CSharp: IMS_Library.FirewallController.CreateFirewallExecutableException(System.String, System.String)
        VB: IMS_Library.FirewallController.CreateFirewallExecutableException(System.String, System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: CreateFirewallExecutableException
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\FirewallController.cs
        startLine: 19
      summary: "\nAllows an executable through the Windows firewall.\n"
      example: []
      syntax:
        content:
          CSharp: public void CreateFirewallExecutableException(string name, string path)
          VB: Public Sub CreateFirewallExecutableException(name As String, path As String)
        parameters:
        - id: name
          type: System.String
          description: The name of the exception to create.  This name should be unique (and probably should contain a <xref href="System.Guid" data-throw-if-not-resolved="false"></xref>).
        - id: path
          type: System.String
          description: The path of the executable to allow through the Windows firewall.
      overload: IMS_Library.FirewallController.CreateFirewallExecutableException*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        System.Guid: 
    - id: IMS_Library.FirewallController.RemoveFirewallExecutableException(System.String)
      commentId: M:IMS_Library.FirewallController.RemoveFirewallExecutableException(System.String)
      language: CSharp
      name:
        CSharp: RemoveFirewallExecutableException(String)
        VB: RemoveFirewallExecutableException(String)
      nameWithType:
        CSharp: FirewallController.RemoveFirewallExecutableException(String)
        VB: FirewallController.RemoveFirewallExecutableException(String)
      qualifiedName:
        CSharp: IMS_Library.FirewallController.RemoveFirewallExecutableException(System.String)
        VB: IMS_Library.FirewallController.RemoveFirewallExecutableException(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: RemoveFirewallExecutableException
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\FirewallController.cs
        startLine: 35
      summary: "\nRemoves a Windows firewall exception for the specified executable.\n"
      example: []
      syntax:
        content:
          CSharp: public void RemoveFirewallExecutableException(string name)
          VB: Public Sub RemoveFirewallExecutableException(name As String)
        parameters:
        - id: name
          type: System.String
          description: The name of the exception to remove.
      overload: IMS_Library.FirewallController.RemoveFirewallExecutableException*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.FirewallController.CreateFirewallPortException(System.Int32)
      commentId: M:IMS_Library.FirewallController.CreateFirewallPortException(System.Int32)
      language: CSharp
      name:
        CSharp: CreateFirewallPortException(Int32)
        VB: CreateFirewallPortException(Int32)
      nameWithType:
        CSharp: FirewallController.CreateFirewallPortException(Int32)
        VB: FirewallController.CreateFirewallPortException(Int32)
      qualifiedName:
        CSharp: IMS_Library.FirewallController.CreateFirewallPortException(System.Int32)
        VB: IMS_Library.FirewallController.CreateFirewallPortException(System.Int32)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: CreateFirewallPortException
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\FirewallController.cs
        startLine: 51
      summary: "\nAllows a port through the Windows firewall.\n"
      example: []
      syntax:
        content:
          CSharp: public void CreateFirewallPortException(int port)
          VB: Public Sub CreateFirewallPortException(port As Integer)
        parameters:
        - id: port
          type: System.Int32
          description: The port number to allow through the firewall.
      overload: IMS_Library.FirewallController.CreateFirewallPortException*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.FirewallController.RemoveFirewallPortException(System.Int32)
      commentId: M:IMS_Library.FirewallController.RemoveFirewallPortException(System.Int32)
      language: CSharp
      name:
        CSharp: RemoveFirewallPortException(Int32)
        VB: RemoveFirewallPortException(Int32)
      nameWithType:
        CSharp: FirewallController.RemoveFirewallPortException(Int32)
        VB: FirewallController.RemoveFirewallPortException(Int32)
      qualifiedName:
        CSharp: IMS_Library.FirewallController.RemoveFirewallPortException(System.Int32)
        VB: IMS_Library.FirewallController.RemoveFirewallPortException(System.Int32)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: RemoveFirewallPortException
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\FirewallController.cs
        startLine: 67
      summary: "\nRemoves a port exception from the Windows firewall.\n"
      example: []
      syntax:
        content:
          CSharp: public void RemoveFirewallPortException(int port)
          VB: Public Sub RemoveFirewallPortException(port As Integer)
        parameters:
        - id: port
          type: System.Int32
          description: The port number to remove.
      overload: IMS_Library.FirewallController.RemoveFirewallPortException*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: IMS_Library.IMS
    commentId: T:IMS_Library.IMS
    language: CSharp
    name:
      CSharp: IMS
      VB: IMS
    nameWithType:
      CSharp: IMS
      VB: IMS
    qualifiedName:
      CSharp: IMS_Library.IMS
      VB: IMS_Library.IMS
    type: Class
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: IMS
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\IMS.cs
      startLine: 22
    summary: "\nRepresents the core Windows service which maintains Minecraft servers in the background.\n"
    example: []
    syntax:
      content:
        CSharp: 'public sealed class IMS : ServiceBase, IComponent, IDisposable'
        VB: >-
          Public NotInheritable Class IMS

              Inherits ServiceBase

              Implements IComponent, IDisposable
    inheritance:
    - System.Object
    - System.MarshalByRefObject
    - System.ComponentModel.Component
    - System.ServiceProcess.ServiceBase
    implements:
    - System.ComponentModel.IComponent
    - System.IDisposable
    inheritedMembers:
    - System.ServiceProcess.ServiceBase.MaxNameLength
    - System.ServiceProcess.ServiceBase.Dispose(System.Boolean)
    - System.ServiceProcess.ServiceBase.OnContinue
    - System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)
    - System.ServiceProcess.ServiceBase.OnPause
    - System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)
    - System.ServiceProcess.ServiceBase.OnSessionChange(System.ServiceProcess.SessionChangeDescription)
    - System.ServiceProcess.ServiceBase.OnShutdown
    - System.ServiceProcess.ServiceBase.RequestAdditionalTime(System.Int32)
    - System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase)
    - System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase[])
    - System.ServiceProcess.ServiceBase.Stop
    - System.ServiceProcess.ServiceBase.AutoLog
    - System.ServiceProcess.ServiceBase.CanHandlePowerEvent
    - System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent
    - System.ServiceProcess.ServiceBase.CanPauseAndContinue
    - System.ServiceProcess.ServiceBase.CanShutdown
    - System.ServiceProcess.ServiceBase.CanStop
    - System.ServiceProcess.ServiceBase.EventLog
    - System.ServiceProcess.ServiceBase.ExitCode
    - System.ServiceProcess.ServiceBase.ServiceHandle
    - System.ServiceProcess.ServiceBase.ServiceName
    - System.ComponentModel.Component.Dispose
    - System.ComponentModel.Component.GetService(System.Type)
    - System.ComponentModel.Component.ToString
    - System.ComponentModel.Component.CanRaiseEvents
    - System.ComponentModel.Component.Container
    - System.ComponentModel.Component.DesignMode
    - System.ComponentModel.Component.Events
    - System.ComponentModel.Component.Site
    - System.ComponentModel.Component.Disposed
    - System.MarshalByRefObject.GetLifetimeService
    - System.MarshalByRefObject.InitializeLifetimeService
    - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: IMS_Library.IMS.Instance
      commentId: P:IMS_Library.IMS.Instance
      language: CSharp
      name:
        CSharp: Instance
        VB: Instance
      nameWithType:
        CSharp: IMS.Instance
        VB: IMS.Instance
      qualifiedName:
        CSharp: IMS_Library.IMS.Instance
        VB: IMS_Library.IMS.Instance
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Instance
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\IMS.cs
        startLine: 27
      summary: "\nReturns the currently running instance of IMS.\n"
      example: []
      syntax:
        content:
          CSharp: public static IMS Instance { get; }
          VB: Public Shared ReadOnly Property Instance As IMS
        parameters: []
        return:
          type: IMS_Library.IMS
      overload: IMS_Library.IMS.Instance*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: IMS_Library.IMS.CurrentSettings
      commentId: P:IMS_Library.IMS.CurrentSettings
      language: CSharp
      name:
        CSharp: CurrentSettings
        VB: CurrentSettings
      nameWithType:
        CSharp: IMS.CurrentSettings
        VB: IMS.CurrentSettings
      qualifiedName:
        CSharp: IMS_Library.IMS.CurrentSettings
        VB: IMS_Library.IMS.CurrentSettings
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: CurrentSettings
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\IMS.cs
        startLine: 32
      summary: "\nReturns the currently active configuration for IMS.  To set the currently active configuration, use <xref href=\"IMS_Library.IMS.ChangeSettings(IMS_Library.IMSSettings)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
      example: []
      syntax:
        content:
          CSharp: public IMSSettings CurrentSettings { get; }
          VB: Public ReadOnly Property CurrentSettings As IMSSettings
        parameters: []
        return:
          type: IMS_Library.IMSSettings
      overload: IMS_Library.IMS.CurrentSettings*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
      references:
        IMS_Library.IMS.ChangeSettings(IMS_Library.IMSSettings): 
    - id: IMS_Library.IMS.PortManager
      commentId: P:IMS_Library.IMS.PortManager
      language: CSharp
      name:
        CSharp: PortManager
        VB: PortManager
      nameWithType:
        CSharp: IMS.PortManager
        VB: IMS.PortManager
      qualifiedName:
        CSharp: IMS_Library.IMS.PortManager
        VB: IMS_Library.IMS.PortManager
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: PortManager
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\IMS.cs
        startLine: 36
      summary: "\nReturns the current port manager, which can be used to forward/remove forwarded ports from UPnP routers.  Services are in charge of adding/removing their own ports.\n"
      example: []
      syntax:
        content:
          CSharp: public PortForwarder PortManager { get; }
          VB: Public ReadOnly Property PortManager As PortForwarder
        parameters: []
        return:
          type: IMS_Library.PortForwarder
      overload: IMS_Library.IMS.PortManager*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: IMS_Library.IMS.FirewallManager
      commentId: P:IMS_Library.IMS.FirewallManager
      language: CSharp
      name:
        CSharp: FirewallManager
        VB: FirewallManager
      nameWithType:
        CSharp: IMS.FirewallManager
        VB: IMS.FirewallManager
      qualifiedName:
        CSharp: IMS_Library.IMS.FirewallManager
        VB: IMS_Library.IMS.FirewallManager
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: FirewallManager
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\IMS.cs
        startLine: 40
      summary: "\nReturns the current firewall manager, which can be used to bypass the Windows firewall.  Services are in charge of adding/removing their own firewall exceptions.\n"
      example: []
      syntax:
        content:
          CSharp: public FirewallController FirewallManager { get; }
          VB: Public ReadOnly Property FirewallManager As FirewallController
        parameters: []
        return:
          type: IMS_Library.FirewallController
      overload: IMS_Library.IMS.FirewallManager*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: IMS_Library.IMS.WorldManager
      commentId: P:IMS_Library.IMS.WorldManager
      language: CSharp
      name:
        CSharp: WorldManager
        VB: WorldManager
      nameWithType:
        CSharp: IMS.WorldManager
        VB: IMS.WorldManager
      qualifiedName:
        CSharp: IMS_Library.IMS.WorldManager
        VB: IMS_Library.IMS.WorldManager
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: WorldManager
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\IMS.cs
        startLine: 44
      summary: "\nReturns the current world manager, which is used to regulate the storage and backup of Minecraft worlds.\n"
      example: []
      syntax:
        content:
          CSharp: public WorldController WorldManager { get; }
          VB: Public ReadOnly Property WorldManager As WorldController
        parameters: []
        return:
          type: IMS_Library.WorldController
      overload: IMS_Library.IMS.WorldManager*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: IMS_Library.IMS.WebServer
      commentId: P:IMS_Library.IMS.WebServer
      language: CSharp
      name:
        CSharp: WebServer
        VB: WebServer
      nameWithType:
        CSharp: IMS.WebServer
        VB: IMS.WebServer
      qualifiedName:
        CSharp: IMS_Library.IMS.WebServer
        VB: IMS_Library.IMS.WebServer
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: WebServer
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\IMS.cs
        startLine: 48
      summary: "\nReturns the current web interface manager, which runs the administrator console for user configuration of IMS.\n"
      example: []
      syntax:
        content:
          CSharp: public WebInterface WebServer { get; set; }
          VB: Public Property WebServer As WebInterface
        parameters: []
        return:
          type: IMS_Library.WebInterface
      overload: IMS_Library.IMS.WebServer*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: IMS_Library.IMS.ServerManager
      commentId: P:IMS_Library.IMS.ServerManager
      language: CSharp
      name:
        CSharp: ServerManager
        VB: ServerManager
      nameWithType:
        CSharp: IMS.ServerManager
        VB: IMS.ServerManager
      qualifiedName:
        CSharp: IMS_Library.IMS.ServerManager
        VB: IMS_Library.IMS.ServerManager
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ServerManager
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\IMS.cs
        startLine: 52
      summary: "\nReturns the current server manager, which regulates all loaded Minecraft server configurations.\n"
      example: []
      syntax:
        content:
          CSharp: public ServerController ServerManager { get; }
          VB: Public ReadOnly Property ServerManager As ServerController
        parameters: []
        return:
          type: IMS_Library.ServerController
      overload: IMS_Library.IMS.ServerManager*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: IMS_Library.IMS.PluginManager
      commentId: P:IMS_Library.IMS.PluginManager
      language: CSharp
      name:
        CSharp: PluginManager
        VB: PluginManager
      nameWithType:
        CSharp: IMS.PluginManager
        VB: IMS.PluginManager
      qualifiedName:
        CSharp: IMS_Library.IMS.PluginManager
        VB: IMS_Library.IMS.PluginManager
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: PluginManager
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\IMS.cs
        startLine: 56
      summary: "\nReturns the current plugin manager, which regulates user-defined IMS plugins.\n"
      example: []
      syntax:
        content:
          CSharp: public PluginController PluginManager { get; }
          VB: Public ReadOnly Property PluginManager As PluginController
        parameters: []
        return:
          type: IMS_Library.PluginController
      overload: IMS_Library.IMS.PluginManager*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: IMS_Library.IMS.VersionManager
      commentId: P:IMS_Library.IMS.VersionManager
      language: CSharp
      name:
        CSharp: VersionManager
        VB: VersionManager
      nameWithType:
        CSharp: IMS.VersionManager
        VB: IMS.VersionManager
      qualifiedName:
        CSharp: IMS_Library.IMS.VersionManager
        VB: IMS_Library.IMS.VersionManager
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: VersionManager
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\IMS.cs
        startLine: 60
      summary: "\nReturns the version provider, which can be used to fetch data about Minecraft server versions or download them off the internet.\n"
      example: []
      syntax:
        content:
          CSharp: public MinecraftVersionProvider VersionManager { get; }
          VB: Public ReadOnly Property VersionManager As MinecraftVersionProvider
        parameters: []
        return:
          type: IMS_Library.MinecraftVersionProvider
      overload: IMS_Library.IMS.VersionManager*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: IMS_Library.IMS.#ctor
      commentId: M:IMS_Library.IMS.#ctor
      language: CSharp
      name:
        CSharp: IMS()
        VB: IMS()
      nameWithType:
        CSharp: IMS.IMS()
        VB: IMS.IMS()
      qualifiedName:
        CSharp: IMS_Library.IMS.IMS()
        VB: IMS_Library.IMS.IMS()
      type: Constructor
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: .ctor
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\IMS.cs
        startLine: 64
      syntax:
        content:
          CSharp: public IMS()
          VB: Public Sub New
      overload: IMS_Library.IMS.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.IMS.SimulateService
      commentId: M:IMS_Library.IMS.SimulateService
      language: CSharp
      name:
        CSharp: SimulateService()
        VB: SimulateService()
      nameWithType:
        CSharp: IMS.SimulateService()
        VB: IMS.SimulateService()
      qualifiedName:
        CSharp: IMS_Library.IMS.SimulateService()
        VB: IMS_Library.IMS.SimulateService()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: SimulateService
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\IMS.cs
        startLine: 74
      syntax:
        content:
          CSharp: public void SimulateService()
          VB: Public Sub SimulateService
      overload: IMS_Library.IMS.SimulateService*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.IMS.Restart
      commentId: M:IMS_Library.IMS.Restart
      language: CSharp
      name:
        CSharp: Restart()
        VB: Restart()
      nameWithType:
        CSharp: IMS.Restart()
        VB: IMS.Restart()
      qualifiedName:
        CSharp: IMS_Library.IMS.Restart()
        VB: IMS_Library.IMS.Restart()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Restart
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\IMS.cs
        startLine: 84
      summary: "\nRestarts the IMS Windows service.\n"
      example: []
      syntax:
        content:
          CSharp: public void Restart()
          VB: Public Sub Restart
      overload: IMS_Library.IMS.Restart*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.IMS.Stop(System.Int32)
      commentId: M:IMS_Library.IMS.Stop(System.Int32)
      language: CSharp
      name:
        CSharp: Stop(Int32)
        VB: Stop(Int32)
      nameWithType:
        CSharp: IMS.Stop(Int32)
        VB: IMS.Stop(Int32)
      qualifiedName:
        CSharp: IMS_Library.IMS.Stop(System.Int32)
        VB: IMS_Library.IMS.Stop(System.Int32)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Stop
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\IMS.cs
        startLine: 93
      summary: "\nStops the IMS Windows service, shutting down with the specified error code.\n"
      example: []
      syntax:
        content:
          CSharp: public void Stop(int error)
          VB: Public Sub Stop(error As Integer)
        parameters:
        - id: error
          type: System.Int32
          description: The error code to return.
      overload: IMS_Library.IMS.Stop*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.IMS.OnStart(System.String[])
      commentId: M:IMS_Library.IMS.OnStart(System.String[])
      language: CSharp
      name:
        CSharp: OnStart(String[])
        VB: OnStart(String())
      nameWithType:
        CSharp: IMS.OnStart(String[])
        VB: IMS.OnStart(String())
      qualifiedName:
        CSharp: IMS_Library.IMS.OnStart(System.String[])
        VB: IMS_Library.IMS.OnStart(System.String())
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: OnStart
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\IMS.cs
        startLine: 130
      syntax:
        content:
          CSharp: protected override void OnStart(string[] args)
          VB: Protected Overrides Sub OnStart(args As String())
        parameters:
        - id: args
          type: System.String[]
      overload: IMS_Library.IMS.OnStart*
      overridden: System.ServiceProcess.ServiceBase.OnStart(System.String[])
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: IMS_Library.IMS.OnStop
      commentId: M:IMS_Library.IMS.OnStop
      language: CSharp
      name:
        CSharp: OnStop()
        VB: OnStop()
      nameWithType:
        CSharp: IMS.OnStop()
        VB: IMS.OnStop()
      qualifiedName:
        CSharp: IMS_Library.IMS.OnStop()
        VB: IMS_Library.IMS.OnStop()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: OnStop
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\IMS.cs
        startLine: 135
      syntax:
        content:
          CSharp: protected override void OnStop()
          VB: Protected Overrides Sub OnStop
      overload: IMS_Library.IMS.OnStop*
      overridden: System.ServiceProcess.ServiceBase.OnStop
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: IMS_Library.IMS.ChangeSettings(IMS_Library.IMSSettings)
      commentId: M:IMS_Library.IMS.ChangeSettings(IMS_Library.IMSSettings)
      language: CSharp
      name:
        CSharp: ChangeSettings(IMSSettings)
        VB: ChangeSettings(IMSSettings)
      nameWithType:
        CSharp: IMS.ChangeSettings(IMSSettings)
        VB: IMS.ChangeSettings(IMSSettings)
      qualifiedName:
        CSharp: IMS_Library.IMS.ChangeSettings(IMS_Library.IMSSettings)
        VB: IMS_Library.IMS.ChangeSettings(IMS_Library.IMSSettings)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ChangeSettings
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\IMS.cs
        startLine: 155
      summary: "\nUpdates <xref href=\"IMS_Library.IMS.CurrentSettings\" data-throw-if-not-resolved=\"false\"></xref>, making changes to other services (like forwarding ports) as necessary.\n"
      example: []
      syntax:
        content:
          CSharp: public void ChangeSettings(IMSSettings newSettings)
          VB: Public Sub ChangeSettings(newSettings As IMSSettings)
        parameters:
        - id: newSettings
          type: IMS_Library.IMSSettings
          description: The settings to apply.
      overload: IMS_Library.IMS.ChangeSettings*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        IMS_Library.IMS.CurrentSettings: 
  - id: IMS_Library.IMSConfiguration
    commentId: T:IMS_Library.IMSConfiguration
    language: CSharp
    name:
      CSharp: IMSConfiguration
      VB: IMSConfiguration
    nameWithType:
      CSharp: IMSConfiguration
      VB: IMSConfiguration
    qualifiedName:
      CSharp: IMS_Library.IMSConfiguration
      VB: IMS_Library.IMSConfiguration
    type: Class
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: IMSConfiguration
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\IMSConfiguration.cs
      startLine: 15
    summary: "\nThis is a base class that can be used to easily store/serialize configuration files in the <xref href=\"RoyalXML\" data-throw-if-not-resolved=\"false\"></xref> format.\n"
    example: []
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class IMSConfiguration : ICloneable
        VB: >-
          <Serializable>

          Public Class IMSConfiguration

              Implements ICloneable
    inheritance:
    - System.Object
    implements:
    - System.ICloneable
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    extensionMethods:
    - IMS_Library.IMSConfiguration.IMS_Library.IMSConfigurationUtility.FromConfiguration``1
    - IMS_Library.IMSConfiguration.IMS_Library.IMSConfigurationUtility.SaveConfiguration``1
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: IMS_Library.IMSConfiguration.#ctor
      commentId: M:IMS_Library.IMSConfiguration.#ctor
      language: CSharp
      name:
        CSharp: IMSConfiguration()
        VB: IMSConfiguration()
      nameWithType:
        CSharp: IMSConfiguration.IMSConfiguration()
        VB: IMSConfiguration.IMSConfiguration()
      qualifiedName:
        CSharp: IMS_Library.IMSConfiguration.IMSConfiguration()
        VB: IMS_Library.IMSConfiguration.IMSConfiguration()
      type: Constructor
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: .ctor
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\IMSConfiguration.cs
        startLine: 21
      summary: "\nCreates a new instance of <xref href=\"IMS_Library.IMSConfiguration\" data-throw-if-not-resolved=\"false\"></xref>.\n"
      example: []
      syntax:
        content:
          CSharp: public IMSConfiguration()
          VB: Public Sub New
      overload: IMS_Library.IMSConfiguration.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        IMS_Library.IMSConfiguration: 
    - id: IMS_Library.IMSConfiguration.Clone
      commentId: M:IMS_Library.IMSConfiguration.Clone
      language: CSharp
      name:
        CSharp: Clone()
        VB: Clone()
      nameWithType:
        CSharp: IMSConfiguration.Clone()
        VB: IMSConfiguration.Clone()
      qualifiedName:
        CSharp: IMS_Library.IMSConfiguration.Clone()
        VB: IMS_Library.IMSConfiguration.Clone()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Clone
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\IMSConfiguration.cs
        startLine: 27
      summary: "\nCreates a deep copy of the configuration.\n"
      example: []
      syntax:
        content:
          CSharp: public object Clone()
          VB: Public Function Clone As Object
        return:
          type: System.Object
          description: A new <xref href="IMS_Library.IMSConfiguration" data-throw-if-not-resolved="false"></xref> object that has fields with the same values, but different objects.
      overload: IMS_Library.IMSConfiguration.Clone*
      implements:
      - System.ICloneable.Clone
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        IMS_Library.IMSConfiguration: 
    - id: IMS_Library.IMSConfiguration.GetDefaultFilePath
      commentId: M:IMS_Library.IMSConfiguration.GetDefaultFilePath
      language: CSharp
      name:
        CSharp: GetDefaultFilePath()
        VB: GetDefaultFilePath()
      nameWithType:
        CSharp: IMSConfiguration.GetDefaultFilePath()
        VB: IMSConfiguration.GetDefaultFilePath()
      qualifiedName:
        CSharp: IMS_Library.IMSConfiguration.GetDefaultFilePath()
        VB: IMS_Library.IMSConfiguration.GetDefaultFilePath()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetDefaultFilePath
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\IMSConfiguration.cs
        startLine: 36
      summary: "\nRetrieves the file path for the settings configuration file.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual string GetDefaultFilePath()
          VB: Public Overridable Function GetDefaultFilePath As String
        return:
          type: System.String
          description: The path of the configuration file.
      overload: IMS_Library.IMSConfiguration.GetDefaultFilePath*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    references:
      RoyalXML: 
  - id: IMS_Library.IMSConfigurationUtility
    commentId: T:IMS_Library.IMSConfigurationUtility
    language: CSharp
    name:
      CSharp: IMSConfigurationUtility
      VB: IMSConfigurationUtility
    nameWithType:
      CSharp: IMSConfigurationUtility
      VB: IMSConfigurationUtility
    qualifiedName:
      CSharp: IMS_Library.IMSConfigurationUtility
      VB: IMS_Library.IMSConfigurationUtility
    type: Class
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: IMSConfigurationUtility
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\IMSConfiguration.cs
      startLine: 45
    summary: "\nThis is a helper class containing extension methods used for saving/loading <xref href=\"IMS_Library.IMSConfiguration\" data-throw-if-not-resolved=\"false\"></xref> objects.\n"
    example: []
    syntax:
      content:
        CSharp: public static class IMSConfigurationUtility
        VB: Public Module IMSConfigurationUtility
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: IMS_Library.IMSConfigurationUtility.FromConfiguration``1(``0)
      commentId: M:IMS_Library.IMSConfigurationUtility.FromConfiguration``1(``0)
      language: CSharp
      name:
        CSharp: FromConfiguration<T>(T)
        VB: FromConfiguration(Of T)(T)
      nameWithType:
        CSharp: IMSConfigurationUtility.FromConfiguration<T>(T)
        VB: IMSConfigurationUtility.FromConfiguration(Of T)(T)
      qualifiedName:
        CSharp: IMS_Library.IMSConfigurationUtility.FromConfiguration<T>(T)
        VB: IMS_Library.IMSConfigurationUtility.FromConfiguration(Of T)(T)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: FromConfiguration
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\IMSConfiguration.cs
        startLine: 53
      summary: "\nLoads the configuration from its configuration file, or returns the present configuration if the file does not exist.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static T FromConfiguration<T>(this T imsConfiguration)

                where T : IMSConfiguration
          VB: >-
            <ExtensionAttribute>

            Public Shared Function FromConfiguration(Of T As IMSConfiguration)(imsConfiguration As T) As T
        parameters:
        - id: imsConfiguration
          type: '{T}'
          description: The current configuration.
        typeParameters:
        - id: T
          description: The <xref href="IMS_Library.IMSConfiguration" data-throw-if-not-resolved="false"></xref> type to load.
        return:
          type: '{T}'
          description: The newly-loaded configuration.
      overload: IMS_Library.IMSConfigurationUtility.FromConfiguration*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        IMS_Library.IMSConfiguration: 
    - isExtensionMethod: true
      id: IMS_Library.IMSConfigurationUtility.SaveConfiguration``1(``0)
      commentId: M:IMS_Library.IMSConfigurationUtility.SaveConfiguration``1(``0)
      language: CSharp
      name:
        CSharp: SaveConfiguration<T>(T)
        VB: SaveConfiguration(Of T)(T)
      nameWithType:
        CSharp: IMSConfigurationUtility.SaveConfiguration<T>(T)
        VB: IMSConfigurationUtility.SaveConfiguration(Of T)(T)
      qualifiedName:
        CSharp: IMS_Library.IMSConfigurationUtility.SaveConfiguration<T>(T)
        VB: IMS_Library.IMSConfigurationUtility.SaveConfiguration(Of T)(T)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: SaveConfiguration
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\IMSConfiguration.cs
        startLine: 70
      summary: "\nSaves an <xref href=\"IMS_Library.IMSConfiguration\" data-throw-if-not-resolved=\"false\"></xref> to disk.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static void SaveConfiguration<T>(this T imsConfiguration)

                where T : IMSConfiguration
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub SaveConfiguration(Of T As IMSConfiguration)(imsConfiguration As T)
        parameters:
        - id: imsConfiguration
          type: '{T}'
          description: The current configuration.
        typeParameters:
        - id: T
          description: The <xref href="IMS_Library.IMSConfiguration" data-throw-if-not-resolved="false"></xref> type to save.
      overload: IMS_Library.IMSConfigurationUtility.SaveConfiguration*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        IMS_Library.IMSConfiguration: 
    references:
      IMS_Library.IMSConfiguration: 
  - id: IMS_Library.IMSSettings
    commentId: T:IMS_Library.IMSSettings
    language: CSharp
    name:
      CSharp: IMSSettings
      VB: IMSSettings
    nameWithType:
      CSharp: IMSSettings
      VB: IMSSettings
    qualifiedName:
      CSharp: IMS_Library.IMSSettings
      VB: IMS_Library.IMSSettings
    type: Class
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: IMSSettings
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\IMSSettings.cs
      startLine: 11
    summary: "\nRepresents a collection of settings that affect IMS behavior.\n"
    example: []
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class IMSSettings : IMSConfiguration, ICloneable
        VB: >-
          <Serializable>

          Public Class IMSSettings

              Inherits IMSConfiguration

              Implements ICloneable
    inheritance:
    - System.Object
    - IMS_Library.IMSConfiguration
    implements:
    - System.ICloneable
    inheritedMembers:
    - IMS_Library.IMSConfiguration.Clone
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    extensionMethods:
    - IMS_Library.IMSSettings.IMS_Library.IMSConfigurationUtility.FromConfiguration``1
    - IMS_Library.IMSSettings.IMS_Library.IMSConfigurationUtility.SaveConfiguration``1
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: IMS_Library.IMSSettings.ManagementPort
      commentId: F:IMS_Library.IMSSettings.ManagementPort
      language: CSharp
      name:
        CSharp: ManagementPort
        VB: ManagementPort
      nameWithType:
        CSharp: IMSSettings.ManagementPort
        VB: IMSSettings.ManagementPort
      qualifiedName:
        CSharp: IMS_Library.IMSSettings.ManagementPort
        VB: IMS_Library.IMSSettings.ManagementPort
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ManagementPort
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\IMSSettings.cs
        startLine: 17
      summary: "\nThe port to run the IMS webserver on.\n"
      example: []
      syntax:
        content:
          CSharp: public WebPort ManagementPort
          VB: Public ManagementPort As WebPort
        return:
          type: IMS_Library.WebPort
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.IMSSettings.RunIMSOnStartup
      commentId: F:IMS_Library.IMSSettings.RunIMSOnStartup
      language: CSharp
      name:
        CSharp: RunIMSOnStartup
        VB: RunIMSOnStartup
      nameWithType:
        CSharp: IMSSettings.RunIMSOnStartup
        VB: IMSSettings.RunIMSOnStartup
      qualifiedName:
        CSharp: IMS_Library.IMSSettings.RunIMSOnStartup
        VB: IMS_Library.IMSSettings.RunIMSOnStartup
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: RunIMSOnStartup
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\IMSSettings.cs
        startLine: 21
      summary: "\nWhether IMS should run when the computer boots.\n"
      example: []
      syntax:
        content:
          CSharp: public bool RunIMSOnStartup
          VB: Public RunIMSOnStartup As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.IMSSettings.PluginPaths
      commentId: F:IMS_Library.IMSSettings.PluginPaths
      language: CSharp
      name:
        CSharp: PluginPaths
        VB: PluginPaths
      nameWithType:
        CSharp: IMSSettings.PluginPaths
        VB: IMSSettings.PluginPaths
      qualifiedName:
        CSharp: IMS_Library.IMSSettings.PluginPaths
        VB: IMS_Library.IMSSettings.PluginPaths
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: PluginPaths
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\IMSSettings.cs
        startLine: 26
      summary: "\nThe paths of all currently registered plugins.\n"
      example: []
      syntax:
        content:
          CSharp: public List<string> PluginPaths
          VB: Public PluginPaths As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.IMSSettings.Username
      commentId: F:IMS_Library.IMSSettings.Username
      language: CSharp
      name:
        CSharp: Username
        VB: Username
      nameWithType:
        CSharp: IMSSettings.Username
        VB: IMSSettings.Username
      qualifiedName:
        CSharp: IMS_Library.IMSSettings.Username
        VB: IMS_Library.IMSSettings.Username
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Username
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\IMSSettings.cs
        startLine: 31
      summary: "\nThe username to use when logging into the IMS admin console.\n"
      example: []
      syntax:
        content:
          CSharp: public string Username
          VB: Public Username As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.IMSSettings.PasswordHash
      commentId: F:IMS_Library.IMSSettings.PasswordHash
      language: CSharp
      name:
        CSharp: PasswordHash
        VB: PasswordHash
      nameWithType:
        CSharp: IMSSettings.PasswordHash
        VB: IMSSettings.PasswordHash
      qualifiedName:
        CSharp: IMS_Library.IMSSettings.PasswordHash
        VB: IMS_Library.IMSSettings.PasswordHash
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: PasswordHash
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\IMSSettings.cs
        startLine: 35
      summary: "\nThe SHA-256 hash of the password to use when logging into the IMS admin console.\n"
      example: []
      syntax:
        content:
          CSharp: public byte[] PasswordHash
          VB: Public PasswordHash As Byte()
        return:
          type: System.Byte[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.IMSSettings.#ctor
      commentId: M:IMS_Library.IMSSettings.#ctor
      language: CSharp
      name:
        CSharp: IMSSettings()
        VB: IMSSettings()
      nameWithType:
        CSharp: IMSSettings.IMSSettings()
        VB: IMSSettings.IMSSettings()
      qualifiedName:
        CSharp: IMS_Library.IMSSettings.IMSSettings()
        VB: IMS_Library.IMSSettings.IMSSettings()
      type: Constructor
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: .ctor
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\IMSSettings.cs
        startLine: 40
      summary: "\nCreates a new instance of <xref href=\"IMS_Library.IMSSettings\" data-throw-if-not-resolved=\"false\"></xref>, with <xref href=\"IMS_Library.IMSSettings.ManagementPort\" data-throw-if-not-resolved=\"false\"></xref> defaulting to 8080.\n"
      example: []
      syntax:
        content:
          CSharp: public IMSSettings()
          VB: Public Sub New
      overload: IMS_Library.IMSSettings.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        IMS_Library.IMSSettings: 
        IMS_Library.IMSSettings.ManagementPort: 
    - id: IMS_Library.IMSSettings.GetDefaultFilePath
      commentId: M:IMS_Library.IMSSettings.GetDefaultFilePath
      language: CSharp
      name:
        CSharp: GetDefaultFilePath()
        VB: GetDefaultFilePath()
      nameWithType:
        CSharp: IMSSettings.GetDefaultFilePath()
        VB: IMSSettings.GetDefaultFilePath()
      qualifiedName:
        CSharp: IMS_Library.IMSSettings.GetDefaultFilePath()
        VB: IMS_Library.IMSSettings.GetDefaultFilePath()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetDefaultFilePath
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\IMSSettings.cs
        startLine: 49
      summary: "\nRetrieves the file path for the settings configuration file.\n"
      example: []
      syntax:
        content:
          CSharp: public override string GetDefaultFilePath()
          VB: Public Overrides Function GetDefaultFilePath As String
        return:
          type: System.String
          description: The path of the configuration file.
      overload: IMS_Library.IMSSettings.GetDefaultFilePath*
      overridden: IMS_Library.IMSConfiguration.GetDefaultFilePath
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: IMS_Library.JunctionPoint
    commentId: T:IMS_Library.JunctionPoint
    language: CSharp
    name:
      CSharp: JunctionPoint
      VB: JunctionPoint
    nameWithType:
      CSharp: JunctionPoint
      VB: JunctionPoint
    qualifiedName:
      CSharp: IMS_Library.JunctionPoint
      VB: IMS_Library.JunctionPoint
    type: Class
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: JunctionPoint
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\JunctionPoint.cs
      startLine: 12
    summary: "\nProvides access to NTFS junction points in .NET.\n"
    example: []
    syntax:
      content:
        CSharp: public static class JunctionPoint
        VB: Public Module JunctionPoint
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: IMS_Library.JunctionPoint.CreateHardLink(System.String,System.String)
      commentId: M:IMS_Library.JunctionPoint.CreateHardLink(System.String,System.String)
      language: CSharp
      name:
        CSharp: CreateHardLink(String, String)
        VB: CreateHardLink(String, String)
      nameWithType:
        CSharp: JunctionPoint.CreateHardLink(String, String)
        VB: JunctionPoint.CreateHardLink(String, String)
      qualifiedName:
        CSharp: IMS_Library.JunctionPoint.CreateHardLink(System.String, System.String)
        VB: IMS_Library.JunctionPoint.CreateHardLink(System.String, System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: CreateHardLink
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\JunctionPoint.cs
        startLine: 200
      summary: "\nCreates a file hard link.\n"
      example: []
      syntax:
        content:
          CSharp: public static void CreateHardLink(string targetFile, string linkFile)
          VB: Public Shared Sub CreateHardLink(targetFile As String, linkFile As String)
        parameters:
        - id: targetFile
          type: System.String
          description: The file that the link should point to.
        - id: linkFile
          type: System.String
          description: The full path of the new, link file.
      overload: IMS_Library.JunctionPoint.CreateHardLink*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: IMS_Library.JunctionPoint.Create(System.String,System.String,System.Boolean)
      commentId: M:IMS_Library.JunctionPoint.Create(System.String,System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: Create(String, String, Boolean)
        VB: Create(String, String, Boolean)
      nameWithType:
        CSharp: JunctionPoint.Create(String, String, Boolean)
        VB: JunctionPoint.Create(String, String, Boolean)
      qualifiedName:
        CSharp: IMS_Library.JunctionPoint.Create(System.String, System.String, System.Boolean)
        VB: IMS_Library.JunctionPoint.Create(System.String, System.String, System.Boolean)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Create
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\JunctionPoint.cs
        startLine: 216
      summary: "\nCreates a junction point from the specified directory to the specified target directory.\n"
      remarks: "\nOnly works on NTFS.\n"
      example: []
      syntax:
        content:
          CSharp: public static void Create(string junctionPoint, string targetDir, bool overwrite)
          VB: Public Shared Sub Create(junctionPoint As String, targetDir As String, overwrite As Boolean)
        parameters:
        - id: junctionPoint
          type: System.String
          description: The junction point path
        - id: targetDir
          type: System.String
          description: The target directory
        - id: overwrite
          type: System.Boolean
          description: If true overwrites an existing reparse point or empty directory
      overload: IMS_Library.JunctionPoint.Create*
      exceptions:
      - type: System.IO.IOException
        commentId: T:System.IO.IOException
        description: >-
          Thrown when the junction point could not be created or when

          an existing directory was found and <code data-dev-comment-type="paramref" class="paramref">overwrite</code> if false
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        System.IO.IOException: 
    - id: IMS_Library.JunctionPoint.Delete(System.String)
      commentId: M:IMS_Library.JunctionPoint.Delete(System.String)
      language: CSharp
      name:
        CSharp: Delete(String)
        VB: Delete(String)
      nameWithType:
        CSharp: JunctionPoint.Delete(String)
        VB: JunctionPoint.Delete(String)
      qualifiedName:
        CSharp: IMS_Library.JunctionPoint.Delete(System.String)
        VB: IMS_Library.JunctionPoint.Delete(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Delete
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\JunctionPoint.cs
        startLine: 277
      summary: "\nDeletes a junction point at the specified source directory along with the directory itself.\nDoes nothing if the junction point does not exist.\n"
      remarks: "\nOnly works on NTFS.\n"
      example: []
      syntax:
        content:
          CSharp: public static void Delete(string junctionPoint)
          VB: Public Shared Sub Delete(junctionPoint As String)
        parameters:
        - id: junctionPoint
          type: System.String
          description: The junction point path
      overload: IMS_Library.JunctionPoint.Delete*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: IMS_Library.JunctionPoint.Exists(System.String)
      commentId: M:IMS_Library.JunctionPoint.Exists(System.String)
      language: CSharp
      name:
        CSharp: Exists(String)
        VB: Exists(String)
      nameWithType:
        CSharp: JunctionPoint.Exists(String)
        VB: JunctionPoint.Exists(String)
      qualifiedName:
        CSharp: IMS_Library.JunctionPoint.Exists(System.String)
        VB: IMS_Library.JunctionPoint.Exists(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Exists
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\JunctionPoint.cs
        startLine: 331
      summary: "\nDetermines whether the specified path exists and refers to a junction point.\n"
      example: []
      syntax:
        content:
          CSharp: public static bool Exists(string path)
          VB: Public Shared Function Exists(path As String) As Boolean
        parameters:
        - id: path
          type: System.String
          description: The junction point path
        return:
          type: System.Boolean
          description: True if the specified path represents a junction point
      overload: IMS_Library.JunctionPoint.Exists*
      exceptions:
      - type: System.IO.IOException
        commentId: T:System.IO.IOException
        description: >-
          Thrown if the specified path is invalid

          or some other error occurs
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        System.IO.IOException: 
    - id: IMS_Library.JunctionPoint.GetTarget(System.String)
      commentId: M:IMS_Library.JunctionPoint.GetTarget(System.String)
      language: CSharp
      name:
        CSharp: GetTarget(String)
        VB: GetTarget(String)
      nameWithType:
        CSharp: JunctionPoint.GetTarget(String)
        VB: JunctionPoint.GetTarget(String)
      qualifiedName:
        CSharp: IMS_Library.JunctionPoint.GetTarget(System.String)
        VB: IMS_Library.JunctionPoint.GetTarget(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetTarget
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\JunctionPoint.cs
        startLine: 353
      summary: "\nGets the target of the specified junction point.\n"
      remarks: "\nOnly works on NTFS.\n"
      example: []
      syntax:
        content:
          CSharp: public static string GetTarget(string junctionPoint)
          VB: Public Shared Function GetTarget(junctionPoint As String) As String
        parameters:
        - id: junctionPoint
          type: System.String
          description: The junction point path
        return:
          type: System.String
          description: The target of the junction point
      overload: IMS_Library.JunctionPoint.GetTarget*
      exceptions:
      - type: System.IO.IOException
        commentId: T:System.IO.IOException
        description: >-
          Thrown when the specified path does not

          exist, is invalid, is not a junction point, or some other error occurs
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        System.IO.IOException: 
  - id: IMS_Library.Logger
    commentId: T:IMS_Library.Logger
    language: CSharp
    name:
      CSharp: Logger
      VB: Logger
    nameWithType:
      CSharp: Logger
      VB: Logger
    qualifiedName:
      CSharp: IMS_Library.Logger
      VB: IMS_Library.Logger
    type: Class
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: Logger
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Logger.cs
      startLine: 12
    summary: "\nThis class is used for keeping IMS logs and debugging.\n"
    example: []
    syntax:
      content:
        CSharp: public static class Logger
        VB: Public Module Logger
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: IMS_Library.Logger.WriteInfo(System.String)
      commentId: M:IMS_Library.Logger.WriteInfo(System.String)
      language: CSharp
      name:
        CSharp: WriteInfo(String)
        VB: WriteInfo(String)
      nameWithType:
        CSharp: Logger.WriteInfo(String)
        VB: Logger.WriteInfo(String)
      qualifiedName:
        CSharp: IMS_Library.Logger.WriteInfo(System.String)
        VB: IMS_Library.Logger.WriteInfo(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: WriteInfo
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Logger.cs
        startLine: 30
      summary: "\nWrites the <code data-dev-comment-type=\"paramref\" class=\"paramref\">information</code> string to the IMS log under the &quot;info&quot; category.\n"
      example: []
      syntax:
        content:
          CSharp: public static void WriteInfo(string information)
          VB: Public Shared Sub WriteInfo(information As String)
        parameters:
        - id: information
          type: System.String
          description: The information to write to the log.
      overload: IMS_Library.Logger.WriteInfo*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: IMS_Library.Logger.WriteWarning(System.String)
      commentId: M:IMS_Library.Logger.WriteWarning(System.String)
      language: CSharp
      name:
        CSharp: WriteWarning(String)
        VB: WriteWarning(String)
      nameWithType:
        CSharp: Logger.WriteWarning(String)
        VB: Logger.WriteWarning(String)
      qualifiedName:
        CSharp: IMS_Library.Logger.WriteWarning(System.String)
        VB: IMS_Library.Logger.WriteWarning(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: WriteWarning
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Logger.cs
        startLine: 43
      summary: "\nWrites the <code data-dev-comment-type=\"paramref\" class=\"paramref\">warning</code> string to the IMS log under the &quot;warning&quot; category.\n"
      example: []
      syntax:
        content:
          CSharp: public static void WriteWarning(string warning)
          VB: Public Shared Sub WriteWarning(warning As String)
        parameters:
        - id: warning
          type: System.String
          description: The warning to write to the log.
      overload: IMS_Library.Logger.WriteWarning*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: IMS_Library.Logger.WriteError(System.String)
      commentId: M:IMS_Library.Logger.WriteError(System.String)
      language: CSharp
      name:
        CSharp: WriteError(String)
        VB: WriteError(String)
      nameWithType:
        CSharp: Logger.WriteError(String)
        VB: Logger.WriteError(String)
      qualifiedName:
        CSharp: IMS_Library.Logger.WriteError(System.String)
        VB: IMS_Library.Logger.WriteError(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: WriteError
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Logger.cs
        startLine: 56
      summary: "\nWrites the <code data-dev-comment-type=\"paramref\" class=\"paramref\">error</code> string to the IMS log under the &quot;error&quot; category.\n"
      example: []
      syntax:
        content:
          CSharp: public static void WriteError(string error)
          VB: Public Shared Sub WriteError(error As String)
        parameters:
        - id: error
          type: System.String
          description: The error to write to the log.
      overload: IMS_Library.Logger.WriteError*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: IMS_Library.Logger.FinishLog
      commentId: M:IMS_Library.Logger.FinishLog
      language: CSharp
      name:
        CSharp: FinishLog()
        VB: FinishLog()
      nameWithType:
        CSharp: Logger.FinishLog()
        VB: Logger.FinishLog()
      qualifiedName:
        CSharp: IMS_Library.Logger.FinishLog()
        VB: IMS_Library.Logger.FinishLog()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: FinishLog
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Logger.cs
        startLine: 68
      summary: "\nStops all logging and marks the log as successful (differentiating it from a crashed/incomplete log).\n"
      example: []
      syntax:
        content:
          CSharp: public static void FinishLog()
          VB: Public Shared Sub FinishLog
      overload: IMS_Library.Logger.FinishLog*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: IMS_Library.MinecraftEdition
    commentId: T:IMS_Library.MinecraftEdition
    language: CSharp
    name:
      CSharp: MinecraftEdition
      VB: MinecraftEdition
    nameWithType:
      CSharp: MinecraftEdition
      VB: MinecraftEdition
    qualifiedName:
      CSharp: IMS_Library.MinecraftEdition
      VB: IMS_Library.MinecraftEdition
    type: Enum
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: MinecraftEdition
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\MinecraftEdition.cs
      startLine: 9
    summary: "\nRepresents a Minecraft version (edition) type.\n"
    example: []
    syntax:
      content:
        CSharp: public enum MinecraftEdition
        VB: Public Enum MinecraftEdition
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: IMS_Library.MinecraftEdition.Java
      commentId: F:IMS_Library.MinecraftEdition.Java
      language: CSharp
      name:
        CSharp: Java
        VB: Java
      nameWithType:
        CSharp: MinecraftEdition.Java
        VB: MinecraftEdition.Java
      qualifiedName:
        CSharp: IMS_Library.MinecraftEdition.Java
        VB: IMS_Library.MinecraftEdition.Java
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Java
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\MinecraftEdition.cs
        startLine: 14
      summary: "\nThe desktop &quot;Java Edition&quot; version of Minecraft.\n"
      example: []
      syntax:
        content:
          CSharp: Java = 0
          VB: Java = 0
        return:
          type: IMS_Library.MinecraftEdition
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: IMS_Library.MinecraftEdition.Bedrock
      commentId: F:IMS_Library.MinecraftEdition.Bedrock
      language: CSharp
      name:
        CSharp: Bedrock
        VB: Bedrock
      nameWithType:
        CSharp: MinecraftEdition.Bedrock
        VB: MinecraftEdition.Bedrock
      qualifiedName:
        CSharp: IMS_Library.MinecraftEdition.Bedrock
        VB: IMS_Library.MinecraftEdition.Bedrock
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Bedrock
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\MinecraftEdition.cs
        startLine: 18
      summary: "\nThe cross-platform &quot;Bedrock Edition&quot; version of Minecraft.\n"
      example: []
      syntax:
        content:
          CSharp: Bedrock = 1
          VB: Bedrock = 1
        return:
          type: IMS_Library.MinecraftEdition
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: IMS_Library.IMSPluginBase
    commentId: T:IMS_Library.IMSPluginBase
    language: CSharp
    name:
      CSharp: IMSPluginBase
      VB: IMSPluginBase
    nameWithType:
      CSharp: IMSPluginBase
      VB: IMSPluginBase
    qualifiedName:
      CSharp: IMS_Library.IMSPluginBase
      VB: IMS_Library.IMSPluginBase
    type: Class
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: IMSPluginBase
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Plugin\IMSPluginBase.cs
      startLine: 6
    syntax:
      content:
        CSharp: public abstract class IMSPluginBase
        VB: Public MustInherit Class IMSPluginBase
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: IMS_Library.IMSPluginBase.Service
      commentId: P:IMS_Library.IMSPluginBase.Service
      language: CSharp
      name:
        CSharp: Service
        VB: Service
      nameWithType:
        CSharp: IMSPluginBase.Service
        VB: IMSPluginBase.Service
      qualifiedName:
        CSharp: IMS_Library.IMSPluginBase.Service
        VB: IMS_Library.IMSPluginBase.Service
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Service
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Plugin\IMSPluginBase.cs
        startLine: 8
      syntax:
        content:
          CSharp: public IMS Service { get; }
          VB: Public ReadOnly Property Service As IMS
        parameters: []
        return:
          type: IMS_Library.IMS
      overload: IMS_Library.IMSPluginBase.Service*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: IMS_Library.IMSPluginBase.Name
      commentId: P:IMS_Library.IMSPluginBase.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: IMSPluginBase.Name
        VB: IMSPluginBase.Name
      qualifiedName:
        CSharp: IMS_Library.IMSPluginBase.Name
        VB: IMS_Library.IMSPluginBase.Name
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Name
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Plugin\IMSPluginBase.cs
        startLine: 10
      syntax:
        content:
          CSharp: public abstract string Name { get; }
          VB: Public MustOverride ReadOnly Property Name As String
        parameters: []
        return:
          type: System.String
      overload: IMS_Library.IMSPluginBase.Name*
      modifiers:
        CSharp:
        - public
        - abstract
        - get
        VB:
        - Public
        - MustOverride
        - ReadOnly
    - id: IMS_Library.IMSPluginBase.CurrentVersion
      commentId: P:IMS_Library.IMSPluginBase.CurrentVersion
      language: CSharp
      name:
        CSharp: CurrentVersion
        VB: CurrentVersion
      nameWithType:
        CSharp: IMSPluginBase.CurrentVersion
        VB: IMSPluginBase.CurrentVersion
      qualifiedName:
        CSharp: IMS_Library.IMSPluginBase.CurrentVersion
        VB: IMS_Library.IMSPluginBase.CurrentVersion
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: CurrentVersion
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Plugin\IMSPluginBase.cs
        startLine: 11
      syntax:
        content:
          CSharp: public abstract Version CurrentVersion { get; }
          VB: Public MustOverride ReadOnly Property CurrentVersion As Version
        parameters: []
        return:
          type: System.Version
      overload: IMS_Library.IMSPluginBase.CurrentVersion*
      modifiers:
        CSharp:
        - public
        - abstract
        - get
        VB:
        - Public
        - MustOverride
        - ReadOnly
    - id: IMS_Library.IMSPluginBase.Description
      commentId: P:IMS_Library.IMSPluginBase.Description
      language: CSharp
      name:
        CSharp: Description
        VB: Description
      nameWithType:
        CSharp: IMSPluginBase.Description
        VB: IMSPluginBase.Description
      qualifiedName:
        CSharp: IMS_Library.IMSPluginBase.Description
        VB: IMS_Library.IMSPluginBase.Description
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Description
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Plugin\IMSPluginBase.cs
        startLine: 12
      syntax:
        content:
          CSharp: public abstract string Description { get; }
          VB: Public MustOverride ReadOnly Property Description As String
        parameters: []
        return:
          type: System.String
      overload: IMS_Library.IMSPluginBase.Description*
      modifiers:
        CSharp:
        - public
        - abstract
        - get
        VB:
        - Public
        - MustOverride
        - ReadOnly
    - id: IMS_Library.IMSPluginBase.Start
      commentId: M:IMS_Library.IMSPluginBase.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: IMSPluginBase.Start()
        VB: IMSPluginBase.Start()
      qualifiedName:
        CSharp: IMS_Library.IMSPluginBase.Start()
        VB: IMS_Library.IMSPluginBase.Start()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Start
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Plugin\IMSPluginBase.cs
        startLine: 14
      syntax:
        content:
          CSharp: public virtual void Start()
          VB: Public Overridable Sub Start
      overload: IMS_Library.IMSPluginBase.Start*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: IMS_Library.IMSPluginBase.Stop
      commentId: M:IMS_Library.IMSPluginBase.Stop
      language: CSharp
      name:
        CSharp: Stop()
        VB: Stop()
      nameWithType:
        CSharp: IMSPluginBase.Stop()
        VB: IMSPluginBase.Stop()
      qualifiedName:
        CSharp: IMS_Library.IMSPluginBase.Stop()
        VB: IMS_Library.IMSPluginBase.Stop()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Stop
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Plugin\IMSPluginBase.cs
        startLine: 15
      syntax:
        content:
          CSharp: public virtual void Stop()
          VB: Public Overridable Sub Stop
      overload: IMS_Library.IMSPluginBase.Stop*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
  - id: IMS_Library.PluginController
    commentId: T:IMS_Library.PluginController
    language: CSharp
    name:
      CSharp: PluginController
      VB: PluginController
    nameWithType:
      CSharp: PluginController
      VB: PluginController
    qualifiedName:
      CSharp: IMS_Library.PluginController
      VB: IMS_Library.PluginController
    type: Class
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: PluginController
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Plugin\PluginController.cs
      startLine: 9
    syntax:
      content:
        CSharp: public sealed class PluginController
        VB: Public NotInheritable Class PluginController
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: IMS_Library.PluginController.LoadedPlugins
      commentId: P:IMS_Library.PluginController.LoadedPlugins
      language: CSharp
      name:
        CSharp: LoadedPlugins
        VB: LoadedPlugins
      nameWithType:
        CSharp: PluginController.LoadedPlugins
        VB: PluginController.LoadedPlugins
      qualifiedName:
        CSharp: IMS_Library.PluginController.LoadedPlugins
        VB: IMS_Library.PluginController.LoadedPlugins
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: LoadedPlugins
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Plugin\PluginController.cs
        startLine: 11
      syntax:
        content:
          CSharp: public IList<IMSPluginBase> LoadedPlugins { get; }
          VB: Public ReadOnly Property LoadedPlugins As IList(Of IMSPluginBase)
        parameters: []
        return:
          type: System.Collections.Generic.IList{IMS_Library.IMSPluginBase}
      overload: IMS_Library.PluginController.LoadedPlugins*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: IMS_Library.PluginController.Locker
      commentId: F:IMS_Library.PluginController.Locker
      language: CSharp
      name:
        CSharp: Locker
        VB: Locker
      nameWithType:
        CSharp: PluginController.Locker
        VB: PluginController.Locker
      qualifiedName:
        CSharp: IMS_Library.PluginController.Locker
        VB: IMS_Library.PluginController.Locker
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Locker
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Plugin\PluginController.cs
        startLine: 14
      syntax:
        content:
          CSharp: protected object Locker
          VB: Protected Locker As Object
        return:
          type: System.Object
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IMS_Library.PluginController.Initialize
      commentId: M:IMS_Library.PluginController.Initialize
      language: CSharp
      name:
        CSharp: Initialize()
        VB: Initialize()
      nameWithType:
        CSharp: PluginController.Initialize()
        VB: PluginController.Initialize()
      qualifiedName:
        CSharp: IMS_Library.PluginController.Initialize()
        VB: IMS_Library.PluginController.Initialize()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Initialize
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Plugin\PluginController.cs
        startLine: 16
      syntax:
        content:
          CSharp: public void Initialize()
          VB: Public Sub Initialize
      overload: IMS_Library.PluginController.Initialize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.PluginController.Start
      commentId: M:IMS_Library.PluginController.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: PluginController.Start()
        VB: PluginController.Start()
      qualifiedName:
        CSharp: IMS_Library.PluginController.Start()
        VB: IMS_Library.PluginController.Start()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Start
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Plugin\PluginController.cs
        startLine: 35
      syntax:
        content:
          CSharp: public void Start()
          VB: Public Sub Start
      overload: IMS_Library.PluginController.Start*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.PluginController.UnloadPlugin(IMS_Library.IMSPluginBase)
      commentId: M:IMS_Library.PluginController.UnloadPlugin(IMS_Library.IMSPluginBase)
      language: CSharp
      name:
        CSharp: UnloadPlugin(IMSPluginBase)
        VB: UnloadPlugin(IMSPluginBase)
      nameWithType:
        CSharp: PluginController.UnloadPlugin(IMSPluginBase)
        VB: PluginController.UnloadPlugin(IMSPluginBase)
      qualifiedName:
        CSharp: IMS_Library.PluginController.UnloadPlugin(IMS_Library.IMSPluginBase)
        VB: IMS_Library.PluginController.UnloadPlugin(IMS_Library.IMSPluginBase)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: UnloadPlugin
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Plugin\PluginController.cs
        startLine: 44
      syntax:
        content:
          CSharp: public void UnloadPlugin(IMSPluginBase plugin)
          VB: Public Sub UnloadPlugin(plugin As IMSPluginBase)
        parameters:
        - id: plugin
          type: IMS_Library.IMSPluginBase
      overload: IMS_Library.PluginController.UnloadPlugin*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.PluginController.LoadPlugin(System.String)
      commentId: M:IMS_Library.PluginController.LoadPlugin(System.String)
      language: CSharp
      name:
        CSharp: LoadPlugin(String)
        VB: LoadPlugin(String)
      nameWithType:
        CSharp: PluginController.LoadPlugin(String)
        VB: PluginController.LoadPlugin(String)
      qualifiedName:
        CSharp: IMS_Library.PluginController.LoadPlugin(System.String)
        VB: IMS_Library.PluginController.LoadPlugin(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: LoadPlugin
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Plugin\PluginController.cs
        startLine: 58
      syntax:
        content:
          CSharp: public void LoadPlugin(string path)
          VB: Public Sub LoadPlugin(path As String)
        parameters:
        - id: path
          type: System.String
      overload: IMS_Library.PluginController.LoadPlugin*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.PluginController.Stop
      commentId: M:IMS_Library.PluginController.Stop
      language: CSharp
      name:
        CSharp: Stop()
        VB: Stop()
      nameWithType:
        CSharp: PluginController.Stop()
        VB: PluginController.Stop()
      qualifiedName:
        CSharp: IMS_Library.PluginController.Stop()
        VB: IMS_Library.PluginController.Stop()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Stop
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Plugin\PluginController.cs
        startLine: 75
      syntax:
        content:
          CSharp: public void Stop()
          VB: Public Sub Stop
      overload: IMS_Library.PluginController.Stop*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: IMS_Library.PortForwarder
    commentId: T:IMS_Library.PortForwarder
    language: CSharp
    name:
      CSharp: PortForwarder
      VB: PortForwarder
    nameWithType:
      CSharp: PortForwarder
      VB: PortForwarder
    qualifiedName:
      CSharp: IMS_Library.PortForwarder
      VB: IMS_Library.PortForwarder
    type: Class
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: PortForwarder
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\PortForwarder.cs
      startLine: 15
    summary: "\nThis is a manager class used to regulate interactions with a UPnP router.  It can be used to automatically forward ports.\n"
    example: []
    syntax:
      content:
        CSharp: public sealed class PortForwarder
        VB: Public NotInheritable Class PortForwarder
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: IMS_Library.PortForwarder.ConnectedToPortForwardableDevice
      commentId: P:IMS_Library.PortForwarder.ConnectedToPortForwardableDevice
      language: CSharp
      name:
        CSharp: ConnectedToPortForwardableDevice
        VB: ConnectedToPortForwardableDevice
      nameWithType:
        CSharp: PortForwarder.ConnectedToPortForwardableDevice
        VB: PortForwarder.ConnectedToPortForwardableDevice
      qualifiedName:
        CSharp: IMS_Library.PortForwarder.ConnectedToPortForwardableDevice
        VB: IMS_Library.PortForwarder.ConnectedToPortForwardableDevice
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ConnectedToPortForwardableDevice
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\PortForwarder.cs
        startLine: 20
      summary: "\nThis returns whether the <xref href=\"IMS_Library.PortForwarder\" data-throw-if-not-resolved=\"false\"></xref> object is currently connected to a UPnP capable router.\n"
      example: []
      syntax:
        content:
          CSharp: public bool ConnectedToPortForwardableDevice { get; }
          VB: Public ReadOnly Property ConnectedToPortForwardableDevice As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: IMS_Library.PortForwarder.ConnectedToPortForwardableDevice*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
      references:
        IMS_Library.PortForwarder: 
    - id: IMS_Library.PortForwarder.#ctor
      commentId: M:IMS_Library.PortForwarder.#ctor
      language: CSharp
      name:
        CSharp: PortForwarder()
        VB: PortForwarder()
      nameWithType:
        CSharp: PortForwarder.PortForwarder()
        VB: PortForwarder.PortForwarder()
      qualifiedName:
        CSharp: IMS_Library.PortForwarder.PortForwarder()
        VB: IMS_Library.PortForwarder.PortForwarder()
      type: Constructor
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: .ctor
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\PortForwarder.cs
        startLine: 31
      summary: "\nCreates a new <xref href=\"IMS_Library.PortForwarder\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
      example: []
      syntax:
        content:
          CSharp: public PortForwarder()
          VB: Public Sub New
      overload: IMS_Library.PortForwarder.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        IMS_Library.PortForwarder: 
    - id: IMS_Library.PortForwarder.Start
      commentId: M:IMS_Library.PortForwarder.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: PortForwarder.Start()
        VB: PortForwarder.Start()
      qualifiedName:
        CSharp: IMS_Library.PortForwarder.Start()
        VB: IMS_Library.PortForwarder.Start()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Start
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\PortForwarder.cs
        startLine: 41
      summary: "\nBegins the <xref href=\"IMS_Library.PortForwarder\" data-throw-if-not-resolved=\"false\"></xref> instance, attempting to find a UPnP capable router and starting network connection monitoring.\n"
      example: []
      syntax:
        content:
          CSharp: public void Start()
          VB: Public Sub Start
      overload: IMS_Library.PortForwarder.Start*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        IMS_Library.PortForwarder: 
    - id: IMS_Library.PortForwarder.ForwardPort(System.Int32)
      commentId: M:IMS_Library.PortForwarder.ForwardPort(System.Int32)
      language: CSharp
      name:
        CSharp: ForwardPort(Int32)
        VB: ForwardPort(Int32)
      nameWithType:
        CSharp: PortForwarder.ForwardPort(Int32)
        VB: PortForwarder.ForwardPort(Int32)
      qualifiedName:
        CSharp: IMS_Library.PortForwarder.ForwardPort(System.Int32)
        VB: IMS_Library.PortForwarder.ForwardPort(System.Int32)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ForwardPort
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\PortForwarder.cs
        startLine: 72
      summary: "\nAdds the specified port to a list of ports to forward, and attempts to forward the port.  If disconnected or not currently connected to a UPnP router, the port will be &quot;remembered&quot; and forwarded when possible.\n"
      example: []
      syntax:
        content:
          CSharp: public void ForwardPort(int port)
          VB: Public Sub ForwardPort(port As Integer)
        parameters:
        - id: port
          type: System.Int32
          description: The port number to forward.
      overload: IMS_Library.PortForwarder.ForwardPort*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.PortForwarder.RemovePort(System.Int32)
      commentId: M:IMS_Library.PortForwarder.RemovePort(System.Int32)
      language: CSharp
      name:
        CSharp: RemovePort(Int32)
        VB: RemovePort(Int32)
      nameWithType:
        CSharp: PortForwarder.RemovePort(Int32)
        VB: PortForwarder.RemovePort(Int32)
      qualifiedName:
        CSharp: IMS_Library.PortForwarder.RemovePort(System.Int32)
        VB: IMS_Library.PortForwarder.RemovePort(System.Int32)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: RemovePort
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\PortForwarder.cs
        startLine: 88
      summary: "\nRemoves the specified port from the port forwarding list.\n"
      example: []
      syntax:
        content:
          CSharp: public void RemovePort(int port)
          VB: Public Sub RemovePort(port As Integer)
        parameters:
        - id: port
          type: System.Int32
          description: The port to remove.
      overload: IMS_Library.PortForwarder.RemovePort*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.PortForwarder.Stop
      commentId: M:IMS_Library.PortForwarder.Stop
      language: CSharp
      name:
        CSharp: Stop()
        VB: Stop()
      nameWithType:
        CSharp: PortForwarder.Stop()
        VB: PortForwarder.Stop()
      qualifiedName:
        CSharp: IMS_Library.PortForwarder.Stop()
        VB: IMS_Library.PortForwarder.Stop()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Stop
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\PortForwarder.cs
        startLine: 165
      summary: "\nStops the port forwarding instance, removing all forwarded ports and stopping network connection monitoring.\n"
      example: []
      syntax:
        content:
          CSharp: public void Stop()
          VB: Public Sub Stop
      overload: IMS_Library.PortForwarder.Stop*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: IMS_Library.ServerController
    commentId: T:IMS_Library.ServerController
    language: CSharp
    name:
      CSharp: ServerController
      VB: ServerController
    nameWithType:
      CSharp: ServerController
      VB: ServerController
    qualifiedName:
      CSharp: IMS_Library.ServerController
      VB: IMS_Library.ServerController
    type: Class
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: ServerController
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\ServerController.cs
      startLine: 15
    summary: "\nActs as a manager for the user&apos;s Minecraft servers, loading them from disk, starting them, and forwarding ports appropriately.\n"
    example: []
    syntax:
      content:
        CSharp: public sealed class ServerController
        VB: Public NotInheritable Class ServerController
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: IMS_Library.ServerController.Servers
      commentId: P:IMS_Library.ServerController.Servers
      language: CSharp
      name:
        CSharp: Servers
        VB: Servers
      nameWithType:
        CSharp: ServerController.Servers
        VB: ServerController.Servers
      qualifiedName:
        CSharp: IMS_Library.ServerController.Servers
        VB: IMS_Library.ServerController.Servers
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Servers
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\ServerController.cs
        startLine: 20
      summary: "\nA list containing all currently loaded servers.\n"
      example: []
      syntax:
        content:
          CSharp: public IList<ServerProxy> Servers { get; }
          VB: Public ReadOnly Property Servers As IList(Of ServerProxy)
        parameters: []
        return:
          type: System.Collections.Generic.IList{IMS_Library.ServerProxy}
      overload: IMS_Library.ServerController.Servers*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: IMS_Library.ServerController.Start
      commentId: M:IMS_Library.ServerController.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: ServerController.Start()
        VB: ServerController.Start()
      qualifiedName:
        CSharp: IMS_Library.ServerController.Start()
        VB: IMS_Library.ServerController.Start()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Start
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\ServerController.cs
        startLine: 28
      summary: "\nBegins the <xref href=\"IMS_Library.ServerController\" data-throw-if-not-resolved=\"false\"></xref> instance, loading and starting Minecraft servers.\n"
      example: []
      syntax:
        content:
          CSharp: public void Start()
          VB: Public Sub Start
      overload: IMS_Library.ServerController.Start*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        IMS_Library.ServerController: 
    - id: IMS_Library.ServerController.Stop
      commentId: M:IMS_Library.ServerController.Stop
      language: CSharp
      name:
        CSharp: Stop()
        VB: Stop()
      nameWithType:
        CSharp: ServerController.Stop()
        VB: ServerController.Stop()
      qualifiedName:
        CSharp: IMS_Library.ServerController.Stop()
        VB: IMS_Library.ServerController.Stop()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Stop
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\ServerController.cs
        startLine: 40
      summary: "\nStops the <xref href=\"IMS_Library.ServerController\" data-throw-if-not-resolved=\"false\"></xref> instance, stopping and saving all servers.\n"
      example: []
      syntax:
        content:
          CSharp: public void Stop()
          VB: Public Sub Stop
      overload: IMS_Library.ServerController.Stop*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        IMS_Library.ServerController: 
    - id: IMS_Library.ServerController.GetServer(System.Guid)
      commentId: M:IMS_Library.ServerController.GetServer(System.Guid)
      language: CSharp
      name:
        CSharp: GetServer(Guid)
        VB: GetServer(Guid)
      nameWithType:
        CSharp: ServerController.GetServer(Guid)
        VB: ServerController.GetServer(Guid)
      qualifiedName:
        CSharp: IMS_Library.ServerController.GetServer(System.Guid)
        VB: IMS_Library.ServerController.GetServer(System.Guid)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetServer
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\ServerController.cs
        startLine: 138
      summary: "\nRetrieves a server by its ID.\n"
      example: []
      syntax:
        content:
          CSharp: public ServerProxy GetServer(Guid server)
          VB: Public Function GetServer(server As Guid) As ServerProxy
        parameters:
        - id: server
          type: System.Guid
          description: The ID of the server to retrieve.
        return:
          type: IMS_Library.ServerProxy
          description: The <xref href="IMS_Library.ServerProxy" data-throw-if-not-resolved="false"></xref> associated with this ID, or null if no server is found.
      overload: IMS_Library.ServerController.GetServer*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        IMS_Library.ServerProxy: 
  - id: IMS_Library.BanInformation
    commentId: T:IMS_Library.BanInformation
    language: CSharp
    name:
      CSharp: BanInformation
      VB: BanInformation
    nameWithType:
      CSharp: BanInformation
      VB: BanInformation
    qualifiedName:
      CSharp: IMS_Library.BanInformation
      VB: IMS_Library.BanInformation
    type: Class
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: BanInformation
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BanInformation.cs
      startLine: 9
    summary: "\nInstances of this class contain information about a ban enacted on a Minecraft player.\n"
    example: []
    syntax:
      content:
        CSharp: public class BanInformation
        VB: Public Class BanInformation
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: IMS_Library.BanInformation.Player
      commentId: F:IMS_Library.BanInformation.Player
      language: CSharp
      name:
        CSharp: Player
        VB: Player
      nameWithType:
        CSharp: BanInformation.Player
        VB: BanInformation.Player
      qualifiedName:
        CSharp: IMS_Library.BanInformation.Player
        VB: IMS_Library.BanInformation.Player
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Player
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BanInformation.cs
        startLine: 14
      summary: "\nThe player who was banned.\n"
      example: []
      syntax:
        content:
          CSharp: public MinecraftPlayer Player
          VB: Public Player As MinecraftPlayer
        return:
          type: IMS_Library.MinecraftPlayer
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.BanInformation.CreatedDate
      commentId: F:IMS_Library.BanInformation.CreatedDate
      language: CSharp
      name:
        CSharp: CreatedDate
        VB: CreatedDate
      nameWithType:
        CSharp: BanInformation.CreatedDate
        VB: BanInformation.CreatedDate
      qualifiedName:
        CSharp: IMS_Library.BanInformation.CreatedDate
        VB: IMS_Library.BanInformation.CreatedDate
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: CreatedDate
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BanInformation.cs
        startLine: 18
      summary: "\nThe time at which the player was banned.\n"
      example: []
      syntax:
        content:
          CSharp: public string CreatedDate
          VB: Public CreatedDate As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.BanInformation.BanSource
      commentId: F:IMS_Library.BanInformation.BanSource
      language: CSharp
      name:
        CSharp: BanSource
        VB: BanSource
      nameWithType:
        CSharp: BanInformation.BanSource
        VB: BanInformation.BanSource
      qualifiedName:
        CSharp: IMS_Library.BanInformation.BanSource
        VB: IMS_Library.BanInformation.BanSource
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: BanSource
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BanInformation.cs
        startLine: 22
      summary: "\nThe name of the person who banned the player.\n"
      example: []
      syntax:
        content:
          CSharp: public string BanSource
          VB: Public BanSource As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.BanInformation.ExpirationDate
      commentId: F:IMS_Library.BanInformation.ExpirationDate
      language: CSharp
      name:
        CSharp: ExpirationDate
        VB: ExpirationDate
      nameWithType:
        CSharp: BanInformation.ExpirationDate
        VB: BanInformation.ExpirationDate
      qualifiedName:
        CSharp: IMS_Library.BanInformation.ExpirationDate
        VB: IMS_Library.BanInformation.ExpirationDate
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ExpirationDate
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BanInformation.cs
        startLine: 26
      summary: "\nThe time at which the ban expires.\n"
      example: []
      syntax:
        content:
          CSharp: public string ExpirationDate
          VB: Public ExpirationDate As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.BanInformation.Reason
      commentId: F:IMS_Library.BanInformation.Reason
      language: CSharp
      name:
        CSharp: Reason
        VB: Reason
      nameWithType:
        CSharp: BanInformation.Reason
        VB: BanInformation.Reason
      qualifiedName:
        CSharp: IMS_Library.BanInformation.Reason
        VB: IMS_Library.BanInformation.Reason
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Reason
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BanInformation.cs
        startLine: 30
      summary: "\nThe reason the player was banned.\n"
      example: []
      syntax:
        content:
          CSharp: public string Reason
          VB: Public Reason As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: IMS_Library.BedrockServer
    commentId: T:IMS_Library.BedrockServer
    language: CSharp
    name:
      CSharp: BedrockServer
      VB: BedrockServer
    nameWithType:
      CSharp: BedrockServer
      VB: BedrockServer
    qualifiedName:
      CSharp: IMS_Library.BedrockServer
      VB: IMS_Library.BedrockServer
    type: Class
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: BedrockServer
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
      startLine: 15
    syntax:
      content:
        CSharp: 'public class BedrockServer : ServerProxy'
        VB: >-
          Public Class BedrockServer

              Inherits ServerProxy
    inheritance:
    - System.Object
    - IMS_Library.ServerProxy
    inheritedMembers:
    - IMS_Library.ServerProxy.ID
    - IMS_Library.ServerProxy.State
    - IMS_Library.ServerProxy.GetDefaultServerConfiguration
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: IMS_Library.BedrockServer.CurrentConfiguration
      commentId: P:IMS_Library.BedrockServer.CurrentConfiguration
      language: CSharp
      name:
        CSharp: CurrentConfiguration
        VB: CurrentConfiguration
      nameWithType:
        CSharp: BedrockServer.CurrentConfiguration
        VB: BedrockServer.CurrentConfiguration
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.CurrentConfiguration
        VB: IMS_Library.BedrockServer.CurrentConfiguration
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: CurrentConfiguration
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 17
      syntax:
        content:
          CSharp: public override ServerConfiguration CurrentConfiguration { get; set; }
          VB: Public Overrides Property CurrentConfiguration As ServerConfiguration
        parameters: []
        return:
          type: IMS_Library.ServerConfiguration
      overload: IMS_Library.BedrockServer.CurrentConfiguration*
      overridden: IMS_Library.ServerProxy.CurrentConfiguration
      modifiers:
        CSharp:
        - public
        - override
        - get
        - set
        VB:
        - Public
        - Overrides
    - id: IMS_Library.BedrockServer.SupportsWhitelist
      commentId: P:IMS_Library.BedrockServer.SupportsWhitelist
      language: CSharp
      name:
        CSharp: SupportsWhitelist
        VB: SupportsWhitelist
      nameWithType:
        CSharp: BedrockServer.SupportsWhitelist
        VB: BedrockServer.SupportsWhitelist
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.SupportsWhitelist
        VB: IMS_Library.BedrockServer.SupportsWhitelist
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: SupportsWhitelist
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 30
      syntax:
        content:
          CSharp: public override bool SupportsWhitelist { get; }
          VB: Public Overrides ReadOnly Property SupportsWhitelist As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: IMS_Library.BedrockServer.SupportsWhitelist*
      overridden: IMS_Library.ServerProxy.SupportsWhitelist
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: IMS_Library.BedrockServer.WhitelistEnabled
      commentId: P:IMS_Library.BedrockServer.WhitelistEnabled
      language: CSharp
      name:
        CSharp: WhitelistEnabled
        VB: WhitelistEnabled
      nameWithType:
        CSharp: BedrockServer.WhitelistEnabled
        VB: BedrockServer.WhitelistEnabled
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.WhitelistEnabled
        VB: IMS_Library.BedrockServer.WhitelistEnabled
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: WhitelistEnabled
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 32
      syntax:
        content:
          CSharp: public override bool WhitelistEnabled { get; set; }
          VB: Public Overrides Property WhitelistEnabled As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: IMS_Library.BedrockServer.WhitelistEnabled*
      overridden: IMS_Library.ServerProxy.WhitelistEnabled
      modifiers:
        CSharp:
        - public
        - override
        - get
        - set
        VB:
        - Public
        - Overrides
    - id: IMS_Library.BedrockServer.SupportsBanning
      commentId: P:IMS_Library.BedrockServer.SupportsBanning
      language: CSharp
      name:
        CSharp: SupportsBanning
        VB: SupportsBanning
      nameWithType:
        CSharp: BedrockServer.SupportsBanning
        VB: BedrockServer.SupportsBanning
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.SupportsBanning
        VB: IMS_Library.BedrockServer.SupportsBanning
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: SupportsBanning
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 40
      syntax:
        content:
          CSharp: public override bool SupportsBanning { get; }
          VB: Public Overrides ReadOnly Property SupportsBanning As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: IMS_Library.BedrockServer.SupportsBanning*
      overridden: IMS_Library.ServerProxy.SupportsBanning
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: IMS_Library.BedrockServer.SupportsBanningIPs
      commentId: P:IMS_Library.BedrockServer.SupportsBanningIPs
      language: CSharp
      name:
        CSharp: SupportsBanningIPs
        VB: SupportsBanningIPs
      nameWithType:
        CSharp: BedrockServer.SupportsBanningIPs
        VB: BedrockServer.SupportsBanningIPs
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.SupportsBanningIPs
        VB: IMS_Library.BedrockServer.SupportsBanningIPs
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: SupportsBanningIPs
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 42
      syntax:
        content:
          CSharp: public override bool SupportsBanningIPs { get; }
          VB: Public Overrides ReadOnly Property SupportsBanningIPs As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: IMS_Library.BedrockServer.SupportsBanningIPs*
      overridden: IMS_Library.ServerProxy.SupportsBanningIPs
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: IMS_Library.BedrockServer.SupportsOps
      commentId: P:IMS_Library.BedrockServer.SupportsOps
      language: CSharp
      name:
        CSharp: SupportsOps
        VB: SupportsOps
      nameWithType:
        CSharp: BedrockServer.SupportsOps
        VB: BedrockServer.SupportsOps
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.SupportsOps
        VB: IMS_Library.BedrockServer.SupportsOps
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: SupportsOps
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 44
      syntax:
        content:
          CSharp: public override bool SupportsOps { get; }
          VB: Public Overrides ReadOnly Property SupportsOps As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: IMS_Library.BedrockServer.SupportsOps*
      overridden: IMS_Library.ServerProxy.SupportsOps
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: IMS_Library.BedrockServer.SupportsIPs
      commentId: P:IMS_Library.BedrockServer.SupportsIPs
      language: CSharp
      name:
        CSharp: SupportsIPs
        VB: SupportsIPs
      nameWithType:
        CSharp: BedrockServer.SupportsIPs
        VB: BedrockServer.SupportsIPs
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.SupportsIPs
        VB: IMS_Library.BedrockServer.SupportsIPs
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: SupportsIPs
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 46
      syntax:
        content:
          CSharp: public override bool SupportsIPs { get; }
          VB: Public Overrides ReadOnly Property SupportsIPs As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: IMS_Library.BedrockServer.SupportsIPs*
      overridden: IMS_Library.ServerProxy.SupportsIPs
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: IMS_Library.BedrockServer.SupportsKicking
      commentId: P:IMS_Library.BedrockServer.SupportsKicking
      language: CSharp
      name:
        CSharp: SupportsKicking
        VB: SupportsKicking
      nameWithType:
        CSharp: BedrockServer.SupportsKicking
        VB: BedrockServer.SupportsKicking
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.SupportsKicking
        VB: IMS_Library.BedrockServer.SupportsKicking
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: SupportsKicking
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 48
      syntax:
        content:
          CSharp: public override bool SupportsKicking { get; }
          VB: Public Overrides ReadOnly Property SupportsKicking As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: IMS_Library.BedrockServer.SupportsKicking*
      overridden: IMS_Library.ServerProxy.SupportsKicking
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: IMS_Library.BedrockServer.SupportedEdition
      commentId: P:IMS_Library.BedrockServer.SupportedEdition
      language: CSharp
      name:
        CSharp: SupportedEdition
        VB: SupportedEdition
      nameWithType:
        CSharp: BedrockServer.SupportedEdition
        VB: BedrockServer.SupportedEdition
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.SupportedEdition
        VB: IMS_Library.BedrockServer.SupportedEdition
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: SupportedEdition
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 50
      syntax:
        content:
          CSharp: public override MinecraftEdition SupportedEdition { get; }
          VB: Public Overrides ReadOnly Property SupportedEdition As MinecraftEdition
        parameters: []
        return:
          type: IMS_Library.MinecraftEdition
      overload: IMS_Library.BedrockServer.SupportedEdition*
      overridden: IMS_Library.ServerProxy.SupportedEdition
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: IMS_Library.BedrockServer.ServerLocation
      commentId: P:IMS_Library.BedrockServer.ServerLocation
      language: CSharp
      name:
        CSharp: ServerLocation
        VB: ServerLocation
      nameWithType:
        CSharp: BedrockServer.ServerLocation
        VB: BedrockServer.ServerLocation
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.ServerLocation
        VB: IMS_Library.BedrockServer.ServerLocation
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ServerLocation
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 52
      syntax:
        content:
          CSharp: protected string ServerLocation { get; }
          VB: Protected ReadOnly Property ServerLocation As String
        parameters: []
        return:
          type: System.String
      overload: IMS_Library.BedrockServer.ServerLocation*
      modifiers:
        CSharp:
        - protected
        - get
        VB:
        - Protected
        - ReadOnly
    - id: IMS_Library.BedrockServer.LogFolderLocation
      commentId: P:IMS_Library.BedrockServer.LogFolderLocation
      language: CSharp
      name:
        CSharp: LogFolderLocation
        VB: LogFolderLocation
      nameWithType:
        CSharp: BedrockServer.LogFolderLocation
        VB: BedrockServer.LogFolderLocation
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.LogFolderLocation
        VB: IMS_Library.BedrockServer.LogFolderLocation
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: LogFolderLocation
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 53
      syntax:
        content:
          CSharp: protected string LogFolderLocation { get; }
          VB: Protected ReadOnly Property LogFolderLocation As String
        parameters: []
        return:
          type: System.String
      overload: IMS_Library.BedrockServer.LogFolderLocation*
      modifiers:
        CSharp:
        - protected
        - get
        VB:
        - Protected
        - ReadOnly
    - id: IMS_Library.BedrockServer.WorldLocation
      commentId: P:IMS_Library.BedrockServer.WorldLocation
      language: CSharp
      name:
        CSharp: WorldLocation
        VB: WorldLocation
      nameWithType:
        CSharp: BedrockServer.WorldLocation
        VB: BedrockServer.WorldLocation
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.WorldLocation
        VB: IMS_Library.BedrockServer.WorldLocation
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: WorldLocation
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 54
      syntax:
        content:
          CSharp: protected string WorldLocation { get; }
          VB: Protected ReadOnly Property WorldLocation As String
        parameters: []
        return:
          type: System.String
      overload: IMS_Library.BedrockServer.WorldLocation*
      modifiers:
        CSharp:
        - protected
        - get
        VB:
        - Protected
        - ReadOnly
    - id: IMS_Library.BedrockServer.Locker
      commentId: F:IMS_Library.BedrockServer.Locker
      language: CSharp
      name:
        CSharp: Locker
        VB: Locker
      nameWithType:
        CSharp: BedrockServer.Locker
        VB: BedrockServer.Locker
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.Locker
        VB: IMS_Library.BedrockServer.Locker
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Locker
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 56
      syntax:
        content:
          CSharp: protected object Locker
          VB: Protected Locker As Object
        return:
          type: System.Object
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IMS_Library.BedrockServer.AllUsers
      commentId: F:IMS_Library.BedrockServer.AllUsers
      language: CSharp
      name:
        CSharp: AllUsers
        VB: AllUsers
      nameWithType:
        CSharp: BedrockServer.AllUsers
        VB: BedrockServer.AllUsers
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.AllUsers
        VB: IMS_Library.BedrockServer.AllUsers
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: AllUsers
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 58
      syntax:
        content:
          CSharp: protected Dictionary<string, MinecraftPlayer> AllUsers
          VB: Protected AllUsers As Dictionary(Of String, MinecraftPlayer)
        return:
          type: System.Collections.Generic.Dictionary{System.String,IMS_Library.MinecraftPlayer}
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IMS_Library.BedrockServer.OnlineUsers
      commentId: F:IMS_Library.BedrockServer.OnlineUsers
      language: CSharp
      name:
        CSharp: OnlineUsers
        VB: OnlineUsers
      nameWithType:
        CSharp: BedrockServer.OnlineUsers
        VB: BedrockServer.OnlineUsers
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.OnlineUsers
        VB: IMS_Library.BedrockServer.OnlineUsers
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: OnlineUsers
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 59
      syntax:
        content:
          CSharp: protected Dictionary<string, MinecraftPlayer> OnlineUsers
          VB: Protected OnlineUsers As Dictionary(Of String, MinecraftPlayer)
        return:
          type: System.Collections.Generic.Dictionary{System.String,IMS_Library.MinecraftPlayer}
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IMS_Library.BedrockServer.ServerProcess
      commentId: F:IMS_Library.BedrockServer.ServerProcess
      language: CSharp
      name:
        CSharp: ServerProcess
        VB: ServerProcess
      nameWithType:
        CSharp: BedrockServer.ServerProcess
        VB: BedrockServer.ServerProcess
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.ServerProcess
        VB: IMS_Library.BedrockServer.ServerProcess
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ServerProcess
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 61
      syntax:
        content:
          CSharp: protected Process ServerProcess
          VB: Protected ServerProcess As Process
        return:
          type: System.Diagnostics.Process
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IMS_Library.BedrockServer.ServerPreferences
      commentId: F:IMS_Library.BedrockServer.ServerPreferences
      language: CSharp
      name:
        CSharp: ServerPreferences
        VB: ServerPreferences
      nameWithType:
        CSharp: BedrockServer.ServerPreferences
        VB: BedrockServer.ServerPreferences
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.ServerPreferences
        VB: IMS_Library.BedrockServer.ServerPreferences
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ServerPreferences
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 62
      syntax:
        content:
          CSharp: protected BedrockServerConfiguration ServerPreferences
          VB: Protected ServerPreferences As BedrockServerConfiguration
        return:
          type: IMS_Library.BedrockServerConfiguration
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IMS_Library.BedrockServer.WhitelistWatcher
      commentId: F:IMS_Library.BedrockServer.WhitelistWatcher
      language: CSharp
      name:
        CSharp: WhitelistWatcher
        VB: WhitelistWatcher
      nameWithType:
        CSharp: BedrockServer.WhitelistWatcher
        VB: BedrockServer.WhitelistWatcher
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.WhitelistWatcher
        VB: IMS_Library.BedrockServer.WhitelistWatcher
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: WhitelistWatcher
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 64
      syntax:
        content:
          CSharp: protected FileSystemWatcher WhitelistWatcher
          VB: Protected WhitelistWatcher As FileSystemWatcher
        return:
          type: System.IO.FileSystemWatcher
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IMS_Library.BedrockServer.PermissionsWatcher
      commentId: F:IMS_Library.BedrockServer.PermissionsWatcher
      language: CSharp
      name:
        CSharp: PermissionsWatcher
        VB: PermissionsWatcher
      nameWithType:
        CSharp: BedrockServer.PermissionsWatcher
        VB: BedrockServer.PermissionsWatcher
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.PermissionsWatcher
        VB: IMS_Library.BedrockServer.PermissionsWatcher
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: PermissionsWatcher
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 64
      syntax:
        content:
          CSharp: protected FileSystemWatcher PermissionsWatcher
          VB: Protected PermissionsWatcher As FileSystemWatcher
        return:
          type: System.IO.FileSystemWatcher
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IMS_Library.BedrockServer.LogWriter
      commentId: F:IMS_Library.BedrockServer.LogWriter
      language: CSharp
      name:
        CSharp: LogWriter
        VB: LogWriter
      nameWithType:
        CSharp: BedrockServer.LogWriter
        VB: BedrockServer.LogWriter
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.LogWriter
        VB: IMS_Library.BedrockServer.LogWriter
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: LogWriter
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 65
      syntax:
        content:
          CSharp: protected StreamWriter LogWriter
          VB: Protected LogWriter As StreamWriter
        return:
          type: System.IO.StreamWriter
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IMS_Library.BedrockServer.ConsoleText
      commentId: F:IMS_Library.BedrockServer.ConsoleText
      language: CSharp
      name:
        CSharp: ConsoleText
        VB: ConsoleText
      nameWithType:
        CSharp: BedrockServer.ConsoleText
        VB: BedrockServer.ConsoleText
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.ConsoleText
        VB: IMS_Library.BedrockServer.ConsoleText
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ConsoleText
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 66
      syntax:
        content:
          CSharp: protected List<string> ConsoleText
          VB: Protected ConsoleText As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IMS_Library.BedrockServer.CurrentBackupState
      commentId: F:IMS_Library.BedrockServer.CurrentBackupState
      language: CSharp
      name:
        CSharp: CurrentBackupState
        VB: CurrentBackupState
      nameWithType:
        CSharp: BedrockServer.CurrentBackupState
        VB: BedrockServer.CurrentBackupState
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.CurrentBackupState
        VB: IMS_Library.BedrockServer.CurrentBackupState
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: CurrentBackupState
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 68
      syntax:
        content:
          CSharp: protected BedrockServer.BackupState CurrentBackupState
          VB: Protected CurrentBackupState As BedrockServer.BackupState
        return:
          type: IMS_Library.BedrockServer.BackupState
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IMS_Library.BedrockServer.#ctor(System.Guid,IMS_Library.BedrockServerConfiguration)
      commentId: M:IMS_Library.BedrockServer.#ctor(System.Guid,IMS_Library.BedrockServerConfiguration)
      language: CSharp
      name:
        CSharp: BedrockServer(Guid, BedrockServerConfiguration)
        VB: BedrockServer(Guid, BedrockServerConfiguration)
      nameWithType:
        CSharp: BedrockServer.BedrockServer(Guid, BedrockServerConfiguration)
        VB: BedrockServer.BedrockServer(Guid, BedrockServerConfiguration)
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.BedrockServer(System.Guid, IMS_Library.BedrockServerConfiguration)
        VB: IMS_Library.BedrockServer.BedrockServer(System.Guid, IMS_Library.BedrockServerConfiguration)
      type: Constructor
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: .ctor
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 70
      syntax:
        content:
          CSharp: public BedrockServer(Guid id, BedrockServerConfiguration configuration)
          VB: Public Sub New(id As Guid, configuration As BedrockServerConfiguration)
        parameters:
        - id: id
          type: System.Guid
        - id: configuration
          type: IMS_Library.BedrockServerConfiguration
      overload: IMS_Library.BedrockServer.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.BedrockServer.BackupToLocationAsync(System.String)
      commentId: M:IMS_Library.BedrockServer.BackupToLocationAsync(System.String)
      language: CSharp
      name:
        CSharp: BackupToLocationAsync(String)
        VB: BackupToLocationAsync(String)
      nameWithType:
        CSharp: BedrockServer.BackupToLocationAsync(String)
        VB: BedrockServer.BackupToLocationAsync(String)
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.BackupToLocationAsync(System.String)
        VB: IMS_Library.BedrockServer.BackupToLocationAsync(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: BackupToLocationAsync
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 75
      syntax:
        content:
          CSharp: public override Task BackupToLocationAsync(string location)
          VB: Public Overrides Function BackupToLocationAsync(location As String) As Task
        parameters:
        - id: location
          type: System.String
        return:
          type: System.Threading.Tasks.Task
      overload: IMS_Library.BedrockServer.BackupToLocationAsync*
      overridden: IMS_Library.ServerProxy.BackupToLocationAsync(System.String)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.BedrockServer.BackupToZipFileAsync(System.String)
      commentId: M:IMS_Library.BedrockServer.BackupToZipFileAsync(System.String)
      language: CSharp
      name:
        CSharp: BackupToZipFileAsync(String)
        VB: BackupToZipFileAsync(String)
      nameWithType:
        CSharp: BedrockServer.BackupToZipFileAsync(String)
        VB: BedrockServer.BackupToZipFileAsync(String)
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.BackupToZipFileAsync(System.String)
        VB: IMS_Library.BedrockServer.BackupToZipFileAsync(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: BackupToZipFileAsync
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 113
      syntax:
        content:
          CSharp: public override Task BackupToZipFileAsync(string file)
          VB: Public Overrides Function BackupToZipFileAsync(file As String) As Task
        parameters:
        - id: file
          type: System.String
        return:
          type: System.Threading.Tasks.Task
      overload: IMS_Library.BedrockServer.BackupToZipFileAsync*
      overridden: IMS_Library.ServerProxy.BackupToZipFileAsync(System.String)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.BedrockServer.BanIP(System.String,System.String)
      commentId: M:IMS_Library.BedrockServer.BanIP(System.String,System.String)
      language: CSharp
      name:
        CSharp: BanIP(String, String)
        VB: BanIP(String, String)
      nameWithType:
        CSharp: BedrockServer.BanIP(String, String)
        VB: BedrockServer.BanIP(String, String)
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.BanIP(System.String, System.String)
        VB: IMS_Library.BedrockServer.BanIP(System.String, System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: BanIP
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 154
      syntax:
        content:
          CSharp: public override void BanIP(string ip, string reason)
          VB: Public Overrides Sub BanIP(ip As String, reason As String)
        parameters:
        - id: ip
          type: System.String
        - id: reason
          type: System.String
      overload: IMS_Library.BedrockServer.BanIP*
      overridden: IMS_Library.ServerProxy.BanIP(System.String,System.String)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.BedrockServer.BanPlayer(System.String,System.String)
      commentId: M:IMS_Library.BedrockServer.BanPlayer(System.String,System.String)
      language: CSharp
      name:
        CSharp: BanPlayer(String, String)
        VB: BanPlayer(String, String)
      nameWithType:
        CSharp: BedrockServer.BanPlayer(String, String)
        VB: BedrockServer.BanPlayer(String, String)
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.BanPlayer(System.String, System.String)
        VB: IMS_Library.BedrockServer.BanPlayer(System.String, System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: BanPlayer
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 159
      syntax:
        content:
          CSharp: public override void BanPlayer(string name, string reason)
          VB: Public Overrides Sub BanPlayer(name As String, reason As String)
        parameters:
        - id: name
          type: System.String
        - id: reason
          type: System.String
      overload: IMS_Library.BedrockServer.BanPlayer*
      overridden: IMS_Library.ServerProxy.BanPlayer(System.String,System.String)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.BedrockServer.DeopPlayer(System.String)
      commentId: M:IMS_Library.BedrockServer.DeopPlayer(System.String)
      language: CSharp
      name:
        CSharp: DeopPlayer(String)
        VB: DeopPlayer(String)
      nameWithType:
        CSharp: BedrockServer.DeopPlayer(String)
        VB: BedrockServer.DeopPlayer(String)
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.DeopPlayer(System.String)
        VB: IMS_Library.BedrockServer.DeopPlayer(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: DeopPlayer
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 164
      syntax:
        content:
          CSharp: public override void DeopPlayer(string name)
          VB: Public Overrides Sub DeopPlayer(name As String)
        parameters:
        - id: name
          type: System.String
      overload: IMS_Library.BedrockServer.DeopPlayer*
      overridden: IMS_Library.ServerProxy.DeopPlayer(System.String)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.BedrockServer.GetAllBannedIPs
      commentId: M:IMS_Library.BedrockServer.GetAllBannedIPs
      language: CSharp
      name:
        CSharp: GetAllBannedIPs()
        VB: GetAllBannedIPs()
      nameWithType:
        CSharp: BedrockServer.GetAllBannedIPs()
        VB: BedrockServer.GetAllBannedIPs()
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.GetAllBannedIPs()
        VB: IMS_Library.BedrockServer.GetAllBannedIPs()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetAllBannedIPs
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 186
      syntax:
        content:
          CSharp: public override List<BanIPTag> GetAllBannedIPs()
          VB: Public Overrides Function GetAllBannedIPs As List(Of BanIPTag)
        return:
          type: System.Collections.Generic.List{IMS_Library.BanIPTag}
      overload: IMS_Library.BedrockServer.GetAllBannedIPs*
      overridden: IMS_Library.ServerProxy.GetAllBannedIPs
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.BedrockServer.GetAllBans
      commentId: M:IMS_Library.BedrockServer.GetAllBans
      language: CSharp
      name:
        CSharp: GetAllBans()
        VB: GetAllBans()
      nameWithType:
        CSharp: BedrockServer.GetAllBans()
        VB: BedrockServer.GetAllBans()
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.GetAllBans()
        VB: IMS_Library.BedrockServer.GetAllBans()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetAllBans
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 191
      syntax:
        content:
          CSharp: public override List<BanInformation> GetAllBans()
          VB: Public Overrides Function GetAllBans As List(Of BanInformation)
        return:
          type: System.Collections.Generic.List{IMS_Library.BanInformation}
      overload: IMS_Library.BedrockServer.GetAllBans*
      overridden: IMS_Library.ServerProxy.GetAllBans
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.BedrockServer.GetAllOps
      commentId: M:IMS_Library.BedrockServer.GetAllOps
      language: CSharp
      name:
        CSharp: GetAllOps()
        VB: GetAllOps()
      nameWithType:
        CSharp: BedrockServer.GetAllOps()
        VB: BedrockServer.GetAllOps()
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.GetAllOps()
        VB: IMS_Library.BedrockServer.GetAllOps()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetAllOps
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 196
      syntax:
        content:
          CSharp: public override IEnumerable<MinecraftPlayer> GetAllOps()
          VB: Public Overrides Function GetAllOps As IEnumerable(Of MinecraftPlayer)
        return:
          type: System.Collections.Generic.IEnumerable{IMS_Library.MinecraftPlayer}
      overload: IMS_Library.BedrockServer.GetAllOps*
      overridden: IMS_Library.ServerProxy.GetAllOps
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.BedrockServer.GetAllPlayers
      commentId: M:IMS_Library.BedrockServer.GetAllPlayers
      language: CSharp
      name:
        CSharp: GetAllPlayers()
        VB: GetAllPlayers()
      nameWithType:
        CSharp: BedrockServer.GetAllPlayers()
        VB: BedrockServer.GetAllPlayers()
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.GetAllPlayers()
        VB: IMS_Library.BedrockServer.GetAllPlayers()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetAllPlayers
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 204
      syntax:
        content:
          CSharp: public override IEnumerable<MinecraftPlayer> GetAllPlayers()
          VB: Public Overrides Function GetAllPlayers As IEnumerable(Of MinecraftPlayer)
        return:
          type: System.Collections.Generic.IEnumerable{IMS_Library.MinecraftPlayer}
      overload: IMS_Library.BedrockServer.GetAllPlayers*
      overridden: IMS_Library.ServerProxy.GetAllPlayers
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.BedrockServer.GetAllWhitelistedPlayers
      commentId: M:IMS_Library.BedrockServer.GetAllWhitelistedPlayers
      language: CSharp
      name:
        CSharp: GetAllWhitelistedPlayers()
        VB: GetAllWhitelistedPlayers()
      nameWithType:
        CSharp: BedrockServer.GetAllWhitelistedPlayers()
        VB: BedrockServer.GetAllWhitelistedPlayers()
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.GetAllWhitelistedPlayers()
        VB: IMS_Library.BedrockServer.GetAllWhitelistedPlayers()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetAllWhitelistedPlayers
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 212
      syntax:
        content:
          CSharp: public override IEnumerable<MinecraftPlayer> GetAllWhitelistedPlayers()
          VB: Public Overrides Function GetAllWhitelistedPlayers As IEnumerable(Of MinecraftPlayer)
        return:
          type: System.Collections.Generic.IEnumerable{IMS_Library.MinecraftPlayer}
      overload: IMS_Library.BedrockServer.GetAllWhitelistedPlayers*
      overridden: IMS_Library.ServerProxy.GetAllWhitelistedPlayers
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.BedrockServer.GetConsoleText
      commentId: M:IMS_Library.BedrockServer.GetConsoleText
      language: CSharp
      name:
        CSharp: GetConsoleText()
        VB: GetConsoleText()
      nameWithType:
        CSharp: BedrockServer.GetConsoleText()
        VB: BedrockServer.GetConsoleText()
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.GetConsoleText()
        VB: IMS_Library.BedrockServer.GetConsoleText()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetConsoleText
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 220
      syntax:
        content:
          CSharp: public override string GetConsoleText()
          VB: Public Overrides Function GetConsoleText As String
        return:
          type: System.String
      overload: IMS_Library.BedrockServer.GetConsoleText*
      overridden: IMS_Library.ServerProxy.GetConsoleText
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.BedrockServer.GetLogFile(System.String)
      commentId: M:IMS_Library.BedrockServer.GetLogFile(System.String)
      language: CSharp
      name:
        CSharp: GetLogFile(String)
        VB: GetLogFile(String)
      nameWithType:
        CSharp: BedrockServer.GetLogFile(String)
        VB: BedrockServer.GetLogFile(String)
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.GetLogFile(System.String)
        VB: IMS_Library.BedrockServer.GetLogFile(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetLogFile
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 233
      syntax:
        content:
          CSharp: public override string GetLogFile(string name)
          VB: Public Overrides Function GetLogFile(name As String) As String
        parameters:
        - id: name
          type: System.String
        return:
          type: System.String
      overload: IMS_Library.BedrockServer.GetLogFile*
      overridden: IMS_Library.ServerProxy.GetLogFile(System.String)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.BedrockServer.GetLogFiles
      commentId: M:IMS_Library.BedrockServer.GetLogFiles
      language: CSharp
      name:
        CSharp: GetLogFiles()
        VB: GetLogFiles()
      nameWithType:
        CSharp: BedrockServer.GetLogFiles()
        VB: BedrockServer.GetLogFiles()
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.GetLogFiles()
        VB: IMS_Library.BedrockServer.GetLogFiles()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetLogFiles
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 238
      syntax:
        content:
          CSharp: public override List<LogFileInformation> GetLogFiles()
          VB: Public Overrides Function GetLogFiles As List(Of LogFileInformation)
        return:
          type: System.Collections.Generic.List{IMS_Library.LogFileInformation}
      overload: IMS_Library.BedrockServer.GetLogFiles*
      overridden: IMS_Library.ServerProxy.GetLogFiles
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.BedrockServer.GetOnlinePlayers
      commentId: M:IMS_Library.BedrockServer.GetOnlinePlayers
      language: CSharp
      name:
        CSharp: GetOnlinePlayers()
        VB: GetOnlinePlayers()
      nameWithType:
        CSharp: BedrockServer.GetOnlinePlayers()
        VB: BedrockServer.GetOnlinePlayers()
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.GetOnlinePlayers()
        VB: IMS_Library.BedrockServer.GetOnlinePlayers()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetOnlinePlayers
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 243
      syntax:
        content:
          CSharp: public override IEnumerable<MinecraftPlayer> GetOnlinePlayers()
          VB: Public Overrides Function GetOnlinePlayers As IEnumerable(Of MinecraftPlayer)
        return:
          type: System.Collections.Generic.IEnumerable{IMS_Library.MinecraftPlayer}
      overload: IMS_Library.BedrockServer.GetOnlinePlayers*
      overridden: IMS_Library.ServerProxy.GetOnlinePlayers
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.BedrockServer.GetPlayerInformationByUsername(System.String)
      commentId: M:IMS_Library.BedrockServer.GetPlayerInformationByUsername(System.String)
      language: CSharp
      name:
        CSharp: GetPlayerInformationByUsername(String)
        VB: GetPlayerInformationByUsername(String)
      nameWithType:
        CSharp: BedrockServer.GetPlayerInformationByUsername(String)
        VB: BedrockServer.GetPlayerInformationByUsername(String)
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.GetPlayerInformationByUsername(System.String)
        VB: IMS_Library.BedrockServer.GetPlayerInformationByUsername(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetPlayerInformationByUsername
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 251
      syntax:
        content:
          CSharp: public override MinecraftPlayer GetPlayerInformationByUsername(string username)
          VB: Public Overrides Function GetPlayerInformationByUsername(username As String) As MinecraftPlayer
        parameters:
        - id: username
          type: System.String
        return:
          type: IMS_Library.MinecraftPlayer
      overload: IMS_Library.BedrockServer.GetPlayerInformationByUsername*
      overridden: IMS_Library.ServerProxy.GetPlayerInformationByUsername(System.String)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.BedrockServer.GetPlayerInformationByUUID(System.String)
      commentId: M:IMS_Library.BedrockServer.GetPlayerInformationByUUID(System.String)
      language: CSharp
      name:
        CSharp: GetPlayerInformationByUUID(String)
        VB: GetPlayerInformationByUUID(String)
      nameWithType:
        CSharp: BedrockServer.GetPlayerInformationByUUID(String)
        VB: BedrockServer.GetPlayerInformationByUUID(String)
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.GetPlayerInformationByUUID(System.String)
        VB: IMS_Library.BedrockServer.GetPlayerInformationByUUID(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetPlayerInformationByUUID
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 259
      syntax:
        content:
          CSharp: public override MinecraftPlayer GetPlayerInformationByUUID(string uuid)
          VB: Public Overrides Function GetPlayerInformationByUUID(uuid As String) As MinecraftPlayer
        parameters:
        - id: uuid
          type: System.String
        return:
          type: IMS_Library.MinecraftPlayer
      overload: IMS_Library.BedrockServer.GetPlayerInformationByUUID*
      overridden: IMS_Library.ServerProxy.GetPlayerInformationByUUID(System.String)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.BedrockServer.KickPlayer(System.String,System.String)
      commentId: M:IMS_Library.BedrockServer.KickPlayer(System.String,System.String)
      language: CSharp
      name:
        CSharp: KickPlayer(String, String)
        VB: KickPlayer(String, String)
      nameWithType:
        CSharp: BedrockServer.KickPlayer(String, String)
        VB: BedrockServer.KickPlayer(String, String)
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.KickPlayer(System.String, System.String)
        VB: IMS_Library.BedrockServer.KickPlayer(System.String, System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: KickPlayer
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 267
      syntax:
        content:
          CSharp: public override void KickPlayer(string name, string reason)
          VB: Public Overrides Sub KickPlayer(name As String, reason As String)
        parameters:
        - id: name
          type: System.String
        - id: reason
          type: System.String
      overload: IMS_Library.BedrockServer.KickPlayer*
      overridden: IMS_Library.ServerProxy.KickPlayer(System.String,System.String)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.BedrockServer.OpPlayer(System.String)
      commentId: M:IMS_Library.BedrockServer.OpPlayer(System.String)
      language: CSharp
      name:
        CSharp: OpPlayer(String)
        VB: OpPlayer(String)
      nameWithType:
        CSharp: BedrockServer.OpPlayer(String)
        VB: BedrockServer.OpPlayer(String)
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.OpPlayer(System.String)
        VB: IMS_Library.BedrockServer.OpPlayer(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: OpPlayer
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 272
      syntax:
        content:
          CSharp: public override void OpPlayer(string name)
          VB: Public Overrides Sub OpPlayer(name As String)
        parameters:
        - id: name
          type: System.String
      overload: IMS_Library.BedrockServer.OpPlayer*
      overridden: IMS_Library.ServerProxy.OpPlayer(System.String)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.BedrockServer.ReloadServerPermissions
      commentId: M:IMS_Library.BedrockServer.ReloadServerPermissions
      language: CSharp
      name:
        CSharp: ReloadServerPermissions()
        VB: ReloadServerPermissions()
      nameWithType:
        CSharp: BedrockServer.ReloadServerPermissions()
        VB: BedrockServer.ReloadServerPermissions()
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.ReloadServerPermissions()
        VB: IMS_Library.BedrockServer.ReloadServerPermissions()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ReloadServerPermissions
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 294
      syntax:
        content:
          CSharp: public override void ReloadServerPermissions()
          VB: Public Overrides Sub ReloadServerPermissions
      overload: IMS_Library.BedrockServer.ReloadServerPermissions*
      overridden: IMS_Library.ServerProxy.ReloadServerPermissions
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.BedrockServer.ReloadServerWhitelist
      commentId: M:IMS_Library.BedrockServer.ReloadServerWhitelist
      language: CSharp
      name:
        CSharp: ReloadServerWhitelist()
        VB: ReloadServerWhitelist()
      nameWithType:
        CSharp: BedrockServer.ReloadServerWhitelist()
        VB: BedrockServer.ReloadServerWhitelist()
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.ReloadServerWhitelist()
        VB: IMS_Library.BedrockServer.ReloadServerWhitelist()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ReloadServerWhitelist
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 299
      syntax:
        content:
          CSharp: public override void ReloadServerWhitelist()
          VB: Public Overrides Sub ReloadServerWhitelist
      overload: IMS_Library.BedrockServer.ReloadServerWhitelist*
      overridden: IMS_Library.ServerProxy.ReloadServerWhitelist
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.BedrockServer.RemoveWhitelistPlayer(System.String)
      commentId: M:IMS_Library.BedrockServer.RemoveWhitelistPlayer(System.String)
      language: CSharp
      name:
        CSharp: RemoveWhitelistPlayer(String)
        VB: RemoveWhitelistPlayer(String)
      nameWithType:
        CSharp: BedrockServer.RemoveWhitelistPlayer(String)
        VB: BedrockServer.RemoveWhitelistPlayer(String)
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.RemoveWhitelistPlayer(System.String)
        VB: IMS_Library.BedrockServer.RemoveWhitelistPlayer(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: RemoveWhitelistPlayer
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 304
      syntax:
        content:
          CSharp: public override void RemoveWhitelistPlayer(string name)
          VB: Public Overrides Sub RemoveWhitelistPlayer(name As String)
        parameters:
        - id: name
          type: System.String
      overload: IMS_Library.BedrockServer.RemoveWhitelistPlayer*
      overridden: IMS_Library.ServerProxy.RemoveWhitelistPlayer(System.String)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.BedrockServer.RestartAsync
      commentId: M:IMS_Library.BedrockServer.RestartAsync
      language: CSharp
      name:
        CSharp: RestartAsync()
        VB: RestartAsync()
      nameWithType:
        CSharp: BedrockServer.RestartAsync()
        VB: BedrockServer.RestartAsync()
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.RestartAsync()
        VB: IMS_Library.BedrockServer.RestartAsync()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: RestartAsync
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 323
      syntax:
        content:
          CSharp: public override Task RestartAsync()
          VB: Public Overrides Function RestartAsync As Task
        return:
          type: System.Threading.Tasks.Task
      overload: IMS_Library.BedrockServer.RestartAsync*
      overridden: IMS_Library.ServerProxy.RestartAsync
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.BedrockServer.SendConsoleCommand(System.String)
      commentId: M:IMS_Library.BedrockServer.SendConsoleCommand(System.String)
      language: CSharp
      name:
        CSharp: SendConsoleCommand(String)
        VB: SendConsoleCommand(String)
      nameWithType:
        CSharp: BedrockServer.SendConsoleCommand(String)
        VB: BedrockServer.SendConsoleCommand(String)
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.SendConsoleCommand(System.String)
        VB: IMS_Library.BedrockServer.SendConsoleCommand(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: SendConsoleCommand
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 329
      syntax:
        content:
          CSharp: public override void SendConsoleCommand(string command)
          VB: Public Overrides Sub SendConsoleCommand(command As String)
        parameters:
        - id: command
          type: System.String
      overload: IMS_Library.BedrockServer.SendConsoleCommand*
      overridden: IMS_Library.ServerProxy.SendConsoleCommand(System.String)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.BedrockServer.StartAsync
      commentId: M:IMS_Library.BedrockServer.StartAsync
      language: CSharp
      name:
        CSharp: StartAsync()
        VB: StartAsync()
      nameWithType:
        CSharp: BedrockServer.StartAsync()
        VB: BedrockServer.StartAsync()
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.StartAsync()
        VB: IMS_Library.BedrockServer.StartAsync()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: StartAsync
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 341
      syntax:
        content:
          CSharp: public override Task StartAsync()
          VB: Public Overrides Function StartAsync As Task
        return:
          type: System.Threading.Tasks.Task
      overload: IMS_Library.BedrockServer.StartAsync*
      overridden: IMS_Library.ServerProxy.StartAsync
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.BedrockServer.StopAsync
      commentId: M:IMS_Library.BedrockServer.StopAsync
      language: CSharp
      name:
        CSharp: StopAsync()
        VB: StopAsync()
      nameWithType:
        CSharp: BedrockServer.StopAsync()
        VB: BedrockServer.StopAsync()
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.StopAsync()
        VB: IMS_Library.BedrockServer.StopAsync()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: StopAsync
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 447
      syntax:
        content:
          CSharp: public override Task StopAsync()
          VB: Public Overrides Function StopAsync As Task
        return:
          type: System.Threading.Tasks.Task
      overload: IMS_Library.BedrockServer.StopAsync*
      overridden: IMS_Library.ServerProxy.StopAsync
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.BedrockServer.UnbanIP(System.String)
      commentId: M:IMS_Library.BedrockServer.UnbanIP(System.String)
      language: CSharp
      name:
        CSharp: UnbanIP(String)
        VB: UnbanIP(String)
      nameWithType:
        CSharp: BedrockServer.UnbanIP(String)
        VB: BedrockServer.UnbanIP(String)
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.UnbanIP(System.String)
        VB: IMS_Library.BedrockServer.UnbanIP(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: UnbanIP
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 479
      syntax:
        content:
          CSharp: public override void UnbanIP(string ip)
          VB: Public Overrides Sub UnbanIP(ip As String)
        parameters:
        - id: ip
          type: System.String
      overload: IMS_Library.BedrockServer.UnbanIP*
      overridden: IMS_Library.ServerProxy.UnbanIP(System.String)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.BedrockServer.UnbanPlayer(System.String)
      commentId: M:IMS_Library.BedrockServer.UnbanPlayer(System.String)
      language: CSharp
      name:
        CSharp: UnbanPlayer(String)
        VB: UnbanPlayer(String)
      nameWithType:
        CSharp: BedrockServer.UnbanPlayer(String)
        VB: BedrockServer.UnbanPlayer(String)
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.UnbanPlayer(System.String)
        VB: IMS_Library.BedrockServer.UnbanPlayer(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: UnbanPlayer
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 484
      syntax:
        content:
          CSharp: public override void UnbanPlayer(string name)
          VB: Public Overrides Sub UnbanPlayer(name As String)
        parameters:
        - id: name
          type: System.String
      overload: IMS_Library.BedrockServer.UnbanPlayer*
      overridden: IMS_Library.ServerProxy.UnbanPlayer(System.String)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.BedrockServer.WhitelistPlayer(System.String)
      commentId: M:IMS_Library.BedrockServer.WhitelistPlayer(System.String)
      language: CSharp
      name:
        CSharp: WhitelistPlayer(String)
        VB: WhitelistPlayer(String)
      nameWithType:
        CSharp: BedrockServer.WhitelistPlayer(String)
        VB: BedrockServer.WhitelistPlayer(String)
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.WhitelistPlayer(System.String)
        VB: IMS_Library.BedrockServer.WhitelistPlayer(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: WhitelistPlayer
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 489
      syntax:
        content:
          CSharp: public override void WhitelistPlayer(string name)
          VB: Public Overrides Sub WhitelistPlayer(name As String)
        parameters:
        - id: name
          type: System.String
      overload: IMS_Library.BedrockServer.WhitelistPlayer*
      overridden: IMS_Library.ServerProxy.WhitelistPlayer(System.String)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.BedrockServer.ReloadWhitelistJSON
      commentId: M:IMS_Library.BedrockServer.ReloadWhitelistJSON
      language: CSharp
      name:
        CSharp: ReloadWhitelistJSON()
        VB: ReloadWhitelistJSON()
      nameWithType:
        CSharp: BedrockServer.ReloadWhitelistJSON()
        VB: BedrockServer.ReloadWhitelistJSON()
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.ReloadWhitelistJSON()
        VB: IMS_Library.BedrockServer.ReloadWhitelistJSON()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ReloadWhitelistJSON
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 507
      syntax:
        content:
          CSharp: protected void ReloadWhitelistJSON()
          VB: Protected Sub ReloadWhitelistJSON
      overload: IMS_Library.BedrockServer.ReloadWhitelistJSON*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IMS_Library.BedrockServer.ReloadOpJSON
      commentId: M:IMS_Library.BedrockServer.ReloadOpJSON
      language: CSharp
      name:
        CSharp: ReloadOpJSON()
        VB: ReloadOpJSON()
      nameWithType:
        CSharp: BedrockServer.ReloadOpJSON()
        VB: BedrockServer.ReloadOpJSON()
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.ReloadOpJSON()
        VB: IMS_Library.BedrockServer.ReloadOpJSON()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ReloadOpJSON
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 538
      syntax:
        content:
          CSharp: protected void ReloadOpJSON()
          VB: Protected Sub ReloadOpJSON
      overload: IMS_Library.BedrockServer.ReloadOpJSON*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IMS_Library.BedrockServer.OnServerConsoleDataReceived(System.Object,System.Diagnostics.DataReceivedEventArgs)
      commentId: M:IMS_Library.BedrockServer.OnServerConsoleDataReceived(System.Object,System.Diagnostics.DataReceivedEventArgs)
      language: CSharp
      name:
        CSharp: OnServerConsoleDataReceived(Object, DataReceivedEventArgs)
        VB: OnServerConsoleDataReceived(Object, DataReceivedEventArgs)
      nameWithType:
        CSharp: BedrockServer.OnServerConsoleDataReceived(Object, DataReceivedEventArgs)
        VB: BedrockServer.OnServerConsoleDataReceived(Object, DataReceivedEventArgs)
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.OnServerConsoleDataReceived(System.Object, System.Diagnostics.DataReceivedEventArgs)
        VB: IMS_Library.BedrockServer.OnServerConsoleDataReceived(System.Object, System.Diagnostics.DataReceivedEventArgs)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: OnServerConsoleDataReceived
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 563
      syntax:
        content:
          CSharp: protected void OnServerConsoleDataReceived(object sender, DataReceivedEventArgs args)
          VB: Protected Sub OnServerConsoleDataReceived(sender As Object, args As DataReceivedEventArgs)
        parameters:
        - id: sender
          type: System.Object
        - id: args
          type: System.Diagnostics.DataReceivedEventArgs
      overload: IMS_Library.BedrockServer.OnServerConsoleDataReceived*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IMS_Library.BedrockServer.MatchRegex(System.String,System.String,System.Text.RegularExpressions.Match@)
      commentId: M:IMS_Library.BedrockServer.MatchRegex(System.String,System.String,System.Text.RegularExpressions.Match@)
      language: CSharp
      name:
        CSharp: MatchRegex(String, String, out Match)
        VB: MatchRegex(String, String, ByRef Match)
      nameWithType:
        CSharp: BedrockServer.MatchRegex(String, String, out Match)
        VB: BedrockServer.MatchRegex(String, String, ByRef Match)
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.MatchRegex(System.String, System.String, out System.Text.RegularExpressions.Match)
        VB: IMS_Library.BedrockServer.MatchRegex(System.String, System.String, ByRef System.Text.RegularExpressions.Match)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: MatchRegex
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 632
      syntax:
        content:
          CSharp: protected bool MatchRegex(string data, string pattern, out Match match)
          VB: Protected Function MatchRegex(data As String, pattern As String, ByRef match As Match) As Boolean
        parameters:
        - id: data
          type: System.String
        - id: pattern
          type: System.String
        - id: match
          type: System.Text.RegularExpressions.Match
        return:
          type: System.Boolean
      overload: IMS_Library.BedrockServer.MatchRegex*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IMS_Library.BedrockServer.OnServerProcessDie(System.Diagnostics.Process)
      commentId: M:IMS_Library.BedrockServer.OnServerProcessDie(System.Diagnostics.Process)
      language: CSharp
      name:
        CSharp: OnServerProcessDie(Process)
        VB: OnServerProcessDie(Process)
      nameWithType:
        CSharp: BedrockServer.OnServerProcessDie(Process)
        VB: BedrockServer.OnServerProcessDie(Process)
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.OnServerProcessDie(System.Diagnostics.Process)
        VB: IMS_Library.BedrockServer.OnServerProcessDie(System.Diagnostics.Process)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: OnServerProcessDie
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 638
      syntax:
        content:
          CSharp: protected void OnServerProcessDie(Process process)
          VB: Protected Sub OnServerProcessDie(process As Process)
        parameters:
        - id: process
          type: System.Diagnostics.Process
      overload: IMS_Library.BedrockServer.OnServerProcessDie*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IMS_Library.BedrockServer.SendUncheckedConsoleCommand(System.String)
      commentId: M:IMS_Library.BedrockServer.SendUncheckedConsoleCommand(System.String)
      language: CSharp
      name:
        CSharp: SendUncheckedConsoleCommand(String)
        VB: SendUncheckedConsoleCommand(String)
      nameWithType:
        CSharp: BedrockServer.SendUncheckedConsoleCommand(String)
        VB: BedrockServer.SendUncheckedConsoleCommand(String)
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.SendUncheckedConsoleCommand(System.String)
        VB: IMS_Library.BedrockServer.SendUncheckedConsoleCommand(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: SendUncheckedConsoleCommand
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 668
      syntax:
        content:
          CSharp: protected void SendUncheckedConsoleCommand(string command)
          VB: Protected Sub SendUncheckedConsoleCommand(command As String)
        parameters:
        - id: command
          type: System.String
      overload: IMS_Library.BedrockServer.SendUncheckedConsoleCommand*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
  - id: IMS_Library.BedrockServer.BackupState
    commentId: T:IMS_Library.BedrockServer.BackupState
    language: CSharp
    name:
      CSharp: BedrockServer.BackupState
      VB: BedrockServer.BackupState
    nameWithType:
      CSharp: BedrockServer.BackupState
      VB: BedrockServer.BackupState
    qualifiedName:
      CSharp: IMS_Library.BedrockServer.BackupState
      VB: IMS_Library.BedrockServer.BackupState
    type: Enum
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: BackupState
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
      startLine: 676
    syntax:
      content:
        CSharp: protected enum BackupState
        VB: Protected Enum BackupState
    modifiers:
      CSharp:
      - protected
      - enum
      VB:
      - Protected
      - Enum
    items:
    - id: IMS_Library.BedrockServer.BackupState.None
      commentId: F:IMS_Library.BedrockServer.BackupState.None
      language: CSharp
      name:
        CSharp: None
        VB: None
      nameWithType:
        CSharp: BedrockServer.BackupState.None
        VB: BedrockServer.BackupState.None
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.BackupState.None
        VB: IMS_Library.BedrockServer.BackupState.None
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: None
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 676
      syntax:
        content:
          CSharp: None = 0
          VB: None = 0
        return:
          type: IMS_Library.BedrockServer.BackupState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: IMS_Library.BedrockServer.BackupState.Saving
      commentId: F:IMS_Library.BedrockServer.BackupState.Saving
      language: CSharp
      name:
        CSharp: Saving
        VB: Saving
      nameWithType:
        CSharp: BedrockServer.BackupState.Saving
        VB: BedrockServer.BackupState.Saving
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.BackupState.Saving
        VB: IMS_Library.BedrockServer.BackupState.Saving
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Saving
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 676
      syntax:
        content:
          CSharp: Saving = 1
          VB: Saving = 1
        return:
          type: IMS_Library.BedrockServer.BackupState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: IMS_Library.BedrockServer.BackupState.Copying
      commentId: F:IMS_Library.BedrockServer.BackupState.Copying
      language: CSharp
      name:
        CSharp: Copying
        VB: Copying
      nameWithType:
        CSharp: BedrockServer.BackupState.Copying
        VB: BedrockServer.BackupState.Copying
      qualifiedName:
        CSharp: IMS_Library.BedrockServer.BackupState.Copying
        VB: IMS_Library.BedrockServer.BackupState.Copying
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Copying
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServer.cs
        startLine: 676
      syntax:
        content:
          CSharp: Copying = 2
          VB: Copying = 2
        return:
          type: IMS_Library.BedrockServer.BackupState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: IMS_Library.BedrockServerConfiguration
    commentId: T:IMS_Library.BedrockServerConfiguration
    language: CSharp
    name:
      CSharp: BedrockServerConfiguration
      VB: BedrockServerConfiguration
    nameWithType:
      CSharp: BedrockServerConfiguration
      VB: BedrockServerConfiguration
    qualifiedName:
      CSharp: IMS_Library.BedrockServerConfiguration
      VB: IMS_Library.BedrockServerConfiguration
    type: Class
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: BedrockServerConfiguration
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServerConfiguration.cs
      startLine: 7
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class BedrockServerConfiguration : ServerConfiguration, ICloneable
        VB: >-
          <Serializable>

          Public Class BedrockServerConfiguration

              Inherits ServerConfiguration

              Implements ICloneable
    inheritance:
    - System.Object
    - IMS_Library.IMSConfiguration
    - IMS_Library.ServerConfiguration
    implements:
    - System.ICloneable
    inheritedMembers:
    - IMS_Library.ServerConfiguration.ID
    - IMS_Library.ServerConfiguration.ServerName
    - IMS_Library.ServerConfiguration.Edition
    - IMS_Library.ServerConfiguration.IsEnabled
    - IMS_Library.ServerConfiguration.WorldID
    - IMS_Library.ServerConfiguration.GetServerFolderLocation
    - IMS_Library.ServerConfiguration.GetDefaultFilePath
    - IMS_Library.IMSConfiguration.Clone
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    extensionMethods:
    - IMS_Library.BedrockServerConfiguration.IMS_Library.IMSConfigurationUtility.FromConfiguration``1
    - IMS_Library.BedrockServerConfiguration.IMS_Library.IMSConfigurationUtility.SaveConfiguration``1
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: IMS_Library.BedrockServerConfiguration.Gamemode
      commentId: F:IMS_Library.BedrockServerConfiguration.Gamemode
      language: CSharp
      name:
        CSharp: Gamemode
        VB: Gamemode
      nameWithType:
        CSharp: BedrockServerConfiguration.Gamemode
        VB: BedrockServerConfiguration.Gamemode
      qualifiedName:
        CSharp: IMS_Library.BedrockServerConfiguration.Gamemode
        VB: IMS_Library.BedrockServerConfiguration.Gamemode
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Gamemode
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServerConfiguration.cs
        startLine: 11
      syntax:
        content:
          CSharp: >-
            [ServerProperty("gamemode")]

            public int Gamemode
          VB: >-
            <ServerProperty("gamemode")>

            Public Gamemode As Integer
        return:
          type: System.Int32
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: gamemode
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.BedrockServerConfiguration.Difficulty
      commentId: F:IMS_Library.BedrockServerConfiguration.Difficulty
      language: CSharp
      name:
        CSharp: Difficulty
        VB: Difficulty
      nameWithType:
        CSharp: BedrockServerConfiguration.Difficulty
        VB: BedrockServerConfiguration.Difficulty
      qualifiedName:
        CSharp: IMS_Library.BedrockServerConfiguration.Difficulty
        VB: IMS_Library.BedrockServerConfiguration.Difficulty
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Difficulty
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServerConfiguration.cs
        startLine: 13
      syntax:
        content:
          CSharp: >-
            [ServerProperty("difficulty")]

            public int Difficulty
          VB: >-
            <ServerProperty("difficulty")>

            Public Difficulty As Integer
        return:
          type: System.Int32
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: difficulty
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.BedrockServerConfiguration.LevelType
      commentId: F:IMS_Library.BedrockServerConfiguration.LevelType
      language: CSharp
      name:
        CSharp: LevelType
        VB: LevelType
      nameWithType:
        CSharp: BedrockServerConfiguration.LevelType
        VB: BedrockServerConfiguration.LevelType
      qualifiedName:
        CSharp: IMS_Library.BedrockServerConfiguration.LevelType
        VB: IMS_Library.BedrockServerConfiguration.LevelType
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: LevelType
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServerConfiguration.cs
        startLine: 15
      syntax:
        content:
          CSharp: >-
            [ServerProperty("level-type")]

            public string LevelType
          VB: >-
            <ServerProperty("level-type")>

            Public LevelType As String
        return:
          type: System.String
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: level-type
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.BedrockServerConfiguration.ServerDisplayName
      commentId: F:IMS_Library.BedrockServerConfiguration.ServerDisplayName
      language: CSharp
      name:
        CSharp: ServerDisplayName
        VB: ServerDisplayName
      nameWithType:
        CSharp: BedrockServerConfiguration.ServerDisplayName
        VB: BedrockServerConfiguration.ServerDisplayName
      qualifiedName:
        CSharp: IMS_Library.BedrockServerConfiguration.ServerDisplayName
        VB: IMS_Library.BedrockServerConfiguration.ServerDisplayName
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ServerDisplayName
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServerConfiguration.cs
        startLine: 17
      syntax:
        content:
          CSharp: >-
            [ServerProperty("server-name")]

            public string ServerDisplayName
          VB: >-
            <ServerProperty("server-name")>

            Public ServerDisplayName As String
        return:
          type: System.String
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: server-name
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.BedrockServerConfiguration.MaxPlayers
      commentId: F:IMS_Library.BedrockServerConfiguration.MaxPlayers
      language: CSharp
      name:
        CSharp: MaxPlayers
        VB: MaxPlayers
      nameWithType:
        CSharp: BedrockServerConfiguration.MaxPlayers
        VB: BedrockServerConfiguration.MaxPlayers
      qualifiedName:
        CSharp: IMS_Library.BedrockServerConfiguration.MaxPlayers
        VB: IMS_Library.BedrockServerConfiguration.MaxPlayers
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: MaxPlayers
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServerConfiguration.cs
        startLine: 19
      syntax:
        content:
          CSharp: >-
            [ServerProperty("max-players")]

            public int MaxPlayers
          VB: >-
            <ServerProperty("max-players")>

            Public MaxPlayers As Integer
        return:
          type: System.Int32
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: max-players
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.BedrockServerConfiguration.ServerPort
      commentId: F:IMS_Library.BedrockServerConfiguration.ServerPort
      language: CSharp
      name:
        CSharp: ServerPort
        VB: ServerPort
      nameWithType:
        CSharp: BedrockServerConfiguration.ServerPort
        VB: BedrockServerConfiguration.ServerPort
      qualifiedName:
        CSharp: IMS_Library.BedrockServerConfiguration.ServerPort
        VB: IMS_Library.BedrockServerConfiguration.ServerPort
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ServerPort
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServerConfiguration.cs
        startLine: 21
      syntax:
        content:
          CSharp: >-
            [ServerProperty("server-port")]

            public WebPort ServerPort
          VB: >-
            <ServerProperty("server-port")>

            Public ServerPort As WebPort
        return:
          type: IMS_Library.WebPort
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: server-port
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.BedrockServerConfiguration.ServerPortV6
      commentId: F:IMS_Library.BedrockServerConfiguration.ServerPortV6
      language: CSharp
      name:
        CSharp: ServerPortV6
        VB: ServerPortV6
      nameWithType:
        CSharp: BedrockServerConfiguration.ServerPortV6
        VB: BedrockServerConfiguration.ServerPortV6
      qualifiedName:
        CSharp: IMS_Library.BedrockServerConfiguration.ServerPortV6
        VB: IMS_Library.BedrockServerConfiguration.ServerPortV6
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ServerPortV6
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServerConfiguration.cs
        startLine: 23
      syntax:
        content:
          CSharp: >-
            [ServerProperty("server-portv6")]

            public WebPort ServerPortV6
          VB: >-
            <ServerProperty("server-portv6")>

            Public ServerPortV6 As WebPort
        return:
          type: IMS_Library.WebPort
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: server-portv6
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.BedrockServerConfiguration.LevelName
      commentId: F:IMS_Library.BedrockServerConfiguration.LevelName
      language: CSharp
      name:
        CSharp: LevelName
        VB: LevelName
      nameWithType:
        CSharp: BedrockServerConfiguration.LevelName
        VB: BedrockServerConfiguration.LevelName
      qualifiedName:
        CSharp: IMS_Library.BedrockServerConfiguration.LevelName
        VB: IMS_Library.BedrockServerConfiguration.LevelName
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: LevelName
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServerConfiguration.cs
        startLine: 25
      syntax:
        content:
          CSharp: >-
            [ServerProperty("level-name")]

            public string LevelName
          VB: >-
            <ServerProperty("level-name")>

            Public LevelName As String
        return:
          type: System.String
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: level-name
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.BedrockServerConfiguration.LevelSeed
      commentId: F:IMS_Library.BedrockServerConfiguration.LevelSeed
      language: CSharp
      name:
        CSharp: LevelSeed
        VB: LevelSeed
      nameWithType:
        CSharp: BedrockServerConfiguration.LevelSeed
        VB: BedrockServerConfiguration.LevelSeed
      qualifiedName:
        CSharp: IMS_Library.BedrockServerConfiguration.LevelSeed
        VB: IMS_Library.BedrockServerConfiguration.LevelSeed
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: LevelSeed
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServerConfiguration.cs
        startLine: 27
      syntax:
        content:
          CSharp: >-
            [ServerProperty("level-seed")]

            public string LevelSeed
          VB: >-
            <ServerProperty("level-seed")>

            Public LevelSeed As String
        return:
          type: System.String
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: level-seed
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.BedrockServerConfiguration.OnlineMode
      commentId: F:IMS_Library.BedrockServerConfiguration.OnlineMode
      language: CSharp
      name:
        CSharp: OnlineMode
        VB: OnlineMode
      nameWithType:
        CSharp: BedrockServerConfiguration.OnlineMode
        VB: BedrockServerConfiguration.OnlineMode
      qualifiedName:
        CSharp: IMS_Library.BedrockServerConfiguration.OnlineMode
        VB: IMS_Library.BedrockServerConfiguration.OnlineMode
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: OnlineMode
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServerConfiguration.cs
        startLine: 29
      syntax:
        content:
          CSharp: >-
            [ServerProperty("online-mode")]

            public bool OnlineMode
          VB: >-
            <ServerProperty("online-mode")>

            Public OnlineMode As Boolean
        return:
          type: System.Boolean
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: online-mode
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.BedrockServerConfiguration.Whitelist
      commentId: F:IMS_Library.BedrockServerConfiguration.Whitelist
      language: CSharp
      name:
        CSharp: Whitelist
        VB: Whitelist
      nameWithType:
        CSharp: BedrockServerConfiguration.Whitelist
        VB: BedrockServerConfiguration.Whitelist
      qualifiedName:
        CSharp: IMS_Library.BedrockServerConfiguration.Whitelist
        VB: IMS_Library.BedrockServerConfiguration.Whitelist
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Whitelist
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServerConfiguration.cs
        startLine: 31
      syntax:
        content:
          CSharp: >-
            [ServerProperty("white-list")]

            public bool Whitelist
          VB: >-
            <ServerProperty("white-list")>

            Public Whitelist As Boolean
        return:
          type: System.Boolean
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: white-list
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.BedrockServerConfiguration.AllowCheats
      commentId: F:IMS_Library.BedrockServerConfiguration.AllowCheats
      language: CSharp
      name:
        CSharp: AllowCheats
        VB: AllowCheats
      nameWithType:
        CSharp: BedrockServerConfiguration.AllowCheats
        VB: BedrockServerConfiguration.AllowCheats
      qualifiedName:
        CSharp: IMS_Library.BedrockServerConfiguration.AllowCheats
        VB: IMS_Library.BedrockServerConfiguration.AllowCheats
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: AllowCheats
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServerConfiguration.cs
        startLine: 33
      syntax:
        content:
          CSharp: >-
            [ServerProperty("allow-cheats")]

            public bool AllowCheats
          VB: >-
            <ServerProperty("allow-cheats")>

            Public AllowCheats As Boolean
        return:
          type: System.Boolean
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: allow-cheats
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.BedrockServerConfiguration.ViewDistance
      commentId: F:IMS_Library.BedrockServerConfiguration.ViewDistance
      language: CSharp
      name:
        CSharp: ViewDistance
        VB: ViewDistance
      nameWithType:
        CSharp: BedrockServerConfiguration.ViewDistance
        VB: BedrockServerConfiguration.ViewDistance
      qualifiedName:
        CSharp: IMS_Library.BedrockServerConfiguration.ViewDistance
        VB: IMS_Library.BedrockServerConfiguration.ViewDistance
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ViewDistance
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServerConfiguration.cs
        startLine: 35
      syntax:
        content:
          CSharp: >-
            [ServerProperty("view-distance")]

            public int ViewDistance
          VB: >-
            <ServerProperty("view-distance")>

            Public ViewDistance As Integer
        return:
          type: System.Int32
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: view-distance
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.BedrockServerConfiguration.PlayerIdleTimeout
      commentId: F:IMS_Library.BedrockServerConfiguration.PlayerIdleTimeout
      language: CSharp
      name:
        CSharp: PlayerIdleTimeout
        VB: PlayerIdleTimeout
      nameWithType:
        CSharp: BedrockServerConfiguration.PlayerIdleTimeout
        VB: BedrockServerConfiguration.PlayerIdleTimeout
      qualifiedName:
        CSharp: IMS_Library.BedrockServerConfiguration.PlayerIdleTimeout
        VB: IMS_Library.BedrockServerConfiguration.PlayerIdleTimeout
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: PlayerIdleTimeout
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServerConfiguration.cs
        startLine: 37
      syntax:
        content:
          CSharp: >-
            [ServerProperty("player-idle-timeout")]

            public int PlayerIdleTimeout
          VB: >-
            <ServerProperty("player-idle-timeout")>

            Public PlayerIdleTimeout As Integer
        return:
          type: System.Int32
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: player-idle-timeout
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.BedrockServerConfiguration.MaximumThreads
      commentId: F:IMS_Library.BedrockServerConfiguration.MaximumThreads
      language: CSharp
      name:
        CSharp: MaximumThreads
        VB: MaximumThreads
      nameWithType:
        CSharp: BedrockServerConfiguration.MaximumThreads
        VB: BedrockServerConfiguration.MaximumThreads
      qualifiedName:
        CSharp: IMS_Library.BedrockServerConfiguration.MaximumThreads
        VB: IMS_Library.BedrockServerConfiguration.MaximumThreads
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: MaximumThreads
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServerConfiguration.cs
        startLine: 39
      syntax:
        content:
          CSharp: >-
            [ServerProperty("max-threads")]

            public int MaximumThreads
          VB: >-
            <ServerProperty("max-threads")>

            Public MaximumThreads As Integer
        return:
          type: System.Int32
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: max-threads
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.BedrockServerConfiguration.TickDistance
      commentId: F:IMS_Library.BedrockServerConfiguration.TickDistance
      language: CSharp
      name:
        CSharp: TickDistance
        VB: TickDistance
      nameWithType:
        CSharp: BedrockServerConfiguration.TickDistance
        VB: BedrockServerConfiguration.TickDistance
      qualifiedName:
        CSharp: IMS_Library.BedrockServerConfiguration.TickDistance
        VB: IMS_Library.BedrockServerConfiguration.TickDistance
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: TickDistance
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServerConfiguration.cs
        startLine: 41
      syntax:
        content:
          CSharp: >-
            [ServerProperty("tick-distance")]

            public int TickDistance
          VB: >-
            <ServerProperty("tick-distance")>

            Public TickDistance As Integer
        return:
          type: System.Int32
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: tick-distance
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.BedrockServerConfiguration.DefaultPlayerPermissionLevel
      commentId: F:IMS_Library.BedrockServerConfiguration.DefaultPlayerPermissionLevel
      language: CSharp
      name:
        CSharp: DefaultPlayerPermissionLevel
        VB: DefaultPlayerPermissionLevel
      nameWithType:
        CSharp: BedrockServerConfiguration.DefaultPlayerPermissionLevel
        VB: BedrockServerConfiguration.DefaultPlayerPermissionLevel
      qualifiedName:
        CSharp: IMS_Library.BedrockServerConfiguration.DefaultPlayerPermissionLevel
        VB: IMS_Library.BedrockServerConfiguration.DefaultPlayerPermissionLevel
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: DefaultPlayerPermissionLevel
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServerConfiguration.cs
        startLine: 43
      syntax:
        content:
          CSharp: >-
            [ServerProperty("default-player-permission-level")]

            public string DefaultPlayerPermissionLevel
          VB: >-
            <ServerProperty("default-player-permission-level")>

            Public DefaultPlayerPermissionLevel As String
        return:
          type: System.String
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: default-player-permission-level
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.BedrockServerConfiguration.TexturePackRequired
      commentId: F:IMS_Library.BedrockServerConfiguration.TexturePackRequired
      language: CSharp
      name:
        CSharp: TexturePackRequired
        VB: TexturePackRequired
      nameWithType:
        CSharp: BedrockServerConfiguration.TexturePackRequired
        VB: BedrockServerConfiguration.TexturePackRequired
      qualifiedName:
        CSharp: IMS_Library.BedrockServerConfiguration.TexturePackRequired
        VB: IMS_Library.BedrockServerConfiguration.TexturePackRequired
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: TexturePackRequired
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServerConfiguration.cs
        startLine: 45
      syntax:
        content:
          CSharp: >-
            [ServerProperty("texturepack-required")]

            public bool TexturePackRequired
          VB: >-
            <ServerProperty("texturepack-required")>

            Public TexturePackRequired As Boolean
        return:
          type: System.Boolean
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: texturepack-required
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.BedrockServerConfiguration.#ctor
      commentId: M:IMS_Library.BedrockServerConfiguration.#ctor
      language: CSharp
      name:
        CSharp: BedrockServerConfiguration()
        VB: BedrockServerConfiguration()
      nameWithType:
        CSharp: BedrockServerConfiguration.BedrockServerConfiguration()
        VB: BedrockServerConfiguration.BedrockServerConfiguration()
      qualifiedName:
        CSharp: IMS_Library.BedrockServerConfiguration.BedrockServerConfiguration()
        VB: IMS_Library.BedrockServerConfiguration.BedrockServerConfiguration()
      type: Constructor
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: .ctor
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServerConfiguration.cs
        startLine: 47
      syntax:
        content:
          CSharp: public BedrockServerConfiguration()
          VB: Public Sub New
      overload: IMS_Library.BedrockServerConfiguration.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.BedrockServerConfiguration.#ctor(System.Guid)
      commentId: M:IMS_Library.BedrockServerConfiguration.#ctor(System.Guid)
      language: CSharp
      name:
        CSharp: BedrockServerConfiguration(Guid)
        VB: BedrockServerConfiguration(Guid)
      nameWithType:
        CSharp: BedrockServerConfiguration.BedrockServerConfiguration(Guid)
        VB: BedrockServerConfiguration.BedrockServerConfiguration(Guid)
      qualifiedName:
        CSharp: IMS_Library.BedrockServerConfiguration.BedrockServerConfiguration(System.Guid)
        VB: IMS_Library.BedrockServerConfiguration.BedrockServerConfiguration(System.Guid)
      type: Constructor
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: .ctor
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServerConfiguration.cs
        startLine: 50
      syntax:
        content:
          CSharp: public BedrockServerConfiguration(Guid id)
          VB: Public Sub New(id As Guid)
        parameters:
        - id: id
          type: System.Guid
      overload: IMS_Library.BedrockServerConfiguration.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.BedrockServerConfiguration.GetUsedPorts
      commentId: M:IMS_Library.BedrockServerConfiguration.GetUsedPorts
      language: CSharp
      name:
        CSharp: GetUsedPorts()
        VB: GetUsedPorts()
      nameWithType:
        CSharp: BedrockServerConfiguration.GetUsedPorts()
        VB: BedrockServerConfiguration.GetUsedPorts()
      qualifiedName:
        CSharp: IMS_Library.BedrockServerConfiguration.GetUsedPorts()
        VB: IMS_Library.BedrockServerConfiguration.GetUsedPorts()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetUsedPorts
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServerConfiguration.cs
        startLine: 55
      syntax:
        content:
          CSharp: public override int[] GetUsedPorts()
          VB: Public Overrides Function GetUsedPorts As Integer()
        return:
          type: System.Int32[]
      overload: IMS_Library.BedrockServerConfiguration.GetUsedPorts*
      overridden: IMS_Library.ServerConfiguration.GetUsedPorts
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.BedrockServerConfiguration.GetPortsToForward
      commentId: M:IMS_Library.BedrockServerConfiguration.GetPortsToForward
      language: CSharp
      name:
        CSharp: GetPortsToForward()
        VB: GetPortsToForward()
      nameWithType:
        CSharp: BedrockServerConfiguration.GetPortsToForward()
        VB: BedrockServerConfiguration.GetPortsToForward()
      qualifiedName:
        CSharp: IMS_Library.BedrockServerConfiguration.GetPortsToForward()
        VB: IMS_Library.BedrockServerConfiguration.GetPortsToForward()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetPortsToForward
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServerConfiguration.cs
        startLine: 63
      syntax:
        content:
          CSharp: public override int[] GetPortsToForward()
          VB: Public Overrides Function GetPortsToForward As Integer()
        return:
          type: System.Int32[]
      overload: IMS_Library.BedrockServerConfiguration.GetPortsToForward*
      overridden: IMS_Library.ServerConfiguration.GetPortsToForward
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.BedrockServerConfiguration.CreateServer
      commentId: M:IMS_Library.BedrockServerConfiguration.CreateServer
      language: CSharp
      name:
        CSharp: CreateServer()
        VB: CreateServer()
      nameWithType:
        CSharp: BedrockServerConfiguration.CreateServer()
        VB: BedrockServerConfiguration.CreateServer()
      qualifiedName:
        CSharp: IMS_Library.BedrockServerConfiguration.CreateServer()
        VB: IMS_Library.BedrockServerConfiguration.CreateServer()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: CreateServer
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\BedrockServerConfiguration.cs
        startLine: 77
      syntax:
        content:
          CSharp: public override ServerProxy CreateServer()
          VB: Public Overrides Function CreateServer As ServerProxy
        return:
          type: IMS_Library.ServerProxy
      overload: IMS_Library.BedrockServerConfiguration.CreateServer*
      overridden: IMS_Library.ServerConfiguration.CreateServer
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: IMS_Library.MOTDServerProperty
    commentId: T:IMS_Library.MOTDServerProperty
    language: CSharp
    name:
      CSharp: MOTDServerProperty
      VB: MOTDServerProperty
    nameWithType:
      CSharp: MOTDServerProperty
      VB: MOTDServerProperty
    qualifiedName:
      CSharp: IMS_Library.MOTDServerProperty
      VB: IMS_Library.MOTDServerProperty
    type: Class
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: MOTDServerProperty
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\HTMLToMOTD\MOTDServerProperty.cs
      startLine: 13
    summary: "\nRepresents a property that is formatted in HTML which should be converted to Minecraft formatting codes upon being written to a <code>server.properties</code> file.\n"
    example: []
    syntax:
      content:
        CSharp: >-
          [AttributeUsage(AttributeTargets.Field, AllowMultiple = false, Inherited = true)]

          public sealed class MOTDServerProperty : ServerProperty
        VB: >-
          <AttributeUsage(AttributeTargets.Field, AllowMultiple:=False, Inherited:=True)>

          Public NotInheritable Class MOTDServerProperty

              Inherits ServerProperty
    inheritance:
    - System.Object
    - System.Attribute
    - IMS_Library.ServerProperty
    inheritedMembers:
    - IMS_Library.ServerProperty.PropertyName
    - System.Attribute.Equals(System.Object)
    - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    - System.Attribute.GetHashCode
    - System.Attribute.IsDefaultAttribute
    - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
    - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
    - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
    - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
    - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    - System.Attribute.Match(System.Object)
    - System.Attribute.TypeId
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    attributes:
    - type: System.AttributeUsageAttribute
      ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
      arguments:
      - type: System.AttributeTargets
        value: 256
      namedArguments:
      - name: AllowMultiple
        type: System.Boolean
        value: false
      - name: Inherited
        type: System.Boolean
        value: true
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: IMS_Library.MOTDServerProperty.#ctor(System.String)
      commentId: M:IMS_Library.MOTDServerProperty.#ctor(System.String)
      language: CSharp
      name:
        CSharp: MOTDServerProperty(String)
        VB: MOTDServerProperty(String)
      nameWithType:
        CSharp: MOTDServerProperty.MOTDServerProperty(String)
        VB: MOTDServerProperty.MOTDServerProperty(String)
      qualifiedName:
        CSharp: IMS_Library.MOTDServerProperty.MOTDServerProperty(System.String)
        VB: IMS_Library.MOTDServerProperty.MOTDServerProperty(System.String)
      type: Constructor
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: .ctor
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\HTMLToMOTD\MOTDServerProperty.cs
        startLine: 35
      summary: "\nConstructs a new <xref href=\"IMS_Library.MOTDServerProperty\" data-throw-if-not-resolved=\"false\"></xref> instance bound to the specified <code>server.properties</code> name.\n"
      example: []
      syntax:
        content:
          CSharp: public MOTDServerProperty(string propertyName)
          VB: Public Sub New(propertyName As String)
        parameters:
        - id: propertyName
          type: System.String
          description: The name of the property to write to the server properties file.
      overload: IMS_Library.MOTDServerProperty.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        IMS_Library.MOTDServerProperty: 
    - id: IMS_Library.MOTDServerProperty.GetData(IMS_Library.ServerConfiguration,System.Reflection.FieldInfo)
      commentId: M:IMS_Library.MOTDServerProperty.GetData(IMS_Library.ServerConfiguration,System.Reflection.FieldInfo)
      language: CSharp
      name:
        CSharp: GetData(ServerConfiguration, FieldInfo)
        VB: GetData(ServerConfiguration, FieldInfo)
      nameWithType:
        CSharp: MOTDServerProperty.GetData(ServerConfiguration, FieldInfo)
        VB: MOTDServerProperty.GetData(ServerConfiguration, FieldInfo)
      qualifiedName:
        CSharp: IMS_Library.MOTDServerProperty.GetData(IMS_Library.ServerConfiguration, System.Reflection.FieldInfo)
        VB: IMS_Library.MOTDServerProperty.GetData(IMS_Library.ServerConfiguration, System.Reflection.FieldInfo)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetData
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\HTMLToMOTD\MOTDServerProperty.cs
        startLine: 45
      summary: "\nObtains the line of text which should be written to the server properties file.\n"
      example: []
      syntax:
        content:
          CSharp: public override string GetData(ServerConfiguration configuration, FieldInfo field)
          VB: Public Overrides Function GetData(configuration As ServerConfiguration, field As FieldInfo) As String
        parameters:
        - id: configuration
          type: IMS_Library.ServerConfiguration
          description: The current server configuration which holds the data to be written.
        - id: field
          type: System.Reflection.FieldInfo
          description: The field that this attribute is bound to.
        return:
          type: System.String
          description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> which should be written to the server properties file.
      overload: IMS_Library.MOTDServerProperty.GetData*
      overridden: IMS_Library.ServerProperty.GetData(IMS_Library.ServerConfiguration,System.Reflection.FieldInfo)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
      references:
        System.String: 
  - id: IMS_Library.JavaServer
    commentId: T:IMS_Library.JavaServer
    language: CSharp
    name:
      CSharp: JavaServer
      VB: JavaServer
    nameWithType:
      CSharp: JavaServer
      VB: JavaServer
    qualifiedName:
      CSharp: IMS_Library.JavaServer
      VB: IMS_Library.JavaServer
    type: Class
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: JavaServer
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
      startLine: 17
    syntax:
      content:
        CSharp: 'public class JavaServer : ServerProxy'
        VB: >-
          Public Class JavaServer

              Inherits ServerProxy
    inheritance:
    - System.Object
    - IMS_Library.ServerProxy
    inheritedMembers:
    - IMS_Library.ServerProxy.ID
    - IMS_Library.ServerProxy.State
    - IMS_Library.ServerProxy.GetDefaultServerConfiguration
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: IMS_Library.JavaServer.ServerPreferences
      commentId: F:IMS_Library.JavaServer.ServerPreferences
      language: CSharp
      name:
        CSharp: ServerPreferences
        VB: ServerPreferences
      nameWithType:
        CSharp: JavaServer.ServerPreferences
        VB: JavaServer.ServerPreferences
      qualifiedName:
        CSharp: IMS_Library.JavaServer.ServerPreferences
        VB: IMS_Library.JavaServer.ServerPreferences
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ServerPreferences
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 19
      syntax:
        content:
          CSharp: public JavaServerConfiguration ServerPreferences
          VB: Public ServerPreferences As JavaServerConfiguration
        return:
          type: IMS_Library.JavaServerConfiguration
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServer.CurrentConfiguration
      commentId: P:IMS_Library.JavaServer.CurrentConfiguration
      language: CSharp
      name:
        CSharp: CurrentConfiguration
        VB: CurrentConfiguration
      nameWithType:
        CSharp: JavaServer.CurrentConfiguration
        VB: JavaServer.CurrentConfiguration
      qualifiedName:
        CSharp: IMS_Library.JavaServer.CurrentConfiguration
        VB: IMS_Library.JavaServer.CurrentConfiguration
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: CurrentConfiguration
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 20
      syntax:
        content:
          CSharp: public override ServerConfiguration CurrentConfiguration { get; set; }
          VB: Public Overrides Property CurrentConfiguration As ServerConfiguration
        parameters: []
        return:
          type: IMS_Library.ServerConfiguration
      overload: IMS_Library.JavaServer.CurrentConfiguration*
      overridden: IMS_Library.ServerProxy.CurrentConfiguration
      modifiers:
        CSharp:
        - public
        - override
        - get
        - set
        VB:
        - Public
        - Overrides
    - id: IMS_Library.JavaServer.SupportsWhitelist
      commentId: P:IMS_Library.JavaServer.SupportsWhitelist
      language: CSharp
      name:
        CSharp: SupportsWhitelist
        VB: SupportsWhitelist
      nameWithType:
        CSharp: JavaServer.SupportsWhitelist
        VB: JavaServer.SupportsWhitelist
      qualifiedName:
        CSharp: IMS_Library.JavaServer.SupportsWhitelist
        VB: IMS_Library.JavaServer.SupportsWhitelist
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: SupportsWhitelist
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 33
      syntax:
        content:
          CSharp: public override bool SupportsWhitelist { get; }
          VB: Public Overrides ReadOnly Property SupportsWhitelist As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: IMS_Library.JavaServer.SupportsWhitelist*
      overridden: IMS_Library.ServerProxy.SupportsWhitelist
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: IMS_Library.JavaServer.WhitelistEnabled
      commentId: P:IMS_Library.JavaServer.WhitelistEnabled
      language: CSharp
      name:
        CSharp: WhitelistEnabled
        VB: WhitelistEnabled
      nameWithType:
        CSharp: JavaServer.WhitelistEnabled
        VB: JavaServer.WhitelistEnabled
      qualifiedName:
        CSharp: IMS_Library.JavaServer.WhitelistEnabled
        VB: IMS_Library.JavaServer.WhitelistEnabled
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: WhitelistEnabled
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 35
      syntax:
        content:
          CSharp: public override bool WhitelistEnabled { get; set; }
          VB: Public Overrides Property WhitelistEnabled As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: IMS_Library.JavaServer.WhitelistEnabled*
      overridden: IMS_Library.ServerProxy.WhitelistEnabled
      modifiers:
        CSharp:
        - public
        - override
        - get
        - set
        VB:
        - Public
        - Overrides
    - id: IMS_Library.JavaServer.SupportsBanning
      commentId: P:IMS_Library.JavaServer.SupportsBanning
      language: CSharp
      name:
        CSharp: SupportsBanning
        VB: SupportsBanning
      nameWithType:
        CSharp: JavaServer.SupportsBanning
        VB: JavaServer.SupportsBanning
      qualifiedName:
        CSharp: IMS_Library.JavaServer.SupportsBanning
        VB: IMS_Library.JavaServer.SupportsBanning
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: SupportsBanning
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 37
      syntax:
        content:
          CSharp: public override bool SupportsBanning { get; }
          VB: Public Overrides ReadOnly Property SupportsBanning As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: IMS_Library.JavaServer.SupportsBanning*
      overridden: IMS_Library.ServerProxy.SupportsBanning
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: IMS_Library.JavaServer.SupportsBanningIPs
      commentId: P:IMS_Library.JavaServer.SupportsBanningIPs
      language: CSharp
      name:
        CSharp: SupportsBanningIPs
        VB: SupportsBanningIPs
      nameWithType:
        CSharp: JavaServer.SupportsBanningIPs
        VB: JavaServer.SupportsBanningIPs
      qualifiedName:
        CSharp: IMS_Library.JavaServer.SupportsBanningIPs
        VB: IMS_Library.JavaServer.SupportsBanningIPs
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: SupportsBanningIPs
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 39
      syntax:
        content:
          CSharp: public override bool SupportsBanningIPs { get; }
          VB: Public Overrides ReadOnly Property SupportsBanningIPs As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: IMS_Library.JavaServer.SupportsBanningIPs*
      overridden: IMS_Library.ServerProxy.SupportsBanningIPs
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: IMS_Library.JavaServer.SupportsOps
      commentId: P:IMS_Library.JavaServer.SupportsOps
      language: CSharp
      name:
        CSharp: SupportsOps
        VB: SupportsOps
      nameWithType:
        CSharp: JavaServer.SupportsOps
        VB: JavaServer.SupportsOps
      qualifiedName:
        CSharp: IMS_Library.JavaServer.SupportsOps
        VB: IMS_Library.JavaServer.SupportsOps
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: SupportsOps
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 41
      syntax:
        content:
          CSharp: public override bool SupportsOps { get; }
          VB: Public Overrides ReadOnly Property SupportsOps As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: IMS_Library.JavaServer.SupportsOps*
      overridden: IMS_Library.ServerProxy.SupportsOps
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: IMS_Library.JavaServer.SupportsIPs
      commentId: P:IMS_Library.JavaServer.SupportsIPs
      language: CSharp
      name:
        CSharp: SupportsIPs
        VB: SupportsIPs
      nameWithType:
        CSharp: JavaServer.SupportsIPs
        VB: JavaServer.SupportsIPs
      qualifiedName:
        CSharp: IMS_Library.JavaServer.SupportsIPs
        VB: IMS_Library.JavaServer.SupportsIPs
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: SupportsIPs
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 43
      syntax:
        content:
          CSharp: public override bool SupportsIPs { get; }
          VB: Public Overrides ReadOnly Property SupportsIPs As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: IMS_Library.JavaServer.SupportsIPs*
      overridden: IMS_Library.ServerProxy.SupportsIPs
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: IMS_Library.JavaServer.SupportsKicking
      commentId: P:IMS_Library.JavaServer.SupportsKicking
      language: CSharp
      name:
        CSharp: SupportsKicking
        VB: SupportsKicking
      nameWithType:
        CSharp: JavaServer.SupportsKicking
        VB: JavaServer.SupportsKicking
      qualifiedName:
        CSharp: IMS_Library.JavaServer.SupportsKicking
        VB: IMS_Library.JavaServer.SupportsKicking
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: SupportsKicking
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 45
      syntax:
        content:
          CSharp: public override bool SupportsKicking { get; }
          VB: Public Overrides ReadOnly Property SupportsKicking As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: IMS_Library.JavaServer.SupportsKicking*
      overridden: IMS_Library.ServerProxy.SupportsKicking
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: IMS_Library.JavaServer.SupportedEdition
      commentId: P:IMS_Library.JavaServer.SupportedEdition
      language: CSharp
      name:
        CSharp: SupportedEdition
        VB: SupportedEdition
      nameWithType:
        CSharp: JavaServer.SupportedEdition
        VB: JavaServer.SupportedEdition
      qualifiedName:
        CSharp: IMS_Library.JavaServer.SupportedEdition
        VB: IMS_Library.JavaServer.SupportedEdition
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: SupportedEdition
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 47
      syntax:
        content:
          CSharp: public override MinecraftEdition SupportedEdition { get; }
          VB: Public Overrides ReadOnly Property SupportedEdition As MinecraftEdition
        parameters: []
        return:
          type: IMS_Library.MinecraftEdition
      overload: IMS_Library.JavaServer.SupportedEdition*
      overridden: IMS_Library.ServerProxy.SupportedEdition
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: IMS_Library.JavaServer.OpList
      commentId: F:IMS_Library.JavaServer.OpList
      language: CSharp
      name:
        CSharp: OpList
        VB: OpList
      nameWithType:
        CSharp: JavaServer.OpList
        VB: JavaServer.OpList
      qualifiedName:
        CSharp: IMS_Library.JavaServer.OpList
        VB: IMS_Library.JavaServer.OpList
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: OpList
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 52
      syntax:
        content:
          CSharp: protected List<OpTag> OpList
          VB: Protected OpList As List(Of OpTag)
        return:
          type: System.Collections.Generic.List{IMS_Library.OpTag}
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IMS_Library.JavaServer.BanList
      commentId: F:IMS_Library.JavaServer.BanList
      language: CSharp
      name:
        CSharp: BanList
        VB: BanList
      nameWithType:
        CSharp: JavaServer.BanList
        VB: JavaServer.BanList
      qualifiedName:
        CSharp: IMS_Library.JavaServer.BanList
        VB: IMS_Library.JavaServer.BanList
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: BanList
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 53
      syntax:
        content:
          CSharp: protected List<BanInformation> BanList
          VB: Protected BanList As List(Of BanInformation)
        return:
          type: System.Collections.Generic.List{IMS_Library.BanInformation}
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IMS_Library.JavaServer.BanIPList
      commentId: F:IMS_Library.JavaServer.BanIPList
      language: CSharp
      name:
        CSharp: BanIPList
        VB: BanIPList
      nameWithType:
        CSharp: JavaServer.BanIPList
        VB: JavaServer.BanIPList
      qualifiedName:
        CSharp: IMS_Library.JavaServer.BanIPList
        VB: IMS_Library.JavaServer.BanIPList
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: BanIPList
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 54
      syntax:
        content:
          CSharp: protected Dictionary<string, BanIPTag> BanIPList
          VB: Protected BanIPList As Dictionary(Of String, BanIPTag)
        return:
          type: System.Collections.Generic.Dictionary{System.String,IMS_Library.BanIPTag}
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IMS_Library.JavaServer.Whitelist
      commentId: F:IMS_Library.JavaServer.Whitelist
      language: CSharp
      name:
        CSharp: Whitelist
        VB: Whitelist
      nameWithType:
        CSharp: JavaServer.Whitelist
        VB: JavaServer.Whitelist
      qualifiedName:
        CSharp: IMS_Library.JavaServer.Whitelist
        VB: IMS_Library.JavaServer.Whitelist
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Whitelist
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 56
      syntax:
        content:
          CSharp: protected List<WhitelistTag> Whitelist
          VB: Protected Whitelist As List(Of WhitelistTag)
        return:
          type: System.Collections.Generic.List{IMS_Library.WhitelistTag}
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IMS_Library.JavaServer.OnlineUsers
      commentId: F:IMS_Library.JavaServer.OnlineUsers
      language: CSharp
      name:
        CSharp: OnlineUsers
        VB: OnlineUsers
      nameWithType:
        CSharp: JavaServer.OnlineUsers
        VB: JavaServer.OnlineUsers
      qualifiedName:
        CSharp: IMS_Library.JavaServer.OnlineUsers
        VB: IMS_Library.JavaServer.OnlineUsers
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: OnlineUsers
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 58
      syntax:
        content:
          CSharp: protected Dictionary<string, MinecraftPlayer> OnlineUsers
          VB: Protected OnlineUsers As Dictionary(Of String, MinecraftPlayer)
        return:
          type: System.Collections.Generic.Dictionary{System.String,IMS_Library.MinecraftPlayer}
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IMS_Library.JavaServer.AllUsers
      commentId: F:IMS_Library.JavaServer.AllUsers
      language: CSharp
      name:
        CSharp: AllUsers
        VB: AllUsers
      nameWithType:
        CSharp: JavaServer.AllUsers
        VB: JavaServer.AllUsers
      qualifiedName:
        CSharp: IMS_Library.JavaServer.AllUsers
        VB: IMS_Library.JavaServer.AllUsers
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: AllUsers
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 59
      syntax:
        content:
          CSharp: protected Dictionary<string, MinecraftPlayer> AllUsers
          VB: Protected AllUsers As Dictionary(Of String, MinecraftPlayer)
        return:
          type: System.Collections.Generic.Dictionary{System.String,IMS_Library.MinecraftPlayer}
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IMS_Library.JavaServer.UUIDCache
      commentId: F:IMS_Library.JavaServer.UUIDCache
      language: CSharp
      name:
        CSharp: UUIDCache
        VB: UUIDCache
      nameWithType:
        CSharp: JavaServer.UUIDCache
        VB: JavaServer.UUIDCache
      qualifiedName:
        CSharp: IMS_Library.JavaServer.UUIDCache
        VB: IMS_Library.JavaServer.UUIDCache
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: UUIDCache
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 60
      syntax:
        content:
          CSharp: protected MemoryCache UUIDCache
          VB: Protected UUIDCache As MemoryCache
        return:
          type: System.Runtime.Caching.MemoryCache
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IMS_Library.JavaServer.ConsoleText
      commentId: F:IMS_Library.JavaServer.ConsoleText
      language: CSharp
      name:
        CSharp: ConsoleText
        VB: ConsoleText
      nameWithType:
        CSharp: JavaServer.ConsoleText
        VB: JavaServer.ConsoleText
      qualifiedName:
        CSharp: IMS_Library.JavaServer.ConsoleText
        VB: IMS_Library.JavaServer.ConsoleText
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ConsoleText
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 62
      syntax:
        content:
          CSharp: protected List<string> ConsoleText
          VB: Protected ConsoleText As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IMS_Library.JavaServer.AutomaticSavingPlayerEnabled
      commentId: F:IMS_Library.JavaServer.AutomaticSavingPlayerEnabled
      language: CSharp
      name:
        CSharp: AutomaticSavingPlayerEnabled
        VB: AutomaticSavingPlayerEnabled
      nameWithType:
        CSharp: JavaServer.AutomaticSavingPlayerEnabled
        VB: JavaServer.AutomaticSavingPlayerEnabled
      qualifiedName:
        CSharp: IMS_Library.JavaServer.AutomaticSavingPlayerEnabled
        VB: IMS_Library.JavaServer.AutomaticSavingPlayerEnabled
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: AutomaticSavingPlayerEnabled
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 64
      syntax:
        content:
          CSharp: protected bool AutomaticSavingPlayerEnabled
          VB: Protected AutomaticSavingPlayerEnabled As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IMS_Library.JavaServer.HasCompletedAutomaticSave
      commentId: F:IMS_Library.JavaServer.HasCompletedAutomaticSave
      language: CSharp
      name:
        CSharp: HasCompletedAutomaticSave
        VB: HasCompletedAutomaticSave
      nameWithType:
        CSharp: JavaServer.HasCompletedAutomaticSave
        VB: JavaServer.HasCompletedAutomaticSave
      qualifiedName:
        CSharp: IMS_Library.JavaServer.HasCompletedAutomaticSave
        VB: IMS_Library.JavaServer.HasCompletedAutomaticSave
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: HasCompletedAutomaticSave
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 65
      syntax:
        content:
          CSharp: protected bool HasCompletedAutomaticSave
          VB: Protected HasCompletedAutomaticSave As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IMS_Library.JavaServer.WorldLocation
      commentId: P:IMS_Library.JavaServer.WorldLocation
      language: CSharp
      name:
        CSharp: WorldLocation
        VB: WorldLocation
      nameWithType:
        CSharp: JavaServer.WorldLocation
        VB: JavaServer.WorldLocation
      qualifiedName:
        CSharp: IMS_Library.JavaServer.WorldLocation
        VB: IMS_Library.JavaServer.WorldLocation
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: WorldLocation
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 66
      syntax:
        content:
          CSharp: protected string WorldLocation { get; }
          VB: Protected ReadOnly Property WorldLocation As String
        parameters: []
        return:
          type: System.String
      overload: IMS_Library.JavaServer.WorldLocation*
      modifiers:
        CSharp:
        - protected
        - get
        VB:
        - Protected
        - ReadOnly
    - id: IMS_Library.JavaServer.Locker
      commentId: F:IMS_Library.JavaServer.Locker
      language: CSharp
      name:
        CSharp: Locker
        VB: Locker
      nameWithType:
        CSharp: JavaServer.Locker
        VB: JavaServer.Locker
      qualifiedName:
        CSharp: IMS_Library.JavaServer.Locker
        VB: IMS_Library.JavaServer.Locker
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Locker
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 68
      syntax:
        content:
          CSharp: protected object Locker
          VB: Protected Locker As Object
        return:
          type: System.Object
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IMS_Library.JavaServer.#ctor(System.Guid,IMS_Library.JavaServerConfiguration)
      commentId: M:IMS_Library.JavaServer.#ctor(System.Guid,IMS_Library.JavaServerConfiguration)
      language: CSharp
      name:
        CSharp: JavaServer(Guid, JavaServerConfiguration)
        VB: JavaServer(Guid, JavaServerConfiguration)
      nameWithType:
        CSharp: JavaServer.JavaServer(Guid, JavaServerConfiguration)
        VB: JavaServer.JavaServer(Guid, JavaServerConfiguration)
      qualifiedName:
        CSharp: IMS_Library.JavaServer.JavaServer(System.Guid, IMS_Library.JavaServerConfiguration)
        VB: IMS_Library.JavaServer.JavaServer(System.Guid, IMS_Library.JavaServerConfiguration)
      type: Constructor
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: .ctor
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 70
      syntax:
        content:
          CSharp: public JavaServer(Guid id, JavaServerConfiguration configuration)
          VB: Public Sub New(id As Guid, configuration As JavaServerConfiguration)
        parameters:
        - id: id
          type: System.Guid
        - id: configuration
          type: IMS_Library.JavaServerConfiguration
      overload: IMS_Library.JavaServer.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServer.KickPlayer(System.String,System.String)
      commentId: M:IMS_Library.JavaServer.KickPlayer(System.String,System.String)
      language: CSharp
      name:
        CSharp: KickPlayer(String, String)
        VB: KickPlayer(String, String)
      nameWithType:
        CSharp: JavaServer.KickPlayer(String, String)
        VB: JavaServer.KickPlayer(String, String)
      qualifiedName:
        CSharp: IMS_Library.JavaServer.KickPlayer(System.String, System.String)
        VB: IMS_Library.JavaServer.KickPlayer(System.String, System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: KickPlayer
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 77
      syntax:
        content:
          CSharp: public override void KickPlayer(string name, string reason)
          VB: Public Overrides Sub KickPlayer(name As String, reason As String)
        parameters:
        - id: name
          type: System.String
        - id: reason
          type: System.String
      overload: IMS_Library.JavaServer.KickPlayer*
      overridden: IMS_Library.ServerProxy.KickPlayer(System.String,System.String)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.JavaServer.GetOnlinePlayers
      commentId: M:IMS_Library.JavaServer.GetOnlinePlayers
      language: CSharp
      name:
        CSharp: GetOnlinePlayers()
        VB: GetOnlinePlayers()
      nameWithType:
        CSharp: JavaServer.GetOnlinePlayers()
        VB: JavaServer.GetOnlinePlayers()
      qualifiedName:
        CSharp: IMS_Library.JavaServer.GetOnlinePlayers()
        VB: IMS_Library.JavaServer.GetOnlinePlayers()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetOnlinePlayers
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 89
      syntax:
        content:
          CSharp: public override IEnumerable<MinecraftPlayer> GetOnlinePlayers()
          VB: Public Overrides Function GetOnlinePlayers As IEnumerable(Of MinecraftPlayer)
        return:
          type: System.Collections.Generic.IEnumerable{IMS_Library.MinecraftPlayer}
      overload: IMS_Library.JavaServer.GetOnlinePlayers*
      overridden: IMS_Library.ServerProxy.GetOnlinePlayers
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.JavaServer.GetConsoleText
      commentId: M:IMS_Library.JavaServer.GetConsoleText
      language: CSharp
      name:
        CSharp: GetConsoleText()
        VB: GetConsoleText()
      nameWithType:
        CSharp: JavaServer.GetConsoleText()
        VB: JavaServer.GetConsoleText()
      qualifiedName:
        CSharp: IMS_Library.JavaServer.GetConsoleText()
        VB: IMS_Library.JavaServer.GetConsoleText()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetConsoleText
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 97
      syntax:
        content:
          CSharp: public override string GetConsoleText()
          VB: Public Overrides Function GetConsoleText As String
        return:
          type: System.String
      overload: IMS_Library.JavaServer.GetConsoleText*
      overridden: IMS_Library.ServerProxy.GetConsoleText
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.JavaServer.OnServerProcessDie(System.Diagnostics.Process)
      commentId: M:IMS_Library.JavaServer.OnServerProcessDie(System.Diagnostics.Process)
      language: CSharp
      name:
        CSharp: OnServerProcessDie(Process)
        VB: OnServerProcessDie(Process)
      nameWithType:
        CSharp: JavaServer.OnServerProcessDie(Process)
        VB: JavaServer.OnServerProcessDie(Process)
      qualifiedName:
        CSharp: IMS_Library.JavaServer.OnServerProcessDie(System.Diagnostics.Process)
        VB: IMS_Library.JavaServer.OnServerProcessDie(System.Diagnostics.Process)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: OnServerProcessDie
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 110
      syntax:
        content:
          CSharp: protected void OnServerProcessDie(Process process)
          VB: Protected Sub OnServerProcessDie(process As Process)
        parameters:
        - id: process
          type: System.Diagnostics.Process
      overload: IMS_Library.JavaServer.OnServerProcessDie*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IMS_Library.JavaServer.OpPlayer(System.String)
      commentId: M:IMS_Library.JavaServer.OpPlayer(System.String)
      language: CSharp
      name:
        CSharp: OpPlayer(String)
        VB: OpPlayer(String)
      nameWithType:
        CSharp: JavaServer.OpPlayer(String)
        VB: JavaServer.OpPlayer(String)
      qualifiedName:
        CSharp: IMS_Library.JavaServer.OpPlayer(System.String)
        VB: IMS_Library.JavaServer.OpPlayer(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: OpPlayer
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 145
      syntax:
        content:
          CSharp: public override void OpPlayer(string name)
          VB: Public Overrides Sub OpPlayer(name As String)
        parameters:
        - id: name
          type: System.String
      overload: IMS_Library.JavaServer.OpPlayer*
      overridden: IMS_Library.ServerProxy.OpPlayer(System.String)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.JavaServer.BackupToLocationAsync(System.String)
      commentId: M:IMS_Library.JavaServer.BackupToLocationAsync(System.String)
      language: CSharp
      name:
        CSharp: BackupToLocationAsync(String)
        VB: BackupToLocationAsync(String)
      nameWithType:
        CSharp: JavaServer.BackupToLocationAsync(String)
        VB: JavaServer.BackupToLocationAsync(String)
      qualifiedName:
        CSharp: IMS_Library.JavaServer.BackupToLocationAsync(System.String)
        VB: IMS_Library.JavaServer.BackupToLocationAsync(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: BackupToLocationAsync
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 169
      syntax:
        content:
          CSharp: public override Task BackupToLocationAsync(string location)
          VB: Public Overrides Function BackupToLocationAsync(location As String) As Task
        parameters:
        - id: location
          type: System.String
        return:
          type: System.Threading.Tasks.Task
      overload: IMS_Library.JavaServer.BackupToLocationAsync*
      overridden: IMS_Library.ServerProxy.BackupToLocationAsync(System.String)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.JavaServer.BackupToZipFileAsync(System.String)
      commentId: M:IMS_Library.JavaServer.BackupToZipFileAsync(System.String)
      language: CSharp
      name:
        CSharp: BackupToZipFileAsync(String)
        VB: BackupToZipFileAsync(String)
      nameWithType:
        CSharp: JavaServer.BackupToZipFileAsync(String)
        VB: JavaServer.BackupToZipFileAsync(String)
      qualifiedName:
        CSharp: IMS_Library.JavaServer.BackupToZipFileAsync(System.String)
        VB: IMS_Library.JavaServer.BackupToZipFileAsync(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: BackupToZipFileAsync
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 197
      syntax:
        content:
          CSharp: public override Task BackupToZipFileAsync(string file)
          VB: Public Overrides Function BackupToZipFileAsync(file As String) As Task
        parameters:
        - id: file
          type: System.String
        return:
          type: System.Threading.Tasks.Task
      overload: IMS_Library.JavaServer.BackupToZipFileAsync*
      overridden: IMS_Library.ServerProxy.BackupToZipFileAsync(System.String)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.JavaServer.RestartAsync
      commentId: M:IMS_Library.JavaServer.RestartAsync
      language: CSharp
      name:
        CSharp: RestartAsync()
        VB: RestartAsync()
      nameWithType:
        CSharp: JavaServer.RestartAsync()
        VB: JavaServer.RestartAsync()
      qualifiedName:
        CSharp: IMS_Library.JavaServer.RestartAsync()
        VB: IMS_Library.JavaServer.RestartAsync()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: RestartAsync
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 228
      syntax:
        content:
          CSharp: public override Task RestartAsync()
          VB: Public Overrides Function RestartAsync As Task
        return:
          type: System.Threading.Tasks.Task
      overload: IMS_Library.JavaServer.RestartAsync*
      overridden: IMS_Library.ServerProxy.RestartAsync
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.JavaServer.SendConsoleCommand(System.String)
      commentId: M:IMS_Library.JavaServer.SendConsoleCommand(System.String)
      language: CSharp
      name:
        CSharp: SendConsoleCommand(String)
        VB: SendConsoleCommand(String)
      nameWithType:
        CSharp: JavaServer.SendConsoleCommand(String)
        VB: JavaServer.SendConsoleCommand(String)
      qualifiedName:
        CSharp: IMS_Library.JavaServer.SendConsoleCommand(System.String)
        VB: IMS_Library.JavaServer.SendConsoleCommand(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: SendConsoleCommand
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 234
      syntax:
        content:
          CSharp: public override void SendConsoleCommand(string command)
          VB: Public Overrides Sub SendConsoleCommand(command As String)
        parameters:
        - id: command
          type: System.String
      overload: IMS_Library.JavaServer.SendConsoleCommand*
      overridden: IMS_Library.ServerProxy.SendConsoleCommand(System.String)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.JavaServer.SendUncheckedConsoleCommand(System.String)
      commentId: M:IMS_Library.JavaServer.SendUncheckedConsoleCommand(System.String)
      language: CSharp
      name:
        CSharp: SendUncheckedConsoleCommand(String)
        VB: SendUncheckedConsoleCommand(String)
      nameWithType:
        CSharp: JavaServer.SendUncheckedConsoleCommand(String)
        VB: JavaServer.SendUncheckedConsoleCommand(String)
      qualifiedName:
        CSharp: IMS_Library.JavaServer.SendUncheckedConsoleCommand(System.String)
        VB: IMS_Library.JavaServer.SendUncheckedConsoleCommand(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: SendUncheckedConsoleCommand
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 247
      syntax:
        content:
          CSharp: protected void SendUncheckedConsoleCommand(string command)
          VB: Protected Sub SendUncheckedConsoleCommand(command As String)
        parameters:
        - id: command
          type: System.String
      overload: IMS_Library.JavaServer.SendUncheckedConsoleCommand*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IMS_Library.JavaServer.ReloadWhitelistJSON
      commentId: M:IMS_Library.JavaServer.ReloadWhitelistJSON
      language: CSharp
      name:
        CSharp: ReloadWhitelistJSON()
        VB: ReloadWhitelistJSON()
      nameWithType:
        CSharp: JavaServer.ReloadWhitelistJSON()
        VB: JavaServer.ReloadWhitelistJSON()
      qualifiedName:
        CSharp: IMS_Library.JavaServer.ReloadWhitelistJSON()
        VB: IMS_Library.JavaServer.ReloadWhitelistJSON()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ReloadWhitelistJSON
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 255
      syntax:
        content:
          CSharp: protected void ReloadWhitelistJSON()
          VB: Protected Sub ReloadWhitelistJSON
      overload: IMS_Library.JavaServer.ReloadWhitelistJSON*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IMS_Library.JavaServer.AddPlayerToAllPlayersList(IMS_Library.MinecraftPlayer)
      commentId: M:IMS_Library.JavaServer.AddPlayerToAllPlayersList(IMS_Library.MinecraftPlayer)
      language: CSharp
      name:
        CSharp: AddPlayerToAllPlayersList(MinecraftPlayer)
        VB: AddPlayerToAllPlayersList(MinecraftPlayer)
      nameWithType:
        CSharp: JavaServer.AddPlayerToAllPlayersList(MinecraftPlayer)
        VB: JavaServer.AddPlayerToAllPlayersList(MinecraftPlayer)
      qualifiedName:
        CSharp: IMS_Library.JavaServer.AddPlayerToAllPlayersList(IMS_Library.MinecraftPlayer)
        VB: IMS_Library.JavaServer.AddPlayerToAllPlayersList(IMS_Library.MinecraftPlayer)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: AddPlayerToAllPlayersList
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 282
      syntax:
        content:
          CSharp: protected void AddPlayerToAllPlayersList(MinecraftPlayer player)
          VB: Protected Sub AddPlayerToAllPlayersList(player As MinecraftPlayer)
        parameters:
        - id: player
          type: IMS_Library.MinecraftPlayer
      overload: IMS_Library.JavaServer.AddPlayerToAllPlayersList*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IMS_Library.JavaServer.ReloadOpJSON
      commentId: M:IMS_Library.JavaServer.ReloadOpJSON
      language: CSharp
      name:
        CSharp: ReloadOpJSON()
        VB: ReloadOpJSON()
      nameWithType:
        CSharp: JavaServer.ReloadOpJSON()
        VB: JavaServer.ReloadOpJSON()
      qualifiedName:
        CSharp: IMS_Library.JavaServer.ReloadOpJSON()
        VB: IMS_Library.JavaServer.ReloadOpJSON()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ReloadOpJSON
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 297
      syntax:
        content:
          CSharp: protected void ReloadOpJSON()
          VB: Protected Sub ReloadOpJSON
      overload: IMS_Library.JavaServer.ReloadOpJSON*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IMS_Library.JavaServer.GetPlayerByIdentifier(System.String,System.String)
      commentId: M:IMS_Library.JavaServer.GetPlayerByIdentifier(System.String,System.String)
      language: CSharp
      name:
        CSharp: GetPlayerByIdentifier(String, String)
        VB: GetPlayerByIdentifier(String, String)
      nameWithType:
        CSharp: JavaServer.GetPlayerByIdentifier(String, String)
        VB: JavaServer.GetPlayerByIdentifier(String, String)
      qualifiedName:
        CSharp: IMS_Library.JavaServer.GetPlayerByIdentifier(System.String, System.String)
        VB: IMS_Library.JavaServer.GetPlayerByIdentifier(System.String, System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetPlayerByIdentifier
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 325
      syntax:
        content:
          CSharp: protected virtual MinecraftPlayer GetPlayerByIdentifier(string name, string uuid)
          VB: Protected Overridable Function GetPlayerByIdentifier(name As String, uuid As String) As MinecraftPlayer
        parameters:
        - id: name
          type: System.String
        - id: uuid
          type: System.String
        return:
          type: IMS_Library.MinecraftPlayer
      overload: IMS_Library.JavaServer.GetPlayerByIdentifier*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: IMS_Library.JavaServer.GetPlayerOrDefaultByIdentifier(System.String,System.String)
      commentId: M:IMS_Library.JavaServer.GetPlayerOrDefaultByIdentifier(System.String,System.String)
      language: CSharp
      name:
        CSharp: GetPlayerOrDefaultByIdentifier(String, String)
        VB: GetPlayerOrDefaultByIdentifier(String, String)
      nameWithType:
        CSharp: JavaServer.GetPlayerOrDefaultByIdentifier(String, String)
        VB: JavaServer.GetPlayerOrDefaultByIdentifier(String, String)
      qualifiedName:
        CSharp: IMS_Library.JavaServer.GetPlayerOrDefaultByIdentifier(System.String, System.String)
        VB: IMS_Library.JavaServer.GetPlayerOrDefaultByIdentifier(System.String, System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetPlayerOrDefaultByIdentifier
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 347
      syntax:
        content:
          CSharp: protected virtual MinecraftPlayer GetPlayerOrDefaultByIdentifier(string name, string uuid)
          VB: Protected Overridable Function GetPlayerOrDefaultByIdentifier(name As String, uuid As String) As MinecraftPlayer
        parameters:
        - id: name
          type: System.String
        - id: uuid
          type: System.String
        return:
          type: IMS_Library.MinecraftPlayer
      overload: IMS_Library.JavaServer.GetPlayerOrDefaultByIdentifier*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: IMS_Library.JavaServer.ReloadBanJSON
      commentId: M:IMS_Library.JavaServer.ReloadBanJSON
      language: CSharp
      name:
        CSharp: ReloadBanJSON()
        VB: ReloadBanJSON()
      nameWithType:
        CSharp: JavaServer.ReloadBanJSON()
        VB: JavaServer.ReloadBanJSON()
      qualifiedName:
        CSharp: IMS_Library.JavaServer.ReloadBanJSON()
        VB: IMS_Library.JavaServer.ReloadBanJSON()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ReloadBanJSON
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 383
      syntax:
        content:
          CSharp: protected void ReloadBanJSON()
          VB: Protected Sub ReloadBanJSON
      overload: IMS_Library.JavaServer.ReloadBanJSON*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IMS_Library.JavaServer.ReloadBanIPJSON
      commentId: M:IMS_Library.JavaServer.ReloadBanIPJSON
      language: CSharp
      name:
        CSharp: ReloadBanIPJSON()
        VB: ReloadBanIPJSON()
      nameWithType:
        CSharp: JavaServer.ReloadBanIPJSON()
        VB: JavaServer.ReloadBanIPJSON()
      qualifiedName:
        CSharp: IMS_Library.JavaServer.ReloadBanIPJSON()
        VB: IMS_Library.JavaServer.ReloadBanIPJSON()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ReloadBanIPJSON
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 412
      syntax:
        content:
          CSharp: protected void ReloadBanIPJSON()
          VB: Protected Sub ReloadBanIPJSON
      overload: IMS_Library.JavaServer.ReloadBanIPJSON*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IMS_Library.JavaServer.GetOperatorStatusOfPlayerByUUID(System.String)
      commentId: M:IMS_Library.JavaServer.GetOperatorStatusOfPlayerByUUID(System.String)
      language: CSharp
      name:
        CSharp: GetOperatorStatusOfPlayerByUUID(String)
        VB: GetOperatorStatusOfPlayerByUUID(String)
      nameWithType:
        CSharp: JavaServer.GetOperatorStatusOfPlayerByUUID(String)
        VB: JavaServer.GetOperatorStatusOfPlayerByUUID(String)
      qualifiedName:
        CSharp: IMS_Library.JavaServer.GetOperatorStatusOfPlayerByUUID(System.String)
        VB: IMS_Library.JavaServer.GetOperatorStatusOfPlayerByUUID(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetOperatorStatusOfPlayerByUUID
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 427
      syntax:
        content:
          CSharp: public int GetOperatorStatusOfPlayerByUUID(string uuid)
          VB: Public Function GetOperatorStatusOfPlayerByUUID(uuid As String) As Integer
        parameters:
        - id: uuid
          type: System.String
        return:
          type: System.Int32
      overload: IMS_Library.JavaServer.GetOperatorStatusOfPlayerByUUID*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServer.StartAsync
      commentId: M:IMS_Library.JavaServer.StartAsync
      language: CSharp
      name:
        CSharp: StartAsync()
        VB: StartAsync()
      nameWithType:
        CSharp: JavaServer.StartAsync()
        VB: JavaServer.StartAsync()
      qualifiedName:
        CSharp: IMS_Library.JavaServer.StartAsync()
        VB: IMS_Library.JavaServer.StartAsync()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: StartAsync
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 435
      syntax:
        content:
          CSharp: public override Task StartAsync()
          VB: Public Overrides Function StartAsync As Task
        return:
          type: System.Threading.Tasks.Task
      overload: IMS_Library.JavaServer.StartAsync*
      overridden: IMS_Library.ServerProxy.StartAsync
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.JavaServer.OnServerConsoleDataReceived(System.Object,System.Diagnostics.DataReceivedEventArgs)
      commentId: M:IMS_Library.JavaServer.OnServerConsoleDataReceived(System.Object,System.Diagnostics.DataReceivedEventArgs)
      language: CSharp
      name:
        CSharp: OnServerConsoleDataReceived(Object, DataReceivedEventArgs)
        VB: OnServerConsoleDataReceived(Object, DataReceivedEventArgs)
      nameWithType:
        CSharp: JavaServer.OnServerConsoleDataReceived(Object, DataReceivedEventArgs)
        VB: JavaServer.OnServerConsoleDataReceived(Object, DataReceivedEventArgs)
      qualifiedName:
        CSharp: IMS_Library.JavaServer.OnServerConsoleDataReceived(System.Object, System.Diagnostics.DataReceivedEventArgs)
        VB: IMS_Library.JavaServer.OnServerConsoleDataReceived(System.Object, System.Diagnostics.DataReceivedEventArgs)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: OnServerConsoleDataReceived
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 533
      syntax:
        content:
          CSharp: protected void OnServerConsoleDataReceived(object sender, DataReceivedEventArgs args)
          VB: Protected Sub OnServerConsoleDataReceived(sender As Object, args As DataReceivedEventArgs)
        parameters:
        - id: sender
          type: System.Object
        - id: args
          type: System.Diagnostics.DataReceivedEventArgs
      overload: IMS_Library.JavaServer.OnServerConsoleDataReceived*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IMS_Library.JavaServer.StopAsync
      commentId: M:IMS_Library.JavaServer.StopAsync
      language: CSharp
      name:
        CSharp: StopAsync()
        VB: StopAsync()
      nameWithType:
        CSharp: JavaServer.StopAsync()
        VB: JavaServer.StopAsync()
      qualifiedName:
        CSharp: IMS_Library.JavaServer.StopAsync()
        VB: IMS_Library.JavaServer.StopAsync()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: StopAsync
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 787
      syntax:
        content:
          CSharp: public override Task StopAsync()
          VB: Public Overrides Function StopAsync As Task
        return:
          type: System.Threading.Tasks.Task
      overload: IMS_Library.JavaServer.StopAsync*
      overridden: IMS_Library.ServerProxy.StopAsync
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.JavaServer.BanPlayer(System.String,System.String)
      commentId: M:IMS_Library.JavaServer.BanPlayer(System.String,System.String)
      language: CSharp
      name:
        CSharp: BanPlayer(String, String)
        VB: BanPlayer(String, String)
      nameWithType:
        CSharp: JavaServer.BanPlayer(String, String)
        VB: JavaServer.BanPlayer(String, String)
      qualifiedName:
        CSharp: IMS_Library.JavaServer.BanPlayer(System.String, System.String)
        VB: IMS_Library.JavaServer.BanPlayer(System.String, System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: BanPlayer
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 830
      syntax:
        content:
          CSharp: public override void BanPlayer(string name, string reason)
          VB: Public Overrides Sub BanPlayer(name As String, reason As String)
        parameters:
        - id: name
          type: System.String
        - id: reason
          type: System.String
      overload: IMS_Library.JavaServer.BanPlayer*
      overridden: IMS_Library.ServerProxy.BanPlayer(System.String,System.String)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.JavaServer.BanIP(System.String,System.String)
      commentId: M:IMS_Library.JavaServer.BanIP(System.String,System.String)
      language: CSharp
      name:
        CSharp: BanIP(String, String)
        VB: BanIP(String, String)
      nameWithType:
        CSharp: JavaServer.BanIP(String, String)
        VB: JavaServer.BanIP(String, String)
      qualifiedName:
        CSharp: IMS_Library.JavaServer.BanIP(System.String, System.String)
        VB: IMS_Library.JavaServer.BanIP(System.String, System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: BanIP
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 861
      syntax:
        content:
          CSharp: public override void BanIP(string ip, string reason)
          VB: Public Overrides Sub BanIP(ip As String, reason As String)
        parameters:
        - id: ip
          type: System.String
        - id: reason
          type: System.String
      overload: IMS_Library.JavaServer.BanIP*
      overridden: IMS_Library.ServerProxy.BanIP(System.String,System.String)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.JavaServer.UnbanPlayer(System.String)
      commentId: M:IMS_Library.JavaServer.UnbanPlayer(System.String)
      language: CSharp
      name:
        CSharp: UnbanPlayer(String)
        VB: UnbanPlayer(String)
      nameWithType:
        CSharp: JavaServer.UnbanPlayer(String)
        VB: JavaServer.UnbanPlayer(String)
      qualifiedName:
        CSharp: IMS_Library.JavaServer.UnbanPlayer(System.String)
        VB: IMS_Library.JavaServer.UnbanPlayer(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: UnbanPlayer
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 885
      syntax:
        content:
          CSharp: public override void UnbanPlayer(string name)
          VB: Public Overrides Sub UnbanPlayer(name As String)
        parameters:
        - id: name
          type: System.String
      overload: IMS_Library.JavaServer.UnbanPlayer*
      overridden: IMS_Library.ServerProxy.UnbanPlayer(System.String)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.JavaServer.UnbanIP(System.String)
      commentId: M:IMS_Library.JavaServer.UnbanIP(System.String)
      language: CSharp
      name:
        CSharp: UnbanIP(String)
        VB: UnbanIP(String)
      nameWithType:
        CSharp: JavaServer.UnbanIP(String)
        VB: JavaServer.UnbanIP(String)
      qualifiedName:
        CSharp: IMS_Library.JavaServer.UnbanIP(System.String)
        VB: IMS_Library.JavaServer.UnbanIP(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: UnbanIP
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 906
      syntax:
        content:
          CSharp: public override void UnbanIP(string ip)
          VB: Public Overrides Sub UnbanIP(ip As String)
        parameters:
        - id: ip
          type: System.String
      overload: IMS_Library.JavaServer.UnbanIP*
      overridden: IMS_Library.ServerProxy.UnbanIP(System.String)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.JavaServer.DeopPlayer(System.String)
      commentId: M:IMS_Library.JavaServer.DeopPlayer(System.String)
      language: CSharp
      name:
        CSharp: DeopPlayer(String)
        VB: DeopPlayer(String)
      nameWithType:
        CSharp: JavaServer.DeopPlayer(String)
        VB: JavaServer.DeopPlayer(String)
      qualifiedName:
        CSharp: IMS_Library.JavaServer.DeopPlayer(System.String)
        VB: IMS_Library.JavaServer.DeopPlayer(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: DeopPlayer
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 927
      syntax:
        content:
          CSharp: public override void DeopPlayer(string name)
          VB: Public Overrides Sub DeopPlayer(name As String)
        parameters:
        - id: name
          type: System.String
      overload: IMS_Library.JavaServer.DeopPlayer*
      overridden: IMS_Library.ServerProxy.DeopPlayer(System.String)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.JavaServer.WhitelistPlayer(System.String)
      commentId: M:IMS_Library.JavaServer.WhitelistPlayer(System.String)
      language: CSharp
      name:
        CSharp: WhitelistPlayer(String)
        VB: WhitelistPlayer(String)
      nameWithType:
        CSharp: JavaServer.WhitelistPlayer(String)
        VB: JavaServer.WhitelistPlayer(String)
      qualifiedName:
        CSharp: IMS_Library.JavaServer.WhitelistPlayer(System.String)
        VB: IMS_Library.JavaServer.WhitelistPlayer(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: WhitelistPlayer
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 948
      syntax:
        content:
          CSharp: public override void WhitelistPlayer(string name)
          VB: Public Overrides Sub WhitelistPlayer(name As String)
        parameters:
        - id: name
          type: System.String
      overload: IMS_Library.JavaServer.WhitelistPlayer*
      overridden: IMS_Library.ServerProxy.WhitelistPlayer(System.String)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.JavaServer.RemoveWhitelistPlayer(System.String)
      commentId: M:IMS_Library.JavaServer.RemoveWhitelistPlayer(System.String)
      language: CSharp
      name:
        CSharp: RemoveWhitelistPlayer(String)
        VB: RemoveWhitelistPlayer(String)
      nameWithType:
        CSharp: JavaServer.RemoveWhitelistPlayer(String)
        VB: JavaServer.RemoveWhitelistPlayer(String)
      qualifiedName:
        CSharp: IMS_Library.JavaServer.RemoveWhitelistPlayer(System.String)
        VB: IMS_Library.JavaServer.RemoveWhitelistPlayer(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: RemoveWhitelistPlayer
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 972
      syntax:
        content:
          CSharp: public override void RemoveWhitelistPlayer(string name)
          VB: Public Overrides Sub RemoveWhitelistPlayer(name As String)
        parameters:
        - id: name
          type: System.String
      overload: IMS_Library.JavaServer.RemoveWhitelistPlayer*
      overridden: IMS_Library.ServerProxy.RemoveWhitelistPlayer(System.String)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.JavaServer.GetAllPlayers
      commentId: M:IMS_Library.JavaServer.GetAllPlayers
      language: CSharp
      name:
        CSharp: GetAllPlayers()
        VB: GetAllPlayers()
      nameWithType:
        CSharp: JavaServer.GetAllPlayers()
        VB: JavaServer.GetAllPlayers()
      qualifiedName:
        CSharp: IMS_Library.JavaServer.GetAllPlayers()
        VB: IMS_Library.JavaServer.GetAllPlayers()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetAllPlayers
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 993
      syntax:
        content:
          CSharp: public override IEnumerable<MinecraftPlayer> GetAllPlayers()
          VB: Public Overrides Function GetAllPlayers As IEnumerable(Of MinecraftPlayer)
        return:
          type: System.Collections.Generic.IEnumerable{IMS_Library.MinecraftPlayer}
      overload: IMS_Library.JavaServer.GetAllPlayers*
      overridden: IMS_Library.ServerProxy.GetAllPlayers
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.JavaServer.GetAllOps
      commentId: M:IMS_Library.JavaServer.GetAllOps
      language: CSharp
      name:
        CSharp: GetAllOps()
        VB: GetAllOps()
      nameWithType:
        CSharp: JavaServer.GetAllOps()
        VB: JavaServer.GetAllOps()
      qualifiedName:
        CSharp: IMS_Library.JavaServer.GetAllOps()
        VB: IMS_Library.JavaServer.GetAllOps()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetAllOps
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 1001
      syntax:
        content:
          CSharp: public override IEnumerable<MinecraftPlayer> GetAllOps()
          VB: Public Overrides Function GetAllOps As IEnumerable(Of MinecraftPlayer)
        return:
          type: System.Collections.Generic.IEnumerable{IMS_Library.MinecraftPlayer}
      overload: IMS_Library.JavaServer.GetAllOps*
      overridden: IMS_Library.ServerProxy.GetAllOps
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.JavaServer.GetAllBans
      commentId: M:IMS_Library.JavaServer.GetAllBans
      language: CSharp
      name:
        CSharp: GetAllBans()
        VB: GetAllBans()
      nameWithType:
        CSharp: JavaServer.GetAllBans()
        VB: JavaServer.GetAllBans()
      qualifiedName:
        CSharp: IMS_Library.JavaServer.GetAllBans()
        VB: IMS_Library.JavaServer.GetAllBans()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetAllBans
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 1009
      syntax:
        content:
          CSharp: public override List<BanInformation> GetAllBans()
          VB: Public Overrides Function GetAllBans As List(Of BanInformation)
        return:
          type: System.Collections.Generic.List{IMS_Library.BanInformation}
      overload: IMS_Library.JavaServer.GetAllBans*
      overridden: IMS_Library.ServerProxy.GetAllBans
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.JavaServer.GetAllBannedIPs
      commentId: M:IMS_Library.JavaServer.GetAllBannedIPs
      language: CSharp
      name:
        CSharp: GetAllBannedIPs()
        VB: GetAllBannedIPs()
      nameWithType:
        CSharp: JavaServer.GetAllBannedIPs()
        VB: JavaServer.GetAllBannedIPs()
      qualifiedName:
        CSharp: IMS_Library.JavaServer.GetAllBannedIPs()
        VB: IMS_Library.JavaServer.GetAllBannedIPs()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetAllBannedIPs
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 1017
      syntax:
        content:
          CSharp: public override List<BanIPTag> GetAllBannedIPs()
          VB: Public Overrides Function GetAllBannedIPs As List(Of BanIPTag)
        return:
          type: System.Collections.Generic.List{IMS_Library.BanIPTag}
      overload: IMS_Library.JavaServer.GetAllBannedIPs*
      overridden: IMS_Library.ServerProxy.GetAllBannedIPs
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.JavaServer.ReloadServerWhitelist
      commentId: M:IMS_Library.JavaServer.ReloadServerWhitelist
      language: CSharp
      name:
        CSharp: ReloadServerWhitelist()
        VB: ReloadServerWhitelist()
      nameWithType:
        CSharp: JavaServer.ReloadServerWhitelist()
        VB: JavaServer.ReloadServerWhitelist()
      qualifiedName:
        CSharp: IMS_Library.JavaServer.ReloadServerWhitelist()
        VB: IMS_Library.JavaServer.ReloadServerWhitelist()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ReloadServerWhitelist
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 1025
      syntax:
        content:
          CSharp: public override void ReloadServerWhitelist()
          VB: Public Overrides Sub ReloadServerWhitelist
      overload: IMS_Library.JavaServer.ReloadServerWhitelist*
      overridden: IMS_Library.ServerProxy.ReloadServerWhitelist
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.JavaServer.ReloadServerPermissions
      commentId: M:IMS_Library.JavaServer.ReloadServerPermissions
      language: CSharp
      name:
        CSharp: ReloadServerPermissions()
        VB: ReloadServerPermissions()
      nameWithType:
        CSharp: JavaServer.ReloadServerPermissions()
        VB: JavaServer.ReloadServerPermissions()
      qualifiedName:
        CSharp: IMS_Library.JavaServer.ReloadServerPermissions()
        VB: IMS_Library.JavaServer.ReloadServerPermissions()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ReloadServerPermissions
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 1030
      syntax:
        content:
          CSharp: public override void ReloadServerPermissions()
          VB: Public Overrides Sub ReloadServerPermissions
      overload: IMS_Library.JavaServer.ReloadServerPermissions*
      overridden: IMS_Library.ServerProxy.ReloadServerPermissions
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.JavaServer.GetLogFiles
      commentId: M:IMS_Library.JavaServer.GetLogFiles
      language: CSharp
      name:
        CSharp: GetLogFiles()
        VB: GetLogFiles()
      nameWithType:
        CSharp: JavaServer.GetLogFiles()
        VB: JavaServer.GetLogFiles()
      qualifiedName:
        CSharp: IMS_Library.JavaServer.GetLogFiles()
        VB: IMS_Library.JavaServer.GetLogFiles()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetLogFiles
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 1035
      syntax:
        content:
          CSharp: public override List<LogFileInformation> GetLogFiles()
          VB: Public Overrides Function GetLogFiles As List(Of LogFileInformation)
        return:
          type: System.Collections.Generic.List{IMS_Library.LogFileInformation}
      overload: IMS_Library.JavaServer.GetLogFiles*
      overridden: IMS_Library.ServerProxy.GetLogFiles
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.JavaServer.GetLogFile(System.String)
      commentId: M:IMS_Library.JavaServer.GetLogFile(System.String)
      language: CSharp
      name:
        CSharp: GetLogFile(String)
        VB: GetLogFile(String)
      nameWithType:
        CSharp: JavaServer.GetLogFile(String)
        VB: JavaServer.GetLogFile(String)
      qualifiedName:
        CSharp: IMS_Library.JavaServer.GetLogFile(System.String)
        VB: IMS_Library.JavaServer.GetLogFile(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetLogFile
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 1049
      syntax:
        content:
          CSharp: public override string GetLogFile(string name)
          VB: Public Overrides Function GetLogFile(name As String) As String
        parameters:
        - id: name
          type: System.String
        return:
          type: System.String
      overload: IMS_Library.JavaServer.GetLogFile*
      overridden: IMS_Library.ServerProxy.GetLogFile(System.String)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.JavaServer.GetAllWhitelistedPlayers
      commentId: M:IMS_Library.JavaServer.GetAllWhitelistedPlayers
      language: CSharp
      name:
        CSharp: GetAllWhitelistedPlayers()
        VB: GetAllWhitelistedPlayers()
      nameWithType:
        CSharp: JavaServer.GetAllWhitelistedPlayers()
        VB: JavaServer.GetAllWhitelistedPlayers()
      qualifiedName:
        CSharp: IMS_Library.JavaServer.GetAllWhitelistedPlayers()
        VB: IMS_Library.JavaServer.GetAllWhitelistedPlayers()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetAllWhitelistedPlayers
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 1061
      syntax:
        content:
          CSharp: public override IEnumerable<MinecraftPlayer> GetAllWhitelistedPlayers()
          VB: Public Overrides Function GetAllWhitelistedPlayers As IEnumerable(Of MinecraftPlayer)
        return:
          type: System.Collections.Generic.IEnumerable{IMS_Library.MinecraftPlayer}
      overload: IMS_Library.JavaServer.GetAllWhitelistedPlayers*
      overridden: IMS_Library.ServerProxy.GetAllWhitelistedPlayers
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.JavaServer.GetPlayerInformationByUsername(System.String)
      commentId: M:IMS_Library.JavaServer.GetPlayerInformationByUsername(System.String)
      language: CSharp
      name:
        CSharp: GetPlayerInformationByUsername(String)
        VB: GetPlayerInformationByUsername(String)
      nameWithType:
        CSharp: JavaServer.GetPlayerInformationByUsername(String)
        VB: JavaServer.GetPlayerInformationByUsername(String)
      qualifiedName:
        CSharp: IMS_Library.JavaServer.GetPlayerInformationByUsername(System.String)
        VB: IMS_Library.JavaServer.GetPlayerInformationByUsername(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetPlayerInformationByUsername
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 1069
      syntax:
        content:
          CSharp: public override MinecraftPlayer GetPlayerInformationByUsername(string username)
          VB: Public Overrides Function GetPlayerInformationByUsername(username As String) As MinecraftPlayer
        parameters:
        - id: username
          type: System.String
        return:
          type: IMS_Library.MinecraftPlayer
      overload: IMS_Library.JavaServer.GetPlayerInformationByUsername*
      overridden: IMS_Library.ServerProxy.GetPlayerInformationByUsername(System.String)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.JavaServer.GetPlayerInformationByUUID(System.String)
      commentId: M:IMS_Library.JavaServer.GetPlayerInformationByUUID(System.String)
      language: CSharp
      name:
        CSharp: GetPlayerInformationByUUID(String)
        VB: GetPlayerInformationByUUID(String)
      nameWithType:
        CSharp: JavaServer.GetPlayerInformationByUUID(String)
        VB: JavaServer.GetPlayerInformationByUUID(String)
      qualifiedName:
        CSharp: IMS_Library.JavaServer.GetPlayerInformationByUUID(System.String)
        VB: IMS_Library.JavaServer.GetPlayerInformationByUUID(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetPlayerInformationByUUID
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServer.cs
        startLine: 1098
      syntax:
        content:
          CSharp: public override MinecraftPlayer GetPlayerInformationByUUID(string uuid)
          VB: Public Overrides Function GetPlayerInformationByUUID(uuid As String) As MinecraftPlayer
        parameters:
        - id: uuid
          type: System.String
        return:
          type: IMS_Library.MinecraftPlayer
      overload: IMS_Library.JavaServer.GetPlayerInformationByUUID*
      overridden: IMS_Library.ServerProxy.GetPlayerInformationByUUID(System.String)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: IMS_Library.JavaServerConfiguration
    commentId: T:IMS_Library.JavaServerConfiguration
    language: CSharp
    name:
      CSharp: JavaServerConfiguration
      VB: JavaServerConfiguration
    nameWithType:
      CSharp: JavaServerConfiguration
      VB: JavaServerConfiguration
    qualifiedName:
      CSharp: IMS_Library.JavaServerConfiguration
      VB: IMS_Library.JavaServerConfiguration
    type: Class
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: JavaServerConfiguration
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
      startLine: 10
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class JavaServerConfiguration : ServerConfiguration, ICloneable
        VB: >-
          <Serializable>

          Public Class JavaServerConfiguration

              Inherits ServerConfiguration

              Implements ICloneable
    inheritance:
    - System.Object
    - IMS_Library.IMSConfiguration
    - IMS_Library.ServerConfiguration
    implements:
    - System.ICloneable
    inheritedMembers:
    - IMS_Library.ServerConfiguration.ID
    - IMS_Library.ServerConfiguration.ServerName
    - IMS_Library.ServerConfiguration.Edition
    - IMS_Library.ServerConfiguration.IsEnabled
    - IMS_Library.ServerConfiguration.WorldID
    - IMS_Library.ServerConfiguration.GetServerFolderLocation
    - IMS_Library.ServerConfiguration.GetDefaultFilePath
    - IMS_Library.IMSConfiguration.Clone
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    extensionMethods:
    - IMS_Library.JavaServerConfiguration.IMS_Library.IMSConfigurationUtility.FromConfiguration``1
    - IMS_Library.JavaServerConfiguration.IMS_Library.IMSConfigurationUtility.SaveConfiguration``1
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: IMS_Library.JavaServerConfiguration.ServerVersion
      commentId: F:IMS_Library.JavaServerConfiguration.ServerVersion
      language: CSharp
      name:
        CSharp: ServerVersion
        VB: ServerVersion
      nameWithType:
        CSharp: JavaServerConfiguration.ServerVersion
        VB: JavaServerConfiguration.ServerVersion
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.ServerVersion
        VB: IMS_Library.JavaServerConfiguration.ServerVersion
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ServerVersion
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 14
      syntax:
        content:
          CSharp: public string ServerVersion
          VB: Public ServerVersion As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.MinimumMemoryMB
      commentId: F:IMS_Library.JavaServerConfiguration.MinimumMemoryMB
      language: CSharp
      name:
        CSharp: MinimumMemoryMB
        VB: MinimumMemoryMB
      nameWithType:
        CSharp: JavaServerConfiguration.MinimumMemoryMB
        VB: JavaServerConfiguration.MinimumMemoryMB
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.MinimumMemoryMB
        VB: IMS_Library.JavaServerConfiguration.MinimumMemoryMB
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: MinimumMemoryMB
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 15
      syntax:
        content:
          CSharp: public int MinimumMemoryMB
          VB: Public MinimumMemoryMB As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.MaximumMemoryMB
      commentId: F:IMS_Library.JavaServerConfiguration.MaximumMemoryMB
      language: CSharp
      name:
        CSharp: MaximumMemoryMB
        VB: MaximumMemoryMB
      nameWithType:
        CSharp: JavaServerConfiguration.MaximumMemoryMB
        VB: JavaServerConfiguration.MaximumMemoryMB
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.MaximumMemoryMB
        VB: IMS_Library.JavaServerConfiguration.MaximumMemoryMB
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: MaximumMemoryMB
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 16
      syntax:
        content:
          CSharp: public int MaximumMemoryMB
          VB: Public MaximumMemoryMB As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.JavaArguments
      commentId: F:IMS_Library.JavaServerConfiguration.JavaArguments
      language: CSharp
      name:
        CSharp: JavaArguments
        VB: JavaArguments
      nameWithType:
        CSharp: JavaServerConfiguration.JavaArguments
        VB: JavaServerConfiguration.JavaArguments
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.JavaArguments
        VB: IMS_Library.JavaServerConfiguration.JavaArguments
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: JavaArguments
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 17
      syntax:
        content:
          CSharp: public string JavaArguments
          VB: Public JavaArguments As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.AllowFlight
      commentId: F:IMS_Library.JavaServerConfiguration.AllowFlight
      language: CSharp
      name:
        CSharp: AllowFlight
        VB: AllowFlight
      nameWithType:
        CSharp: JavaServerConfiguration.AllowFlight
        VB: JavaServerConfiguration.AllowFlight
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.AllowFlight
        VB: IMS_Library.JavaServerConfiguration.AllowFlight
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: AllowFlight
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 20
      syntax:
        content:
          CSharp: >-
            [ServerProperty("allow-flight")]

            public bool AllowFlight
          VB: >-
            <ServerProperty("allow-flight")>

            Public AllowFlight As Boolean
        return:
          type: System.Boolean
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: allow-flight
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.AllowNether
      commentId: F:IMS_Library.JavaServerConfiguration.AllowNether
      language: CSharp
      name:
        CSharp: AllowNether
        VB: AllowNether
      nameWithType:
        CSharp: JavaServerConfiguration.AllowNether
        VB: JavaServerConfiguration.AllowNether
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.AllowNether
        VB: IMS_Library.JavaServerConfiguration.AllowNether
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: AllowNether
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 22
      syntax:
        content:
          CSharp: >-
            [ServerProperty("allow-nether")]

            public bool AllowNether
          VB: >-
            <ServerProperty("allow-nether")>

            Public AllowNether As Boolean
        return:
          type: System.Boolean
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: allow-nether
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.BroadcastConsoleToOps
      commentId: F:IMS_Library.JavaServerConfiguration.BroadcastConsoleToOps
      language: CSharp
      name:
        CSharp: BroadcastConsoleToOps
        VB: BroadcastConsoleToOps
      nameWithType:
        CSharp: JavaServerConfiguration.BroadcastConsoleToOps
        VB: JavaServerConfiguration.BroadcastConsoleToOps
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.BroadcastConsoleToOps
        VB: IMS_Library.JavaServerConfiguration.BroadcastConsoleToOps
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: BroadcastConsoleToOps
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 24
      syntax:
        content:
          CSharp: >-
            [ServerProperty("broadcast-console-to-ops")]

            public bool BroadcastConsoleToOps
          VB: >-
            <ServerProperty("broadcast-console-to-ops")>

            Public BroadcastConsoleToOps As Boolean
        return:
          type: System.Boolean
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: broadcast-console-to-ops
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.BroadcastRCONToOps
      commentId: F:IMS_Library.JavaServerConfiguration.BroadcastRCONToOps
      language: CSharp
      name:
        CSharp: BroadcastRCONToOps
        VB: BroadcastRCONToOps
      nameWithType:
        CSharp: JavaServerConfiguration.BroadcastRCONToOps
        VB: JavaServerConfiguration.BroadcastRCONToOps
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.BroadcastRCONToOps
        VB: IMS_Library.JavaServerConfiguration.BroadcastRCONToOps
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: BroadcastRCONToOps
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 26
      syntax:
        content:
          CSharp: >-
            [ServerProperty("broadcast-rcon-to-ops")]

            public bool BroadcastRCONToOps
          VB: >-
            <ServerProperty("broadcast-rcon-to-ops")>

            Public BroadcastRCONToOps As Boolean
        return:
          type: System.Boolean
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: broadcast-rcon-to-ops
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.Difficulty
      commentId: F:IMS_Library.JavaServerConfiguration.Difficulty
      language: CSharp
      name:
        CSharp: Difficulty
        VB: Difficulty
      nameWithType:
        CSharp: JavaServerConfiguration.Difficulty
        VB: JavaServerConfiguration.Difficulty
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.Difficulty
        VB: IMS_Library.JavaServerConfiguration.Difficulty
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Difficulty
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 28
      syntax:
        content:
          CSharp: >-
            [ServerProperty("difficulty")]

            public int Difficulty
          VB: >-
            <ServerProperty("difficulty")>

            Public Difficulty As Integer
        return:
          type: System.Int32
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: difficulty
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.EnableCommandBlocks
      commentId: F:IMS_Library.JavaServerConfiguration.EnableCommandBlocks
      language: CSharp
      name:
        CSharp: EnableCommandBlocks
        VB: EnableCommandBlocks
      nameWithType:
        CSharp: JavaServerConfiguration.EnableCommandBlocks
        VB: JavaServerConfiguration.EnableCommandBlocks
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.EnableCommandBlocks
        VB: IMS_Library.JavaServerConfiguration.EnableCommandBlocks
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: EnableCommandBlocks
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 30
      syntax:
        content:
          CSharp: >-
            [ServerProperty("enable-command-block")]

            public bool EnableCommandBlocks
          VB: >-
            <ServerProperty("enable-command-block")>

            Public EnableCommandBlocks As Boolean
        return:
          type: System.Boolean
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: enable-command-block
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.EnableRCON
      commentId: F:IMS_Library.JavaServerConfiguration.EnableRCON
      language: CSharp
      name:
        CSharp: EnableRCON
        VB: EnableRCON
      nameWithType:
        CSharp: JavaServerConfiguration.EnableRCON
        VB: JavaServerConfiguration.EnableRCON
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.EnableRCON
        VB: IMS_Library.JavaServerConfiguration.EnableRCON
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: EnableRCON
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 32
      syntax:
        content:
          CSharp: >-
            [ServerProperty("enable-rcon")]

            public bool EnableRCON
          VB: >-
            <ServerProperty("enable-rcon")>

            Public EnableRCON As Boolean
        return:
          type: System.Boolean
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: enable-rcon
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.SyncChunkWrites
      commentId: F:IMS_Library.JavaServerConfiguration.SyncChunkWrites
      language: CSharp
      name:
        CSharp: SyncChunkWrites
        VB: SyncChunkWrites
      nameWithType:
        CSharp: JavaServerConfiguration.SyncChunkWrites
        VB: JavaServerConfiguration.SyncChunkWrites
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.SyncChunkWrites
        VB: IMS_Library.JavaServerConfiguration.SyncChunkWrites
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: SyncChunkWrites
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 34
      syntax:
        content:
          CSharp: >-
            [ServerProperty("sync-chunk-writes")]

            public bool SyncChunkWrites
          VB: >-
            <ServerProperty("sync-chunk-writes")>

            Public SyncChunkWrites As Boolean
        return:
          type: System.Boolean
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: sync-chunk-writes
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.EnableQuery
      commentId: F:IMS_Library.JavaServerConfiguration.EnableQuery
      language: CSharp
      name:
        CSharp: EnableQuery
        VB: EnableQuery
      nameWithType:
        CSharp: JavaServerConfiguration.EnableQuery
        VB: JavaServerConfiguration.EnableQuery
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.EnableQuery
        VB: IMS_Library.JavaServerConfiguration.EnableQuery
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: EnableQuery
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 36
      syntax:
        content:
          CSharp: >-
            [ServerProperty("enable-query")]

            public bool EnableQuery
          VB: >-
            <ServerProperty("enable-query")>

            Public EnableQuery As Boolean
        return:
          type: System.Boolean
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: enable-query
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.ForceGamemode
      commentId: F:IMS_Library.JavaServerConfiguration.ForceGamemode
      language: CSharp
      name:
        CSharp: ForceGamemode
        VB: ForceGamemode
      nameWithType:
        CSharp: JavaServerConfiguration.ForceGamemode
        VB: JavaServerConfiguration.ForceGamemode
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.ForceGamemode
        VB: IMS_Library.JavaServerConfiguration.ForceGamemode
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ForceGamemode
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 38
      syntax:
        content:
          CSharp: >-
            [ServerProperty("force-gamemode")]

            public bool ForceGamemode
          VB: >-
            <ServerProperty("force-gamemode")>

            Public ForceGamemode As Boolean
        return:
          type: System.Boolean
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: force-gamemode
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.FunctionPermissionLevel
      commentId: F:IMS_Library.JavaServerConfiguration.FunctionPermissionLevel
      language: CSharp
      name:
        CSharp: FunctionPermissionLevel
        VB: FunctionPermissionLevel
      nameWithType:
        CSharp: JavaServerConfiguration.FunctionPermissionLevel
        VB: JavaServerConfiguration.FunctionPermissionLevel
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.FunctionPermissionLevel
        VB: IMS_Library.JavaServerConfiguration.FunctionPermissionLevel
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: FunctionPermissionLevel
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 40
      syntax:
        content:
          CSharp: >-
            [ServerProperty("function-permission-level")]

            public int FunctionPermissionLevel
          VB: >-
            <ServerProperty("function-permission-level")>

            Public FunctionPermissionLevel As Integer
        return:
          type: System.Int32
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: function-permission-level
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.Gamemode
      commentId: F:IMS_Library.JavaServerConfiguration.Gamemode
      language: CSharp
      name:
        CSharp: Gamemode
        VB: Gamemode
      nameWithType:
        CSharp: JavaServerConfiguration.Gamemode
        VB: JavaServerConfiguration.Gamemode
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.Gamemode
        VB: IMS_Library.JavaServerConfiguration.Gamemode
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Gamemode
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 42
      syntax:
        content:
          CSharp: >-
            [ServerProperty("gamemode")]

            public int Gamemode
          VB: >-
            <ServerProperty("gamemode")>

            Public Gamemode As Integer
        return:
          type: System.Int32
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: gamemode
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.GenerateStructures
      commentId: F:IMS_Library.JavaServerConfiguration.GenerateStructures
      language: CSharp
      name:
        CSharp: GenerateStructures
        VB: GenerateStructures
      nameWithType:
        CSharp: JavaServerConfiguration.GenerateStructures
        VB: JavaServerConfiguration.GenerateStructures
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.GenerateStructures
        VB: IMS_Library.JavaServerConfiguration.GenerateStructures
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GenerateStructures
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 44
      syntax:
        content:
          CSharp: >-
            [ServerProperty("generate-structures")]

            public bool GenerateStructures
          VB: >-
            <ServerProperty("generate-structures")>

            Public GenerateStructures As Boolean
        return:
          type: System.Boolean
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: generate-structures
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.GeneratorSettings
      commentId: F:IMS_Library.JavaServerConfiguration.GeneratorSettings
      language: CSharp
      name:
        CSharp: GeneratorSettings
        VB: GeneratorSettings
      nameWithType:
        CSharp: JavaServerConfiguration.GeneratorSettings
        VB: JavaServerConfiguration.GeneratorSettings
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.GeneratorSettings
        VB: IMS_Library.JavaServerConfiguration.GeneratorSettings
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GeneratorSettings
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 46
      syntax:
        content:
          CSharp: >-
            [ServerProperty("generator-settings")]

            public string GeneratorSettings
          VB: >-
            <ServerProperty("generator-settings")>

            Public GeneratorSettings As String
        return:
          type: System.String
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: generator-settings
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.HardcoreMode
      commentId: F:IMS_Library.JavaServerConfiguration.HardcoreMode
      language: CSharp
      name:
        CSharp: HardcoreMode
        VB: HardcoreMode
      nameWithType:
        CSharp: JavaServerConfiguration.HardcoreMode
        VB: JavaServerConfiguration.HardcoreMode
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.HardcoreMode
        VB: IMS_Library.JavaServerConfiguration.HardcoreMode
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: HardcoreMode
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 48
      syntax:
        content:
          CSharp: >-
            [ServerProperty("hardcore")]

            public bool HardcoreMode
          VB: >-
            <ServerProperty("hardcore")>

            Public HardcoreMode As Boolean
        return:
          type: System.Boolean
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: hardcore
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.LevelName
      commentId: F:IMS_Library.JavaServerConfiguration.LevelName
      language: CSharp
      name:
        CSharp: LevelName
        VB: LevelName
      nameWithType:
        CSharp: JavaServerConfiguration.LevelName
        VB: JavaServerConfiguration.LevelName
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.LevelName
        VB: IMS_Library.JavaServerConfiguration.LevelName
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: LevelName
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 50
      syntax:
        content:
          CSharp: >-
            [ServerProperty("level-name")]

            public string LevelName
          VB: >-
            <ServerProperty("level-name")>

            Public LevelName As String
        return:
          type: System.String
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: level-name
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.LevelSeed
      commentId: F:IMS_Library.JavaServerConfiguration.LevelSeed
      language: CSharp
      name:
        CSharp: LevelSeed
        VB: LevelSeed
      nameWithType:
        CSharp: JavaServerConfiguration.LevelSeed
        VB: JavaServerConfiguration.LevelSeed
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.LevelSeed
        VB: IMS_Library.JavaServerConfiguration.LevelSeed
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: LevelSeed
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 52
      syntax:
        content:
          CSharp: >-
            [ServerProperty("level-seed")]

            public string LevelSeed
          VB: >-
            <ServerProperty("level-seed")>

            Public LevelSeed As String
        return:
          type: System.String
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: level-seed
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.LevelType
      commentId: F:IMS_Library.JavaServerConfiguration.LevelType
      language: CSharp
      name:
        CSharp: LevelType
        VB: LevelType
      nameWithType:
        CSharp: JavaServerConfiguration.LevelType
        VB: JavaServerConfiguration.LevelType
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.LevelType
        VB: IMS_Library.JavaServerConfiguration.LevelType
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: LevelType
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 54
      syntax:
        content:
          CSharp: >-
            [ServerProperty("level-type")]

            public string LevelType
          VB: >-
            <ServerProperty("level-type")>

            Public LevelType As String
        return:
          type: System.String
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: level-type
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.MaxBuildHeight
      commentId: F:IMS_Library.JavaServerConfiguration.MaxBuildHeight
      language: CSharp
      name:
        CSharp: MaxBuildHeight
        VB: MaxBuildHeight
      nameWithType:
        CSharp: JavaServerConfiguration.MaxBuildHeight
        VB: JavaServerConfiguration.MaxBuildHeight
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.MaxBuildHeight
        VB: IMS_Library.JavaServerConfiguration.MaxBuildHeight
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: MaxBuildHeight
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 56
      syntax:
        content:
          CSharp: >-
            [ServerProperty("max-build-height")]

            public int MaxBuildHeight
          VB: >-
            <ServerProperty("max-build-height")>

            Public MaxBuildHeight As Integer
        return:
          type: System.Int32
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: max-build-height
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.MaxPlayers
      commentId: F:IMS_Library.JavaServerConfiguration.MaxPlayers
      language: CSharp
      name:
        CSharp: MaxPlayers
        VB: MaxPlayers
      nameWithType:
        CSharp: JavaServerConfiguration.MaxPlayers
        VB: JavaServerConfiguration.MaxPlayers
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.MaxPlayers
        VB: IMS_Library.JavaServerConfiguration.MaxPlayers
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: MaxPlayers
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 58
      syntax:
        content:
          CSharp: >-
            [ServerProperty("max-players")]

            public int MaxPlayers
          VB: >-
            <ServerProperty("max-players")>

            Public MaxPlayers As Integer
        return:
          type: System.Int32
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: max-players
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.MaxTickTime
      commentId: F:IMS_Library.JavaServerConfiguration.MaxTickTime
      language: CSharp
      name:
        CSharp: MaxTickTime
        VB: MaxTickTime
      nameWithType:
        CSharp: JavaServerConfiguration.MaxTickTime
        VB: JavaServerConfiguration.MaxTickTime
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.MaxTickTime
        VB: IMS_Library.JavaServerConfiguration.MaxTickTime
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: MaxTickTime
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 60
      syntax:
        content:
          CSharp: >-
            [ServerProperty("max-tick-time")]

            public int MaxTickTime
          VB: >-
            <ServerProperty("max-tick-time")>

            Public MaxTickTime As Integer
        return:
          type: System.Int32
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: max-tick-time
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.MaxWorldSize
      commentId: F:IMS_Library.JavaServerConfiguration.MaxWorldSize
      language: CSharp
      name:
        CSharp: MaxWorldSize
        VB: MaxWorldSize
      nameWithType:
        CSharp: JavaServerConfiguration.MaxWorldSize
        VB: JavaServerConfiguration.MaxWorldSize
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.MaxWorldSize
        VB: IMS_Library.JavaServerConfiguration.MaxWorldSize
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: MaxWorldSize
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 62
      syntax:
        content:
          CSharp: >-
            [ServerProperty("max-world-size")]

            public int MaxWorldSize
          VB: >-
            <ServerProperty("max-world-size")>

            Public MaxWorldSize As Integer
        return:
          type: System.Int32
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: max-world-size
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.MessageOfTheDay
      commentId: F:IMS_Library.JavaServerConfiguration.MessageOfTheDay
      language: CSharp
      name:
        CSharp: MessageOfTheDay
        VB: MessageOfTheDay
      nameWithType:
        CSharp: JavaServerConfiguration.MessageOfTheDay
        VB: JavaServerConfiguration.MessageOfTheDay
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.MessageOfTheDay
        VB: IMS_Library.JavaServerConfiguration.MessageOfTheDay
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: MessageOfTheDay
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 64
      syntax:
        content:
          CSharp: >-
            [MOTDServerProperty("motd")]

            public string MessageOfTheDay
          VB: >-
            <MOTDServerProperty("motd")>

            Public MessageOfTheDay As String
        return:
          type: System.String
      attributes:
      - type: IMS_Library.MOTDServerProperty
        ctor: IMS_Library.MOTDServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: motd
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.NetworkCompressionThreshold
      commentId: F:IMS_Library.JavaServerConfiguration.NetworkCompressionThreshold
      language: CSharp
      name:
        CSharp: NetworkCompressionThreshold
        VB: NetworkCompressionThreshold
      nameWithType:
        CSharp: JavaServerConfiguration.NetworkCompressionThreshold
        VB: JavaServerConfiguration.NetworkCompressionThreshold
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.NetworkCompressionThreshold
        VB: IMS_Library.JavaServerConfiguration.NetworkCompressionThreshold
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: NetworkCompressionThreshold
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 66
      syntax:
        content:
          CSharp: >-
            [ServerProperty("network-compression-threshold")]

            public int NetworkCompressionThreshold
          VB: >-
            <ServerProperty("network-compression-threshold")>

            Public NetworkCompressionThreshold As Integer
        return:
          type: System.Int32
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: network-compression-threshold
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.OnlineMode
      commentId: F:IMS_Library.JavaServerConfiguration.OnlineMode
      language: CSharp
      name:
        CSharp: OnlineMode
        VB: OnlineMode
      nameWithType:
        CSharp: JavaServerConfiguration.OnlineMode
        VB: JavaServerConfiguration.OnlineMode
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.OnlineMode
        VB: IMS_Library.JavaServerConfiguration.OnlineMode
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: OnlineMode
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 68
      syntax:
        content:
          CSharp: >-
            [ServerProperty("online-mode")]

            public bool OnlineMode
          VB: >-
            <ServerProperty("online-mode")>

            Public OnlineMode As Boolean
        return:
          type: System.Boolean
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: online-mode
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.DefaultOpPermissionLevel
      commentId: F:IMS_Library.JavaServerConfiguration.DefaultOpPermissionLevel
      language: CSharp
      name:
        CSharp: DefaultOpPermissionLevel
        VB: DefaultOpPermissionLevel
      nameWithType:
        CSharp: JavaServerConfiguration.DefaultOpPermissionLevel
        VB: JavaServerConfiguration.DefaultOpPermissionLevel
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.DefaultOpPermissionLevel
        VB: IMS_Library.JavaServerConfiguration.DefaultOpPermissionLevel
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: DefaultOpPermissionLevel
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 70
      syntax:
        content:
          CSharp: >-
            [ServerProperty("op-permission-level")]

            public int DefaultOpPermissionLevel
          VB: >-
            <ServerProperty("op-permission-level")>

            Public DefaultOpPermissionLevel As Integer
        return:
          type: System.Int32
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: op-permission-level
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.PlayerIdleTimeout
      commentId: F:IMS_Library.JavaServerConfiguration.PlayerIdleTimeout
      language: CSharp
      name:
        CSharp: PlayerIdleTimeout
        VB: PlayerIdleTimeout
      nameWithType:
        CSharp: JavaServerConfiguration.PlayerIdleTimeout
        VB: JavaServerConfiguration.PlayerIdleTimeout
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.PlayerIdleTimeout
        VB: IMS_Library.JavaServerConfiguration.PlayerIdleTimeout
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: PlayerIdleTimeout
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 72
      syntax:
        content:
          CSharp: >-
            [ServerProperty("player-idle-timeout")]

            public int PlayerIdleTimeout
          VB: >-
            <ServerProperty("player-idle-timeout")>

            Public PlayerIdleTimeout As Integer
        return:
          type: System.Int32
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: player-idle-timeout
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.PreventProxyConnections
      commentId: F:IMS_Library.JavaServerConfiguration.PreventProxyConnections
      language: CSharp
      name:
        CSharp: PreventProxyConnections
        VB: PreventProxyConnections
      nameWithType:
        CSharp: JavaServerConfiguration.PreventProxyConnections
        VB: JavaServerConfiguration.PreventProxyConnections
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.PreventProxyConnections
        VB: IMS_Library.JavaServerConfiguration.PreventProxyConnections
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: PreventProxyConnections
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 74
      syntax:
        content:
          CSharp: >-
            [ServerProperty("prevent-proxy-connections")]

            public bool PreventProxyConnections
          VB: >-
            <ServerProperty("prevent-proxy-connections")>

            Public PreventProxyConnections As Boolean
        return:
          type: System.Boolean
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: prevent-proxy-connections
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.EnablePVP
      commentId: F:IMS_Library.JavaServerConfiguration.EnablePVP
      language: CSharp
      name:
        CSharp: EnablePVP
        VB: EnablePVP
      nameWithType:
        CSharp: JavaServerConfiguration.EnablePVP
        VB: JavaServerConfiguration.EnablePVP
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.EnablePVP
        VB: IMS_Library.JavaServerConfiguration.EnablePVP
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: EnablePVP
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 76
      syntax:
        content:
          CSharp: >-
            [ServerProperty("pvp")]

            public bool EnablePVP
          VB: >-
            <ServerProperty("pvp")>

            Public EnablePVP As Boolean
        return:
          type: System.Boolean
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: pvp
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.QueryPort
      commentId: F:IMS_Library.JavaServerConfiguration.QueryPort
      language: CSharp
      name:
        CSharp: QueryPort
        VB: QueryPort
      nameWithType:
        CSharp: JavaServerConfiguration.QueryPort
        VB: JavaServerConfiguration.QueryPort
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.QueryPort
        VB: IMS_Library.JavaServerConfiguration.QueryPort
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: QueryPort
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 78
      syntax:
        content:
          CSharp: >-
            [ServerProperty("query.port")]

            public WebPort QueryPort
          VB: >-
            <ServerProperty("query.port")>

            Public QueryPort As WebPort
        return:
          type: IMS_Library.WebPort
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: query.port
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.RCONPassword
      commentId: F:IMS_Library.JavaServerConfiguration.RCONPassword
      language: CSharp
      name:
        CSharp: RCONPassword
        VB: RCONPassword
      nameWithType:
        CSharp: JavaServerConfiguration.RCONPassword
        VB: JavaServerConfiguration.RCONPassword
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.RCONPassword
        VB: IMS_Library.JavaServerConfiguration.RCONPassword
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: RCONPassword
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 80
      syntax:
        content:
          CSharp: >-
            [ServerProperty("rcon.password")]

            public string RCONPassword
          VB: >-
            <ServerProperty("rcon.password")>

            Public RCONPassword As String
        return:
          type: System.String
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: rcon.password
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.RCONPort
      commentId: F:IMS_Library.JavaServerConfiguration.RCONPort
      language: CSharp
      name:
        CSharp: RCONPort
        VB: RCONPort
      nameWithType:
        CSharp: JavaServerConfiguration.RCONPort
        VB: JavaServerConfiguration.RCONPort
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.RCONPort
        VB: IMS_Library.JavaServerConfiguration.RCONPort
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: RCONPort
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 82
      syntax:
        content:
          CSharp: >-
            [ServerProperty("rcon.port")]

            public WebPort RCONPort
          VB: >-
            <ServerProperty("rcon.port")>

            Public RCONPort As WebPort
        return:
          type: IMS_Library.WebPort
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: rcon.port
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.ResourcePack
      commentId: F:IMS_Library.JavaServerConfiguration.ResourcePack
      language: CSharp
      name:
        CSharp: ResourcePack
        VB: ResourcePack
      nameWithType:
        CSharp: JavaServerConfiguration.ResourcePack
        VB: JavaServerConfiguration.ResourcePack
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.ResourcePack
        VB: IMS_Library.JavaServerConfiguration.ResourcePack
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ResourcePack
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 84
      syntax:
        content:
          CSharp: >-
            [ServerProperty("resource-pack")]

            public string ResourcePack
          VB: >-
            <ServerProperty("resource-pack")>

            Public ResourcePack As String
        return:
          type: System.String
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: resource-pack
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.ResourcePackSHA1
      commentId: F:IMS_Library.JavaServerConfiguration.ResourcePackSHA1
      language: CSharp
      name:
        CSharp: ResourcePackSHA1
        VB: ResourcePackSHA1
      nameWithType:
        CSharp: JavaServerConfiguration.ResourcePackSHA1
        VB: JavaServerConfiguration.ResourcePackSHA1
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.ResourcePackSHA1
        VB: IMS_Library.JavaServerConfiguration.ResourcePackSHA1
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ResourcePackSHA1
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 86
      syntax:
        content:
          CSharp: >-
            [ServerProperty("resource-pack-sha1")]

            public string ResourcePackSHA1
          VB: >-
            <ServerProperty("resource-pack-sha1")>

            Public ResourcePackSHA1 As String
        return:
          type: System.String
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: resource-pack-sha1
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.ServerIP
      commentId: F:IMS_Library.JavaServerConfiguration.ServerIP
      language: CSharp
      name:
        CSharp: ServerIP
        VB: ServerIP
      nameWithType:
        CSharp: JavaServerConfiguration.ServerIP
        VB: JavaServerConfiguration.ServerIP
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.ServerIP
        VB: IMS_Library.JavaServerConfiguration.ServerIP
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ServerIP
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 88
      syntax:
        content:
          CSharp: >-
            [ServerProperty("server-ip")]

            public string ServerIP
          VB: >-
            <ServerProperty("server-ip")>

            Public ServerIP As String
        return:
          type: System.String
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: server-ip
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.ServerPort
      commentId: F:IMS_Library.JavaServerConfiguration.ServerPort
      language: CSharp
      name:
        CSharp: ServerPort
        VB: ServerPort
      nameWithType:
        CSharp: JavaServerConfiguration.ServerPort
        VB: JavaServerConfiguration.ServerPort
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.ServerPort
        VB: IMS_Library.JavaServerConfiguration.ServerPort
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ServerPort
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 90
      syntax:
        content:
          CSharp: >-
            [ServerProperty("server-port")]

            public WebPort ServerPort
          VB: >-
            <ServerProperty("server-port")>

            Public ServerPort As WebPort
        return:
          type: IMS_Library.WebPort
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: server-port
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.SnooperEnabled
      commentId: F:IMS_Library.JavaServerConfiguration.SnooperEnabled
      language: CSharp
      name:
        CSharp: SnooperEnabled
        VB: SnooperEnabled
      nameWithType:
        CSharp: JavaServerConfiguration.SnooperEnabled
        VB: JavaServerConfiguration.SnooperEnabled
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.SnooperEnabled
        VB: IMS_Library.JavaServerConfiguration.SnooperEnabled
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: SnooperEnabled
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 92
      syntax:
        content:
          CSharp: >-
            [ServerProperty("snooper-enabled")]

            public bool SnooperEnabled
          VB: >-
            <ServerProperty("snooper-enabled")>

            Public SnooperEnabled As Boolean
        return:
          type: System.Boolean
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: snooper-enabled
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.SpawnAnimals
      commentId: F:IMS_Library.JavaServerConfiguration.SpawnAnimals
      language: CSharp
      name:
        CSharp: SpawnAnimals
        VB: SpawnAnimals
      nameWithType:
        CSharp: JavaServerConfiguration.SpawnAnimals
        VB: JavaServerConfiguration.SpawnAnimals
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.SpawnAnimals
        VB: IMS_Library.JavaServerConfiguration.SpawnAnimals
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: SpawnAnimals
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 94
      syntax:
        content:
          CSharp: >-
            [ServerProperty("spawn-animals")]

            public bool SpawnAnimals
          VB: >-
            <ServerProperty("spawn-animals")>

            Public SpawnAnimals As Boolean
        return:
          type: System.Boolean
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: spawn-animals
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.SpawnMonsters
      commentId: F:IMS_Library.JavaServerConfiguration.SpawnMonsters
      language: CSharp
      name:
        CSharp: SpawnMonsters
        VB: SpawnMonsters
      nameWithType:
        CSharp: JavaServerConfiguration.SpawnMonsters
        VB: JavaServerConfiguration.SpawnMonsters
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.SpawnMonsters
        VB: IMS_Library.JavaServerConfiguration.SpawnMonsters
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: SpawnMonsters
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 96
      syntax:
        content:
          CSharp: >-
            [ServerProperty("spawn-monsters")]

            public bool SpawnMonsters
          VB: >-
            <ServerProperty("spawn-monsters")>

            Public SpawnMonsters As Boolean
        return:
          type: System.Boolean
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: spawn-monsters
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.SpawnVillagers
      commentId: F:IMS_Library.JavaServerConfiguration.SpawnVillagers
      language: CSharp
      name:
        CSharp: SpawnVillagers
        VB: SpawnVillagers
      nameWithType:
        CSharp: JavaServerConfiguration.SpawnVillagers
        VB: JavaServerConfiguration.SpawnVillagers
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.SpawnVillagers
        VB: IMS_Library.JavaServerConfiguration.SpawnVillagers
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: SpawnVillagers
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 98
      syntax:
        content:
          CSharp: >-
            [ServerProperty("spawn-npcs")]

            public bool SpawnVillagers
          VB: >-
            <ServerProperty("spawn-npcs")>

            Public SpawnVillagers As Boolean
        return:
          type: System.Boolean
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: spawn-npcs
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.SpawnProtection
      commentId: F:IMS_Library.JavaServerConfiguration.SpawnProtection
      language: CSharp
      name:
        CSharp: SpawnProtection
        VB: SpawnProtection
      nameWithType:
        CSharp: JavaServerConfiguration.SpawnProtection
        VB: JavaServerConfiguration.SpawnProtection
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.SpawnProtection
        VB: IMS_Library.JavaServerConfiguration.SpawnProtection
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: SpawnProtection
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 100
      syntax:
        content:
          CSharp: >-
            [ServerProperty("spawn-protection")]

            public int SpawnProtection
          VB: >-
            <ServerProperty("spawn-protection")>

            Public SpawnProtection As Integer
        return:
          type: System.Int32
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: spawn-protection
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.UseLinuxNativeTransport
      commentId: F:IMS_Library.JavaServerConfiguration.UseLinuxNativeTransport
      language: CSharp
      name:
        CSharp: UseLinuxNativeTransport
        VB: UseLinuxNativeTransport
      nameWithType:
        CSharp: JavaServerConfiguration.UseLinuxNativeTransport
        VB: JavaServerConfiguration.UseLinuxNativeTransport
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.UseLinuxNativeTransport
        VB: IMS_Library.JavaServerConfiguration.UseLinuxNativeTransport
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: UseLinuxNativeTransport
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 102
      syntax:
        content:
          CSharp: >-
            [ServerProperty("use-native-transport")]

            public bool UseLinuxNativeTransport
          VB: >-
            <ServerProperty("use-native-transport")>

            Public UseLinuxNativeTransport As Boolean
        return:
          type: System.Boolean
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: use-native-transport
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.ViewDistance
      commentId: F:IMS_Library.JavaServerConfiguration.ViewDistance
      language: CSharp
      name:
        CSharp: ViewDistance
        VB: ViewDistance
      nameWithType:
        CSharp: JavaServerConfiguration.ViewDistance
        VB: JavaServerConfiguration.ViewDistance
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.ViewDistance
        VB: IMS_Library.JavaServerConfiguration.ViewDistance
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ViewDistance
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 104
      syntax:
        content:
          CSharp: >-
            [ServerProperty("view-distance")]

            public int ViewDistance
          VB: >-
            <ServerProperty("view-distance")>

            Public ViewDistance As Integer
        return:
          type: System.Int32
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: view-distance
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.UseWhitelist
      commentId: F:IMS_Library.JavaServerConfiguration.UseWhitelist
      language: CSharp
      name:
        CSharp: UseWhitelist
        VB: UseWhitelist
      nameWithType:
        CSharp: JavaServerConfiguration.UseWhitelist
        VB: JavaServerConfiguration.UseWhitelist
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.UseWhitelist
        VB: IMS_Library.JavaServerConfiguration.UseWhitelist
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: UseWhitelist
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 106
      syntax:
        content:
          CSharp: >-
            [ServerProperty("white-list")]

            public bool UseWhitelist
          VB: >-
            <ServerProperty("white-list")>

            Public UseWhitelist As Boolean
        return:
          type: System.Boolean
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: white-list
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.EnforceWhitelist
      commentId: F:IMS_Library.JavaServerConfiguration.EnforceWhitelist
      language: CSharp
      name:
        CSharp: EnforceWhitelist
        VB: EnforceWhitelist
      nameWithType:
        CSharp: JavaServerConfiguration.EnforceWhitelist
        VB: JavaServerConfiguration.EnforceWhitelist
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.EnforceWhitelist
        VB: IMS_Library.JavaServerConfiguration.EnforceWhitelist
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: EnforceWhitelist
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 108
      syntax:
        content:
          CSharp: >-
            [ServerProperty("enforce-whitelist")]

            public bool EnforceWhitelist
          VB: >-
            <ServerProperty("enforce-whitelist")>

            Public EnforceWhitelist As Boolean
        return:
          type: System.Boolean
      attributes:
      - type: IMS_Library.ServerProperty
        ctor: IMS_Library.ServerProperty.#ctor(System.String)
        arguments:
        - type: System.String
          value: enforce-whitelist
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.#ctor
      commentId: M:IMS_Library.JavaServerConfiguration.#ctor
      language: CSharp
      name:
        CSharp: JavaServerConfiguration()
        VB: JavaServerConfiguration()
      nameWithType:
        CSharp: JavaServerConfiguration.JavaServerConfiguration()
        VB: JavaServerConfiguration.JavaServerConfiguration()
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.JavaServerConfiguration()
        VB: IMS_Library.JavaServerConfiguration.JavaServerConfiguration()
      type: Constructor
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: .ctor
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 110
      syntax:
        content:
          CSharp: public JavaServerConfiguration()
          VB: Public Sub New
      overload: IMS_Library.JavaServerConfiguration.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.#ctor(System.Guid)
      commentId: M:IMS_Library.JavaServerConfiguration.#ctor(System.Guid)
      language: CSharp
      name:
        CSharp: JavaServerConfiguration(Guid)
        VB: JavaServerConfiguration(Guid)
      nameWithType:
        CSharp: JavaServerConfiguration.JavaServerConfiguration(Guid)
        VB: JavaServerConfiguration.JavaServerConfiguration(Guid)
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.JavaServerConfiguration(System.Guid)
        VB: IMS_Library.JavaServerConfiguration.JavaServerConfiguration(System.Guid)
      type: Constructor
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: .ctor
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 111
      syntax:
        content:
          CSharp: public JavaServerConfiguration(Guid id)
          VB: Public Sub New(id As Guid)
        parameters:
        - id: id
          type: System.Guid
      overload: IMS_Library.JavaServerConfiguration.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.JavaServerConfiguration.GetUsedPorts
      commentId: M:IMS_Library.JavaServerConfiguration.GetUsedPorts
      language: CSharp
      name:
        CSharp: GetUsedPorts()
        VB: GetUsedPorts()
      nameWithType:
        CSharp: JavaServerConfiguration.GetUsedPorts()
        VB: JavaServerConfiguration.GetUsedPorts()
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.GetUsedPorts()
        VB: IMS_Library.JavaServerConfiguration.GetUsedPorts()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetUsedPorts
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 113
      syntax:
        content:
          CSharp: public override int[] GetUsedPorts()
          VB: Public Overrides Function GetUsedPorts As Integer()
        return:
          type: System.Int32[]
      overload: IMS_Library.JavaServerConfiguration.GetUsedPorts*
      overridden: IMS_Library.ServerConfiguration.GetUsedPorts
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.JavaServerConfiguration.GetPortsToForward
      commentId: M:IMS_Library.JavaServerConfiguration.GetPortsToForward
      language: CSharp
      name:
        CSharp: GetPortsToForward()
        VB: GetPortsToForward()
      nameWithType:
        CSharp: JavaServerConfiguration.GetPortsToForward()
        VB: JavaServerConfiguration.GetPortsToForward()
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.GetPortsToForward()
        VB: IMS_Library.JavaServerConfiguration.GetPortsToForward()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetPortsToForward
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 128
      syntax:
        content:
          CSharp: public override int[] GetPortsToForward()
          VB: Public Overrides Function GetPortsToForward As Integer()
        return:
          type: System.Int32[]
      overload: IMS_Library.JavaServerConfiguration.GetPortsToForward*
      overridden: IMS_Library.ServerConfiguration.GetPortsToForward
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.JavaServerConfiguration.CreateServer
      commentId: M:IMS_Library.JavaServerConfiguration.CreateServer
      language: CSharp
      name:
        CSharp: CreateServer()
        VB: CreateServer()
      nameWithType:
        CSharp: JavaServerConfiguration.CreateServer()
        VB: JavaServerConfiguration.CreateServer()
      qualifiedName:
        CSharp: IMS_Library.JavaServerConfiguration.CreateServer()
        VB: IMS_Library.JavaServerConfiguration.CreateServer()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: CreateServer
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JavaServerConfiguration.cs
        startLine: 146
      syntax:
        content:
          CSharp: public override ServerProxy CreateServer()
          VB: Public Overrides Function CreateServer As ServerProxy
        return:
          type: IMS_Library.ServerProxy
      overload: IMS_Library.JavaServerConfiguration.CreateServer*
      overridden: IMS_Library.ServerConfiguration.CreateServer
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: IMS_Library.BanIPTag
    commentId: T:IMS_Library.BanIPTag
    language: CSharp
    name:
      CSharp: BanIPTag
      VB: BanIPTag
    nameWithType:
      CSharp: BanIPTag
      VB: BanIPTag
    qualifiedName:
      CSharp: IMS_Library.BanIPTag
      VB: IMS_Library.BanIPTag
    type: Struct
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: BanIPTag
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\BanIPTag.cs
      startLine: 8
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public struct BanIPTag
        VB: >-
          <Serializable>

          Public Structure BanIPTag
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: IMS_Library.BanIPTag.ip
      commentId: F:IMS_Library.BanIPTag.ip
      language: CSharp
      name:
        CSharp: ip
        VB: ip
      nameWithType:
        CSharp: BanIPTag.ip
        VB: BanIPTag.ip
      qualifiedName:
        CSharp: IMS_Library.BanIPTag.ip
        VB: IMS_Library.BanIPTag.ip
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ip
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\BanIPTag.cs
        startLine: 11
      syntax:
        content:
          CSharp: public string ip
          VB: Public ip As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.BanIPTag.created
      commentId: F:IMS_Library.BanIPTag.created
      language: CSharp
      name:
        CSharp: created
        VB: created
      nameWithType:
        CSharp: BanIPTag.created
        VB: BanIPTag.created
      qualifiedName:
        CSharp: IMS_Library.BanIPTag.created
        VB: IMS_Library.BanIPTag.created
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: created
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\BanIPTag.cs
        startLine: 12
      syntax:
        content:
          CSharp: public string created
          VB: Public created As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.BanIPTag.source
      commentId: F:IMS_Library.BanIPTag.source
      language: CSharp
      name:
        CSharp: source
        VB: source
      nameWithType:
        CSharp: BanIPTag.source
        VB: BanIPTag.source
      qualifiedName:
        CSharp: IMS_Library.BanIPTag.source
        VB: IMS_Library.BanIPTag.source
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: source
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\BanIPTag.cs
        startLine: 13
      syntax:
        content:
          CSharp: public string source
          VB: Public source As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.BanIPTag.expires
      commentId: F:IMS_Library.BanIPTag.expires
      language: CSharp
      name:
        CSharp: expires
        VB: expires
      nameWithType:
        CSharp: BanIPTag.expires
        VB: BanIPTag.expires
      qualifiedName:
        CSharp: IMS_Library.BanIPTag.expires
        VB: IMS_Library.BanIPTag.expires
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: expires
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\BanIPTag.cs
        startLine: 14
      syntax:
        content:
          CSharp: public string expires
          VB: Public expires As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.BanIPTag.reason
      commentId: F:IMS_Library.BanIPTag.reason
      language: CSharp
      name:
        CSharp: reason
        VB: reason
      nameWithType:
        CSharp: BanIPTag.reason
        VB: BanIPTag.reason
      qualifiedName:
        CSharp: IMS_Library.BanIPTag.reason
        VB: IMS_Library.BanIPTag.reason
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: reason
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\BanIPTag.cs
        startLine: 15
      syntax:
        content:
          CSharp: public string reason
          VB: Public reason As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: IMS_Library.BanTag
    commentId: T:IMS_Library.BanTag
    language: CSharp
    name:
      CSharp: BanTag
      VB: BanTag
    nameWithType:
      CSharp: BanTag
      VB: BanTag
    qualifiedName:
      CSharp: IMS_Library.BanTag
      VB: IMS_Library.BanTag
    type: Struct
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: BanTag
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\BanTag.cs
      startLine: 8
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public struct BanTag
        VB: >-
          <Serializable>

          Public Structure BanTag
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: IMS_Library.BanTag.uuid
      commentId: F:IMS_Library.BanTag.uuid
      language: CSharp
      name:
        CSharp: uuid
        VB: uuid
      nameWithType:
        CSharp: BanTag.uuid
        VB: BanTag.uuid
      qualifiedName:
        CSharp: IMS_Library.BanTag.uuid
        VB: IMS_Library.BanTag.uuid
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: uuid
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\BanTag.cs
        startLine: 11
      syntax:
        content:
          CSharp: public string uuid
          VB: Public uuid As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.BanTag.name
      commentId: F:IMS_Library.BanTag.name
      language: CSharp
      name:
        CSharp: name
        VB: name
      nameWithType:
        CSharp: BanTag.name
        VB: BanTag.name
      qualifiedName:
        CSharp: IMS_Library.BanTag.name
        VB: IMS_Library.BanTag.name
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: name
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\BanTag.cs
        startLine: 12
      syntax:
        content:
          CSharp: public string name
          VB: Public name As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.BanTag.created
      commentId: F:IMS_Library.BanTag.created
      language: CSharp
      name:
        CSharp: created
        VB: created
      nameWithType:
        CSharp: BanTag.created
        VB: BanTag.created
      qualifiedName:
        CSharp: IMS_Library.BanTag.created
        VB: IMS_Library.BanTag.created
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: created
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\BanTag.cs
        startLine: 13
      syntax:
        content:
          CSharp: public string created
          VB: Public created As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.BanTag.source
      commentId: F:IMS_Library.BanTag.source
      language: CSharp
      name:
        CSharp: source
        VB: source
      nameWithType:
        CSharp: BanTag.source
        VB: BanTag.source
      qualifiedName:
        CSharp: IMS_Library.BanTag.source
        VB: IMS_Library.BanTag.source
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: source
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\BanTag.cs
        startLine: 14
      syntax:
        content:
          CSharp: public string source
          VB: Public source As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.BanTag.expires
      commentId: F:IMS_Library.BanTag.expires
      language: CSharp
      name:
        CSharp: expires
        VB: expires
      nameWithType:
        CSharp: BanTag.expires
        VB: BanTag.expires
      qualifiedName:
        CSharp: IMS_Library.BanTag.expires
        VB: IMS_Library.BanTag.expires
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: expires
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\BanTag.cs
        startLine: 15
      syntax:
        content:
          CSharp: public string expires
          VB: Public expires As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.BanTag.reason
      commentId: F:IMS_Library.BanTag.reason
      language: CSharp
      name:
        CSharp: reason
        VB: reason
      nameWithType:
        CSharp: BanTag.reason
        VB: BanTag.reason
      qualifiedName:
        CSharp: IMS_Library.BanTag.reason
        VB: IMS_Library.BanTag.reason
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: reason
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\BanTag.cs
        startLine: 16
      syntax:
        content:
          CSharp: public string reason
          VB: Public reason As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: IMS_Library.BedrockOpTag
    commentId: T:IMS_Library.BedrockOpTag
    language: CSharp
    name:
      CSharp: BedrockOpTag
      VB: BedrockOpTag
    nameWithType:
      CSharp: BedrockOpTag
      VB: BedrockOpTag
    qualifiedName:
      CSharp: IMS_Library.BedrockOpTag
      VB: IMS_Library.BedrockOpTag
    type: Struct
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: BedrockOpTag
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\BedrockOpTag.cs
      startLine: 6
    syntax:
      content:
        CSharp: public struct BedrockOpTag
        VB: Public Structure BedrockOpTag
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: IMS_Library.BedrockOpTag.permission
      commentId: F:IMS_Library.BedrockOpTag.permission
      language: CSharp
      name:
        CSharp: permission
        VB: permission
      nameWithType:
        CSharp: BedrockOpTag.permission
        VB: BedrockOpTag.permission
      qualifiedName:
        CSharp: IMS_Library.BedrockOpTag.permission
        VB: IMS_Library.BedrockOpTag.permission
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: permission
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\BedrockOpTag.cs
        startLine: 8
      syntax:
        content:
          CSharp: public string permission
          VB: Public permission As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.BedrockOpTag.xuid
      commentId: F:IMS_Library.BedrockOpTag.xuid
      language: CSharp
      name:
        CSharp: xuid
        VB: xuid
      nameWithType:
        CSharp: BedrockOpTag.xuid
        VB: BedrockOpTag.xuid
      qualifiedName:
        CSharp: IMS_Library.BedrockOpTag.xuid
        VB: IMS_Library.BedrockOpTag.xuid
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: xuid
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\BedrockOpTag.cs
        startLine: 9
      syntax:
        content:
          CSharp: public string xuid
          VB: Public xuid As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: IMS_Library.BedrockWhitelistTag
    commentId: T:IMS_Library.BedrockWhitelistTag
    language: CSharp
    name:
      CSharp: BedrockWhitelistTag
      VB: BedrockWhitelistTag
    nameWithType:
      CSharp: BedrockWhitelistTag
      VB: BedrockWhitelistTag
    qualifiedName:
      CSharp: IMS_Library.BedrockWhitelistTag
      VB: IMS_Library.BedrockWhitelistTag
    type: Struct
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: BedrockWhitelistTag
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\BedrockWhitelistTag.cs
      startLine: 6
    syntax:
      content:
        CSharp: public struct BedrockWhitelistTag
        VB: Public Structure BedrockWhitelistTag
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: IMS_Library.BedrockWhitelistTag.ignoresPlayerLimit
      commentId: F:IMS_Library.BedrockWhitelistTag.ignoresPlayerLimit
      language: CSharp
      name:
        CSharp: ignoresPlayerLimit
        VB: ignoresPlayerLimit
      nameWithType:
        CSharp: BedrockWhitelistTag.ignoresPlayerLimit
        VB: BedrockWhitelistTag.ignoresPlayerLimit
      qualifiedName:
        CSharp: IMS_Library.BedrockWhitelistTag.ignoresPlayerLimit
        VB: IMS_Library.BedrockWhitelistTag.ignoresPlayerLimit
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ignoresPlayerLimit
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\BedrockWhitelistTag.cs
        startLine: 8
      syntax:
        content:
          CSharp: public bool ignoresPlayerLimit
          VB: Public ignoresPlayerLimit As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.BedrockWhitelistTag.name
      commentId: F:IMS_Library.BedrockWhitelistTag.name
      language: CSharp
      name:
        CSharp: name
        VB: name
      nameWithType:
        CSharp: BedrockWhitelistTag.name
        VB: BedrockWhitelistTag.name
      qualifiedName:
        CSharp: IMS_Library.BedrockWhitelistTag.name
        VB: IMS_Library.BedrockWhitelistTag.name
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: name
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\BedrockWhitelistTag.cs
        startLine: 9
      syntax:
        content:
          CSharp: public string name
          VB: Public name As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: IMS_Library.LastestVersionsTag
    commentId: T:IMS_Library.LastestVersionsTag
    language: CSharp
    name:
      CSharp: LastestVersionsTag
      VB: LastestVersionsTag
    nameWithType:
      CSharp: LastestVersionsTag
      VB: LastestVersionsTag
    qualifiedName:
      CSharp: IMS_Library.LastestVersionsTag
      VB: IMS_Library.LastestVersionsTag
    type: Struct
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: LastestVersionsTag
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\LastestVersionsTag.cs
      startLine: 2
    syntax:
      content:
        CSharp: public struct LastestVersionsTag
        VB: Public Structure LastestVersionsTag
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: IMS_Library.LastestVersionsTag.release
      commentId: F:IMS_Library.LastestVersionsTag.release
      language: CSharp
      name:
        CSharp: release
        VB: release
      nameWithType:
        CSharp: LastestVersionsTag.release
        VB: LastestVersionsTag.release
      qualifiedName:
        CSharp: IMS_Library.LastestVersionsTag.release
        VB: IMS_Library.LastestVersionsTag.release
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: release
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\LastestVersionsTag.cs
        startLine: 4
      syntax:
        content:
          CSharp: public string release
          VB: Public release As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.LastestVersionsTag.snapshot
      commentId: F:IMS_Library.LastestVersionsTag.snapshot
      language: CSharp
      name:
        CSharp: snapshot
        VB: snapshot
      nameWithType:
        CSharp: LastestVersionsTag.snapshot
        VB: LastestVersionsTag.snapshot
      qualifiedName:
        CSharp: IMS_Library.LastestVersionsTag.snapshot
        VB: IMS_Library.LastestVersionsTag.snapshot
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: snapshot
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\LastestVersionsTag.cs
        startLine: 5
      syntax:
        content:
          CSharp: public string snapshot
          VB: Public snapshot As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: IMS_Library.NameTimelineTag
    commentId: T:IMS_Library.NameTimelineTag
    language: CSharp
    name:
      CSharp: NameTimelineTag
      VB: NameTimelineTag
    nameWithType:
      CSharp: NameTimelineTag
      VB: NameTimelineTag
    qualifiedName:
      CSharp: IMS_Library.NameTimelineTag
      VB: IMS_Library.NameTimelineTag
    type: Struct
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: NameTimelineTag
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\NameTimelineTag.cs
      startLine: 8
    syntax:
      content:
        CSharp: public struct NameTimelineTag
        VB: Public Structure NameTimelineTag
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: IMS_Library.NameTimelineTag.name
      commentId: F:IMS_Library.NameTimelineTag.name
      language: CSharp
      name:
        CSharp: name
        VB: name
      nameWithType:
        CSharp: NameTimelineTag.name
        VB: NameTimelineTag.name
      qualifiedName:
        CSharp: IMS_Library.NameTimelineTag.name
        VB: IMS_Library.NameTimelineTag.name
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: name
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\NameTimelineTag.cs
        startLine: 10
      syntax:
        content:
          CSharp: public string name
          VB: Public name As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.NameTimelineTag.changedToAt
      commentId: F:IMS_Library.NameTimelineTag.changedToAt
      language: CSharp
      name:
        CSharp: changedToAt
        VB: changedToAt
      nameWithType:
        CSharp: NameTimelineTag.changedToAt
        VB: NameTimelineTag.changedToAt
      qualifiedName:
        CSharp: IMS_Library.NameTimelineTag.changedToAt
        VB: IMS_Library.NameTimelineTag.changedToAt
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: changedToAt
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\NameTimelineTag.cs
        startLine: 11
      syntax:
        content:
          CSharp: public long changedToAt
          VB: Public changedToAt As Long
        return:
          type: System.Int64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: IMS_Library.OpTag
    commentId: T:IMS_Library.OpTag
    language: CSharp
    name:
      CSharp: OpTag
      VB: OpTag
    nameWithType:
      CSharp: OpTag
      VB: OpTag
    qualifiedName:
      CSharp: IMS_Library.OpTag
      VB: IMS_Library.OpTag
    type: Struct
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: OpTag
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\OpTag.cs
      startLine: 8
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public struct OpTag
        VB: >-
          <Serializable>

          Public Structure OpTag
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: IMS_Library.OpTag.uuid
      commentId: F:IMS_Library.OpTag.uuid
      language: CSharp
      name:
        CSharp: uuid
        VB: uuid
      nameWithType:
        CSharp: OpTag.uuid
        VB: OpTag.uuid
      qualifiedName:
        CSharp: IMS_Library.OpTag.uuid
        VB: IMS_Library.OpTag.uuid
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: uuid
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\OpTag.cs
        startLine: 11
      syntax:
        content:
          CSharp: public string uuid
          VB: Public uuid As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.OpTag.name
      commentId: F:IMS_Library.OpTag.name
      language: CSharp
      name:
        CSharp: name
        VB: name
      nameWithType:
        CSharp: OpTag.name
        VB: OpTag.name
      qualifiedName:
        CSharp: IMS_Library.OpTag.name
        VB: IMS_Library.OpTag.name
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: name
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\OpTag.cs
        startLine: 12
      syntax:
        content:
          CSharp: public string name
          VB: Public name As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.OpTag.level
      commentId: F:IMS_Library.OpTag.level
      language: CSharp
      name:
        CSharp: level
        VB: level
      nameWithType:
        CSharp: OpTag.level
        VB: OpTag.level
      qualifiedName:
        CSharp: IMS_Library.OpTag.level
        VB: IMS_Library.OpTag.level
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: level
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\OpTag.cs
        startLine: 13
      syntax:
        content:
          CSharp: public int level
          VB: Public level As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.OpTag.bypassesPlayerLimit
      commentId: F:IMS_Library.OpTag.bypassesPlayerLimit
      language: CSharp
      name:
        CSharp: bypassesPlayerLimit
        VB: bypassesPlayerLimit
      nameWithType:
        CSharp: OpTag.bypassesPlayerLimit
        VB: OpTag.bypassesPlayerLimit
      qualifiedName:
        CSharp: IMS_Library.OpTag.bypassesPlayerLimit
        VB: IMS_Library.OpTag.bypassesPlayerLimit
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: bypassesPlayerLimit
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\OpTag.cs
        startLine: 14
      syntax:
        content:
          CSharp: public bool bypassesPlayerLimit
          VB: Public bypassesPlayerLimit As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: IMS_Library.PlayerIDPairTag
    commentId: T:IMS_Library.PlayerIDPairTag
    language: CSharp
    name:
      CSharp: PlayerIDPairTag
      VB: PlayerIDPairTag
    nameWithType:
      CSharp: PlayerIDPairTag
      VB: PlayerIDPairTag
    qualifiedName:
      CSharp: IMS_Library.PlayerIDPairTag
      VB: IMS_Library.PlayerIDPairTag
    type: Struct
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: PlayerIDPairTag
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\PlayerIDPairTag.cs
      startLine: 8
    syntax:
      content:
        CSharp: public struct PlayerIDPairTag
        VB: Public Structure PlayerIDPairTag
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: IMS_Library.PlayerIDPairTag.name
      commentId: F:IMS_Library.PlayerIDPairTag.name
      language: CSharp
      name:
        CSharp: name
        VB: name
      nameWithType:
        CSharp: PlayerIDPairTag.name
        VB: PlayerIDPairTag.name
      qualifiedName:
        CSharp: IMS_Library.PlayerIDPairTag.name
        VB: IMS_Library.PlayerIDPairTag.name
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: name
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\PlayerIDPairTag.cs
        startLine: 10
      syntax:
        content:
          CSharp: public string name
          VB: Public name As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.PlayerIDPairTag.id
      commentId: F:IMS_Library.PlayerIDPairTag.id
      language: CSharp
      name:
        CSharp: id
        VB: id
      nameWithType:
        CSharp: PlayerIDPairTag.id
        VB: PlayerIDPairTag.id
      qualifiedName:
        CSharp: IMS_Library.PlayerIDPairTag.id
        VB: IMS_Library.PlayerIDPairTag.id
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: id
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\PlayerIDPairTag.cs
        startLine: 11
      syntax:
        content:
          CSharp: public string id
          VB: Public id As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: IMS_Library.PlayerProfilePropertyTag
    commentId: T:IMS_Library.PlayerProfilePropertyTag
    language: CSharp
    name:
      CSharp: PlayerProfilePropertyTag
      VB: PlayerProfilePropertyTag
    nameWithType:
      CSharp: PlayerProfilePropertyTag
      VB: PlayerProfilePropertyTag
    qualifiedName:
      CSharp: IMS_Library.PlayerProfilePropertyTag
      VB: IMS_Library.PlayerProfilePropertyTag
    type: Struct
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: PlayerProfilePropertyTag
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\PlayerProfilePropertyTag.cs
      startLine: 9
    syntax:
      content:
        CSharp: public struct PlayerProfilePropertyTag
        VB: Public Structure PlayerProfilePropertyTag
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: IMS_Library.PlayerProfilePropertyTag.name
      commentId: F:IMS_Library.PlayerProfilePropertyTag.name
      language: CSharp
      name:
        CSharp: name
        VB: name
      nameWithType:
        CSharp: PlayerProfilePropertyTag.name
        VB: PlayerProfilePropertyTag.name
      qualifiedName:
        CSharp: IMS_Library.PlayerProfilePropertyTag.name
        VB: IMS_Library.PlayerProfilePropertyTag.name
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: name
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\PlayerProfilePropertyTag.cs
        startLine: 11
      syntax:
        content:
          CSharp: public string name
          VB: Public name As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.PlayerProfilePropertyTag.value
      commentId: F:IMS_Library.PlayerProfilePropertyTag.value
      language: CSharp
      name:
        CSharp: value
        VB: value
      nameWithType:
        CSharp: PlayerProfilePropertyTag.value
        VB: PlayerProfilePropertyTag.value
      qualifiedName:
        CSharp: IMS_Library.PlayerProfilePropertyTag.value
        VB: IMS_Library.PlayerProfilePropertyTag.value
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: value
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\PlayerProfilePropertyTag.cs
        startLine: 12
      syntax:
        content:
          CSharp: public string value
          VB: Public value As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.PlayerProfilePropertyTag.GetDecodedValueTag
      commentId: M:IMS_Library.PlayerProfilePropertyTag.GetDecodedValueTag
      language: CSharp
      name:
        CSharp: GetDecodedValueTag()
        VB: GetDecodedValueTag()
      nameWithType:
        CSharp: PlayerProfilePropertyTag.GetDecodedValueTag()
        VB: PlayerProfilePropertyTag.GetDecodedValueTag()
      qualifiedName:
        CSharp: IMS_Library.PlayerProfilePropertyTag.GetDecodedValueTag()
        VB: IMS_Library.PlayerProfilePropertyTag.GetDecodedValueTag()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetDecodedValueTag
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\PlayerProfilePropertyTag.cs
        startLine: 14
      syntax:
        content:
          CSharp: public PlayerProfileValueTag GetDecodedValueTag()
          VB: Public Function GetDecodedValueTag As PlayerProfileValueTag
        return:
          type: IMS_Library.PlayerProfileValueTag
      overload: IMS_Library.PlayerProfilePropertyTag.GetDecodedValueTag*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: IMS_Library.PlayerProfileTag
    commentId: T:IMS_Library.PlayerProfileTag
    language: CSharp
    name:
      CSharp: PlayerProfileTag
      VB: PlayerProfileTag
    nameWithType:
      CSharp: PlayerProfileTag
      VB: PlayerProfileTag
    qualifiedName:
      CSharp: IMS_Library.PlayerProfileTag
      VB: IMS_Library.PlayerProfileTag
    type: Struct
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: PlayerProfileTag
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\PlayerProfileTag.cs
      startLine: 8
    syntax:
      content:
        CSharp: public struct PlayerProfileTag
        VB: Public Structure PlayerProfileTag
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: IMS_Library.PlayerProfileTag.id
      commentId: F:IMS_Library.PlayerProfileTag.id
      language: CSharp
      name:
        CSharp: id
        VB: id
      nameWithType:
        CSharp: PlayerProfileTag.id
        VB: PlayerProfileTag.id
      qualifiedName:
        CSharp: IMS_Library.PlayerProfileTag.id
        VB: IMS_Library.PlayerProfileTag.id
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: id
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\PlayerProfileTag.cs
        startLine: 10
      syntax:
        content:
          CSharp: public string id
          VB: Public id As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.PlayerProfileTag.name
      commentId: F:IMS_Library.PlayerProfileTag.name
      language: CSharp
      name:
        CSharp: name
        VB: name
      nameWithType:
        CSharp: PlayerProfileTag.name
        VB: PlayerProfileTag.name
      qualifiedName:
        CSharp: IMS_Library.PlayerProfileTag.name
        VB: IMS_Library.PlayerProfileTag.name
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: name
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\PlayerProfileTag.cs
        startLine: 11
      syntax:
        content:
          CSharp: public string name
          VB: Public name As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.PlayerProfileTag.properties
      commentId: F:IMS_Library.PlayerProfileTag.properties
      language: CSharp
      name:
        CSharp: properties
        VB: properties
      nameWithType:
        CSharp: PlayerProfileTag.properties
        VB: PlayerProfileTag.properties
      qualifiedName:
        CSharp: IMS_Library.PlayerProfileTag.properties
        VB: IMS_Library.PlayerProfileTag.properties
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: properties
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\PlayerProfileTag.cs
        startLine: 12
      syntax:
        content:
          CSharp: public PlayerProfilePropertyTag[] properties
          VB: Public properties As PlayerProfilePropertyTag()
        return:
          type: IMS_Library.PlayerProfilePropertyTag[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: IMS_Library.PlayerProfileTextureDataTag
    commentId: T:IMS_Library.PlayerProfileTextureDataTag
    language: CSharp
    name:
      CSharp: PlayerProfileTextureDataTag
      VB: PlayerProfileTextureDataTag
    nameWithType:
      CSharp: PlayerProfileTextureDataTag
      VB: PlayerProfileTextureDataTag
    qualifiedName:
      CSharp: IMS_Library.PlayerProfileTextureDataTag
      VB: IMS_Library.PlayerProfileTextureDataTag
    type: Struct
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: PlayerProfileTextureDataTag
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\PlayerProfileTextureDataTag.cs
      startLine: 8
    syntax:
      content:
        CSharp: public struct PlayerProfileTextureDataTag
        VB: Public Structure PlayerProfileTextureDataTag
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: IMS_Library.PlayerProfileTextureDataTag.SKIN
      commentId: F:IMS_Library.PlayerProfileTextureDataTag.SKIN
      language: CSharp
      name:
        CSharp: SKIN
        VB: SKIN
      nameWithType:
        CSharp: PlayerProfileTextureDataTag.SKIN
        VB: PlayerProfileTextureDataTag.SKIN
      qualifiedName:
        CSharp: IMS_Library.PlayerProfileTextureDataTag.SKIN
        VB: IMS_Library.PlayerProfileTextureDataTag.SKIN
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: SKIN
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\PlayerProfileTextureDataTag.cs
        startLine: 10
      syntax:
        content:
          CSharp: public PlayerProfileURLTag SKIN
          VB: Public SKIN As PlayerProfileURLTag
        return:
          type: IMS_Library.PlayerProfileURLTag
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.PlayerProfileTextureDataTag.CAPE
      commentId: F:IMS_Library.PlayerProfileTextureDataTag.CAPE
      language: CSharp
      name:
        CSharp: CAPE
        VB: CAPE
      nameWithType:
        CSharp: PlayerProfileTextureDataTag.CAPE
        VB: PlayerProfileTextureDataTag.CAPE
      qualifiedName:
        CSharp: IMS_Library.PlayerProfileTextureDataTag.CAPE
        VB: IMS_Library.PlayerProfileTextureDataTag.CAPE
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: CAPE
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\PlayerProfileTextureDataTag.cs
        startLine: 11
      syntax:
        content:
          CSharp: public PlayerProfileURLTag CAPE
          VB: Public CAPE As PlayerProfileURLTag
        return:
          type: IMS_Library.PlayerProfileURLTag
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: IMS_Library.PlayerProfileURLTag
    commentId: T:IMS_Library.PlayerProfileURLTag
    language: CSharp
    name:
      CSharp: PlayerProfileURLTag
      VB: PlayerProfileURLTag
    nameWithType:
      CSharp: PlayerProfileURLTag
      VB: PlayerProfileURLTag
    qualifiedName:
      CSharp: IMS_Library.PlayerProfileURLTag
      VB: IMS_Library.PlayerProfileURLTag
    type: Struct
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: PlayerProfileURLTag
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\PlayerProfileURLTag.cs
      startLine: 8
    syntax:
      content:
        CSharp: public struct PlayerProfileURLTag
        VB: Public Structure PlayerProfileURLTag
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: IMS_Library.PlayerProfileURLTag.url
      commentId: F:IMS_Library.PlayerProfileURLTag.url
      language: CSharp
      name:
        CSharp: url
        VB: url
      nameWithType:
        CSharp: PlayerProfileURLTag.url
        VB: PlayerProfileURLTag.url
      qualifiedName:
        CSharp: IMS_Library.PlayerProfileURLTag.url
        VB: IMS_Library.PlayerProfileURLTag.url
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: url
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\PlayerProfileURLTag.cs
        startLine: 10
      syntax:
        content:
          CSharp: public string url
          VB: Public url As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: IMS_Library.PlayerProfileValueTag
    commentId: T:IMS_Library.PlayerProfileValueTag
    language: CSharp
    name:
      CSharp: PlayerProfileValueTag
      VB: PlayerProfileValueTag
    nameWithType:
      CSharp: PlayerProfileValueTag
      VB: PlayerProfileValueTag
    qualifiedName:
      CSharp: IMS_Library.PlayerProfileValueTag
      VB: IMS_Library.PlayerProfileValueTag
    type: Struct
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: PlayerProfileValueTag
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\PlayerProfileValueTag.cs
      startLine: 8
    syntax:
      content:
        CSharp: public struct PlayerProfileValueTag
        VB: Public Structure PlayerProfileValueTag
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: IMS_Library.PlayerProfileValueTag.timestamp
      commentId: F:IMS_Library.PlayerProfileValueTag.timestamp
      language: CSharp
      name:
        CSharp: timestamp
        VB: timestamp
      nameWithType:
        CSharp: PlayerProfileValueTag.timestamp
        VB: PlayerProfileValueTag.timestamp
      qualifiedName:
        CSharp: IMS_Library.PlayerProfileValueTag.timestamp
        VB: IMS_Library.PlayerProfileValueTag.timestamp
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: timestamp
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\PlayerProfileValueTag.cs
        startLine: 10
      syntax:
        content:
          CSharp: public long timestamp
          VB: Public timestamp As Long
        return:
          type: System.Int64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.PlayerProfileValueTag.profileId
      commentId: F:IMS_Library.PlayerProfileValueTag.profileId
      language: CSharp
      name:
        CSharp: profileId
        VB: profileId
      nameWithType:
        CSharp: PlayerProfileValueTag.profileId
        VB: PlayerProfileValueTag.profileId
      qualifiedName:
        CSharp: IMS_Library.PlayerProfileValueTag.profileId
        VB: IMS_Library.PlayerProfileValueTag.profileId
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: profileId
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\PlayerProfileValueTag.cs
        startLine: 11
      syntax:
        content:
          CSharp: public string profileId
          VB: Public profileId As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.PlayerProfileValueTag.profileName
      commentId: F:IMS_Library.PlayerProfileValueTag.profileName
      language: CSharp
      name:
        CSharp: profileName
        VB: profileName
      nameWithType:
        CSharp: PlayerProfileValueTag.profileName
        VB: PlayerProfileValueTag.profileName
      qualifiedName:
        CSharp: IMS_Library.PlayerProfileValueTag.profileName
        VB: IMS_Library.PlayerProfileValueTag.profileName
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: profileName
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\PlayerProfileValueTag.cs
        startLine: 12
      syntax:
        content:
          CSharp: public string profileName
          VB: Public profileName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.PlayerProfileValueTag.textures
      commentId: F:IMS_Library.PlayerProfileValueTag.textures
      language: CSharp
      name:
        CSharp: textures
        VB: textures
      nameWithType:
        CSharp: PlayerProfileValueTag.textures
        VB: PlayerProfileValueTag.textures
      qualifiedName:
        CSharp: IMS_Library.PlayerProfileValueTag.textures
        VB: IMS_Library.PlayerProfileValueTag.textures
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: textures
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\PlayerProfileValueTag.cs
        startLine: 13
      syntax:
        content:
          CSharp: public PlayerProfileTextureDataTag textures
          VB: Public textures As PlayerProfileTextureDataTag
        return:
          type: IMS_Library.PlayerProfileTextureDataTag
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: IMS_Library.ServerDownloadTag
    commentId: T:IMS_Library.ServerDownloadTag
    language: CSharp
    name:
      CSharp: ServerDownloadTag
      VB: ServerDownloadTag
    nameWithType:
      CSharp: ServerDownloadTag
      VB: ServerDownloadTag
    qualifiedName:
      CSharp: IMS_Library.ServerDownloadTag
      VB: IMS_Library.ServerDownloadTag
    type: Struct
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: ServerDownloadTag
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\ServerDownloadTag.cs
      startLine: 2
    syntax:
      content:
        CSharp: public struct ServerDownloadTag
        VB: Public Structure ServerDownloadTag
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: IMS_Library.ServerDownloadTag.url
      commentId: F:IMS_Library.ServerDownloadTag.url
      language: CSharp
      name:
        CSharp: url
        VB: url
      nameWithType:
        CSharp: ServerDownloadTag.url
        VB: ServerDownloadTag.url
      qualifiedName:
        CSharp: IMS_Library.ServerDownloadTag.url
        VB: IMS_Library.ServerDownloadTag.url
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: url
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\ServerDownloadTag.cs
        startLine: 4
      syntax:
        content:
          CSharp: public string url
          VB: Public url As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: IMS_Library.VersionDataTag
    commentId: T:IMS_Library.VersionDataTag
    language: CSharp
    name:
      CSharp: VersionDataTag
      VB: VersionDataTag
    nameWithType:
      CSharp: VersionDataTag
      VB: VersionDataTag
    qualifiedName:
      CSharp: IMS_Library.VersionDataTag
      VB: IMS_Library.VersionDataTag
    type: Struct
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: VersionDataTag
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\VersionDataTag.cs
      startLine: 6
    syntax:
      content:
        CSharp: public struct VersionDataTag
        VB: Public Structure VersionDataTag
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: IMS_Library.VersionDataTag.downloads
      commentId: F:IMS_Library.VersionDataTag.downloads
      language: CSharp
      name:
        CSharp: downloads
        VB: downloads
      nameWithType:
        CSharp: VersionDataTag.downloads
        VB: VersionDataTag.downloads
      qualifiedName:
        CSharp: IMS_Library.VersionDataTag.downloads
        VB: IMS_Library.VersionDataTag.downloads
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: downloads
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\VersionDataTag.cs
        startLine: 8
      syntax:
        content:
          CSharp: public VersionDownloadTag downloads
          VB: Public downloads As VersionDownloadTag
        return:
          type: IMS_Library.VersionDownloadTag
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.VersionDataTag.releaseTime
      commentId: F:IMS_Library.VersionDataTag.releaseTime
      language: CSharp
      name:
        CSharp: releaseTime
        VB: releaseTime
      nameWithType:
        CSharp: VersionDataTag.releaseTime
        VB: VersionDataTag.releaseTime
      qualifiedName:
        CSharp: IMS_Library.VersionDataTag.releaseTime
        VB: IMS_Library.VersionDataTag.releaseTime
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: releaseTime
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\VersionDataTag.cs
        startLine: 9
      syntax:
        content:
          CSharp: public string releaseTime
          VB: Public releaseTime As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.VersionDataTag.type
      commentId: F:IMS_Library.VersionDataTag.type
      language: CSharp
      name:
        CSharp: type
        VB: type
      nameWithType:
        CSharp: VersionDataTag.type
        VB: VersionDataTag.type
      qualifiedName:
        CSharp: IMS_Library.VersionDataTag.type
        VB: IMS_Library.VersionDataTag.type
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: type
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\VersionDataTag.cs
        startLine: 10
      syntax:
        content:
          CSharp: public string type
          VB: Public type As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: IMS_Library.VersionDownloadTag
    commentId: T:IMS_Library.VersionDownloadTag
    language: CSharp
    name:
      CSharp: VersionDownloadTag
      VB: VersionDownloadTag
    nameWithType:
      CSharp: VersionDownloadTag
      VB: VersionDownloadTag
    qualifiedName:
      CSharp: IMS_Library.VersionDownloadTag
      VB: IMS_Library.VersionDownloadTag
    type: Struct
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: VersionDownloadTag
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\VersionDownloadTag.cs
      startLine: 2
    syntax:
      content:
        CSharp: public struct VersionDownloadTag
        VB: Public Structure VersionDownloadTag
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: IMS_Library.VersionDownloadTag.server
      commentId: F:IMS_Library.VersionDownloadTag.server
      language: CSharp
      name:
        CSharp: server
        VB: server
      nameWithType:
        CSharp: VersionDownloadTag.server
        VB: VersionDownloadTag.server
      qualifiedName:
        CSharp: IMS_Library.VersionDownloadTag.server
        VB: IMS_Library.VersionDownloadTag.server
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: server
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\VersionDownloadTag.cs
        startLine: 4
      syntax:
        content:
          CSharp: public ServerDownloadTag server
          VB: Public server As ServerDownloadTag
        return:
          type: IMS_Library.ServerDownloadTag
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: IMS_Library.VersionInformationTag
    commentId: T:IMS_Library.VersionInformationTag
    language: CSharp
    name:
      CSharp: VersionInformationTag
      VB: VersionInformationTag
    nameWithType:
      CSharp: VersionInformationTag
      VB: VersionInformationTag
    qualifiedName:
      CSharp: IMS_Library.VersionInformationTag
      VB: IMS_Library.VersionInformationTag
    type: Struct
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: VersionInformationTag
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\VersionInformationTag.cs
      startLine: 6
    syntax:
      content:
        CSharp: public struct VersionInformationTag
        VB: Public Structure VersionInformationTag
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: IMS_Library.VersionInformationTag.latest
      commentId: F:IMS_Library.VersionInformationTag.latest
      language: CSharp
      name:
        CSharp: latest
        VB: latest
      nameWithType:
        CSharp: VersionInformationTag.latest
        VB: VersionInformationTag.latest
      qualifiedName:
        CSharp: IMS_Library.VersionInformationTag.latest
        VB: IMS_Library.VersionInformationTag.latest
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: latest
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\VersionInformationTag.cs
        startLine: 8
      syntax:
        content:
          CSharp: public LastestVersionsTag latest
          VB: Public latest As LastestVersionsTag
        return:
          type: IMS_Library.LastestVersionsTag
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.VersionInformationTag.versions
      commentId: F:IMS_Library.VersionInformationTag.versions
      language: CSharp
      name:
        CSharp: versions
        VB: versions
      nameWithType:
        CSharp: VersionInformationTag.versions
        VB: VersionInformationTag.versions
      qualifiedName:
        CSharp: IMS_Library.VersionInformationTag.versions
        VB: IMS_Library.VersionInformationTag.versions
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: versions
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\VersionInformationTag.cs
        startLine: 9
      syntax:
        content:
          CSharp: public VersionMetadataTag[] versions
          VB: Public versions As VersionMetadataTag()
        return:
          type: IMS_Library.VersionMetadataTag[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: IMS_Library.VersionMetadataTag
    commentId: T:IMS_Library.VersionMetadataTag
    language: CSharp
    name:
      CSharp: VersionMetadataTag
      VB: VersionMetadataTag
    nameWithType:
      CSharp: VersionMetadataTag
      VB: VersionMetadataTag
    qualifiedName:
      CSharp: IMS_Library.VersionMetadataTag
      VB: IMS_Library.VersionMetadataTag
    type: Struct
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: VersionMetadataTag
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\VersionMetadataTag.cs
      startLine: 2
    syntax:
      content:
        CSharp: public struct VersionMetadataTag
        VB: Public Structure VersionMetadataTag
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: IMS_Library.VersionMetadataTag.id
      commentId: F:IMS_Library.VersionMetadataTag.id
      language: CSharp
      name:
        CSharp: id
        VB: id
      nameWithType:
        CSharp: VersionMetadataTag.id
        VB: VersionMetadataTag.id
      qualifiedName:
        CSharp: IMS_Library.VersionMetadataTag.id
        VB: IMS_Library.VersionMetadataTag.id
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: id
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\VersionMetadataTag.cs
        startLine: 4
      syntax:
        content:
          CSharp: public string id
          VB: Public id As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.VersionMetadataTag.type
      commentId: F:IMS_Library.VersionMetadataTag.type
      language: CSharp
      name:
        CSharp: type
        VB: type
      nameWithType:
        CSharp: VersionMetadataTag.type
        VB: VersionMetadataTag.type
      qualifiedName:
        CSharp: IMS_Library.VersionMetadataTag.type
        VB: IMS_Library.VersionMetadataTag.type
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: type
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\VersionMetadataTag.cs
        startLine: 5
      syntax:
        content:
          CSharp: public string type
          VB: Public type As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.VersionMetadataTag.url
      commentId: F:IMS_Library.VersionMetadataTag.url
      language: CSharp
      name:
        CSharp: url
        VB: url
      nameWithType:
        CSharp: VersionMetadataTag.url
        VB: VersionMetadataTag.url
      qualifiedName:
        CSharp: IMS_Library.VersionMetadataTag.url
        VB: IMS_Library.VersionMetadataTag.url
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: url
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\VersionMetadataTag.cs
        startLine: 6
      syntax:
        content:
          CSharp: public string url
          VB: Public url As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.VersionMetadataTag.time
      commentId: F:IMS_Library.VersionMetadataTag.time
      language: CSharp
      name:
        CSharp: time
        VB: time
      nameWithType:
        CSharp: VersionMetadataTag.time
        VB: VersionMetadataTag.time
      qualifiedName:
        CSharp: IMS_Library.VersionMetadataTag.time
        VB: IMS_Library.VersionMetadataTag.time
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: time
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\VersionMetadataTag.cs
        startLine: 7
      syntax:
        content:
          CSharp: public string time
          VB: Public time As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.VersionMetadataTag.releaseTime
      commentId: F:IMS_Library.VersionMetadataTag.releaseTime
      language: CSharp
      name:
        CSharp: releaseTime
        VB: releaseTime
      nameWithType:
        CSharp: VersionMetadataTag.releaseTime
        VB: VersionMetadataTag.releaseTime
      qualifiedName:
        CSharp: IMS_Library.VersionMetadataTag.releaseTime
        VB: IMS_Library.VersionMetadataTag.releaseTime
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: releaseTime
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\VersionMetadataTag.cs
        startLine: 8
      syntax:
        content:
          CSharp: public string releaseTime
          VB: Public releaseTime As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: IMS_Library.WhitelistTag
    commentId: T:IMS_Library.WhitelistTag
    language: CSharp
    name:
      CSharp: WhitelistTag
      VB: WhitelistTag
    nameWithType:
      CSharp: WhitelistTag
      VB: WhitelistTag
    qualifiedName:
      CSharp: IMS_Library.WhitelistTag
      VB: IMS_Library.WhitelistTag
    type: Struct
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: WhitelistTag
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\WhitelistTag.cs
      startLine: 8
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public struct WhitelistTag
        VB: >-
          <Serializable>

          Public Structure WhitelistTag
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: IMS_Library.WhitelistTag.name
      commentId: F:IMS_Library.WhitelistTag.name
      language: CSharp
      name:
        CSharp: name
        VB: name
      nameWithType:
        CSharp: WhitelistTag.name
        VB: WhitelistTag.name
      qualifiedName:
        CSharp: IMS_Library.WhitelistTag.name
        VB: IMS_Library.WhitelistTag.name
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: name
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\WhitelistTag.cs
        startLine: 11
      syntax:
        content:
          CSharp: public string name
          VB: Public name As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.WhitelistTag.uuid
      commentId: F:IMS_Library.WhitelistTag.uuid
      language: CSharp
      name:
        CSharp: uuid
        VB: uuid
      nameWithType:
        CSharp: WhitelistTag.uuid
        VB: WhitelistTag.uuid
      qualifiedName:
        CSharp: IMS_Library.WhitelistTag.uuid
        VB: IMS_Library.WhitelistTag.uuid
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: uuid
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\JSON\WhitelistTag.cs
        startLine: 12
      syntax:
        content:
          CSharp: public string uuid
          VB: Public uuid As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: IMS_Library.LogFileInformation
    commentId: T:IMS_Library.LogFileInformation
    language: CSharp
    name:
      CSharp: LogFileInformation
      VB: LogFileInformation
    nameWithType:
      CSharp: LogFileInformation
      VB: LogFileInformation
    qualifiedName:
      CSharp: IMS_Library.LogFileInformation
      VB: IMS_Library.LogFileInformation
    type: Struct
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: LogFileInformation
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\LogFileInformation.cs
      startLine: 8
    syntax:
      content:
        CSharp: public struct LogFileInformation
        VB: Public Structure LogFileInformation
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: IMS_Library.LogFileInformation.Name
      commentId: F:IMS_Library.LogFileInformation.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: LogFileInformation.Name
        VB: LogFileInformation.Name
      qualifiedName:
        CSharp: IMS_Library.LogFileInformation.Name
        VB: IMS_Library.LogFileInformation.Name
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Name
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\LogFileInformation.cs
        startLine: 10
      syntax:
        content:
          CSharp: public string Name
          VB: Public Name As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.LogFileInformation.CleanExit
      commentId: F:IMS_Library.LogFileInformation.CleanExit
      language: CSharp
      name:
        CSharp: CleanExit
        VB: CleanExit
      nameWithType:
        CSharp: LogFileInformation.CleanExit
        VB: LogFileInformation.CleanExit
      qualifiedName:
        CSharp: IMS_Library.LogFileInformation.CleanExit
        VB: IMS_Library.LogFileInformation.CleanExit
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: CleanExit
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\LogFileInformation.cs
        startLine: 11
      syntax:
        content:
          CSharp: public bool CleanExit
          VB: Public CleanExit As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: IMS_Library.MinecraftConfigurationWriter
    commentId: T:IMS_Library.MinecraftConfigurationWriter
    language: CSharp
    name:
      CSharp: MinecraftConfigurationWriter
      VB: MinecraftConfigurationWriter
    nameWithType:
      CSharp: MinecraftConfigurationWriter
      VB: MinecraftConfigurationWriter
    qualifiedName:
      CSharp: IMS_Library.MinecraftConfigurationWriter
      VB: IMS_Library.MinecraftConfigurationWriter
    type: Class
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: MinecraftConfigurationWriter
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\MinecraftConfigurationWriter.cs
      startLine: 12
    syntax:
      content:
        CSharp: public static class MinecraftConfigurationWriter
        VB: Public Module MinecraftConfigurationWriter
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: IMS_Library.MinecraftConfigurationWriter.WriteServerPropertiesFile(System.String,IMS_Library.ServerConfiguration)
      commentId: M:IMS_Library.MinecraftConfigurationWriter.WriteServerPropertiesFile(System.String,IMS_Library.ServerConfiguration)
      language: CSharp
      name:
        CSharp: WriteServerPropertiesFile(String, ServerConfiguration)
        VB: WriteServerPropertiesFile(String, ServerConfiguration)
      nameWithType:
        CSharp: MinecraftConfigurationWriter.WriteServerPropertiesFile(String, ServerConfiguration)
        VB: MinecraftConfigurationWriter.WriteServerPropertiesFile(String, ServerConfiguration)
      qualifiedName:
        CSharp: IMS_Library.MinecraftConfigurationWriter.WriteServerPropertiesFile(System.String, IMS_Library.ServerConfiguration)
        VB: IMS_Library.MinecraftConfigurationWriter.WriteServerPropertiesFile(System.String, IMS_Library.ServerConfiguration)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: WriteServerPropertiesFile
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\MinecraftConfigurationWriter.cs
        startLine: 14
      syntax:
        content:
          CSharp: public static void WriteServerPropertiesFile(string fileName, ServerConfiguration configuration)
          VB: Public Shared Sub WriteServerPropertiesFile(fileName As String, configuration As ServerConfiguration)
        parameters:
        - id: fileName
          type: System.String
        - id: configuration
          type: IMS_Library.ServerConfiguration
      overload: IMS_Library.MinecraftConfigurationWriter.WriteServerPropertiesFile*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: IMS_Library.MinecraftConfigurationWriter.WriteEULA(System.String,IMS_Library.ServerConfiguration)
      commentId: M:IMS_Library.MinecraftConfigurationWriter.WriteEULA(System.String,IMS_Library.ServerConfiguration)
      language: CSharp
      name:
        CSharp: WriteEULA(String, ServerConfiguration)
        VB: WriteEULA(String, ServerConfiguration)
      nameWithType:
        CSharp: MinecraftConfigurationWriter.WriteEULA(String, ServerConfiguration)
        VB: MinecraftConfigurationWriter.WriteEULA(String, ServerConfiguration)
      qualifiedName:
        CSharp: IMS_Library.MinecraftConfigurationWriter.WriteEULA(System.String, IMS_Library.ServerConfiguration)
        VB: IMS_Library.MinecraftConfigurationWriter.WriteEULA(System.String, IMS_Library.ServerConfiguration)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: WriteEULA
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\MinecraftConfigurationWriter.cs
        startLine: 28
      syntax:
        content:
          CSharp: public static void WriteEULA(string fileName, ServerConfiguration configuration)
          VB: Public Shared Sub WriteEULA(fileName As String, configuration As ServerConfiguration)
        parameters:
        - id: fileName
          type: System.String
        - id: configuration
          type: IMS_Library.ServerConfiguration
      overload: IMS_Library.MinecraftConfigurationWriter.WriteEULA*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: IMS_Library.ServerProperty
    commentId: T:IMS_Library.ServerProperty
    language: CSharp
    name:
      CSharp: ServerProperty
      VB: ServerProperty
    nameWithType:
      CSharp: ServerProperty
      VB: ServerProperty
    qualifiedName:
      CSharp: IMS_Library.ServerProperty
      VB: IMS_Library.ServerProperty
    type: Class
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: ServerProperty
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\MinecraftConfigurationWriter.cs
      startLine: 34
    syntax:
      content:
        CSharp: >-
          [AttributeUsage(AttributeTargets.Field, AllowMultiple = false, Inherited = true)]

          public class ServerProperty : Attribute
        VB: >-
          <AttributeUsage(AttributeTargets.Field, AllowMultiple:=False, Inherited:=True)>

          Public Class ServerProperty

              Inherits Attribute
    inheritance:
    - System.Object
    - System.Attribute
    inheritedMembers:
    - System.Attribute.Equals(System.Object)
    - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    - System.Attribute.GetHashCode
    - System.Attribute.IsDefaultAttribute
    - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
    - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
    - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
    - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
    - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    - System.Attribute.Match(System.Object)
    - System.Attribute.TypeId
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    attributes:
    - type: System.AttributeUsageAttribute
      ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
      arguments:
      - type: System.AttributeTargets
        value: 256
      namedArguments:
      - name: AllowMultiple
        type: System.Boolean
        value: false
      - name: Inherited
        type: System.Boolean
        value: true
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: IMS_Library.ServerProperty.PropertyName
      commentId: F:IMS_Library.ServerProperty.PropertyName
      language: CSharp
      name:
        CSharp: PropertyName
        VB: PropertyName
      nameWithType:
        CSharp: ServerProperty.PropertyName
        VB: ServerProperty.PropertyName
      qualifiedName:
        CSharp: IMS_Library.ServerProperty.PropertyName
        VB: IMS_Library.ServerProperty.PropertyName
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: PropertyName
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\MinecraftConfigurationWriter.cs
        startLine: 37
      syntax:
        content:
          CSharp: public string PropertyName
          VB: Public PropertyName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.ServerProperty.#ctor(System.String)
      commentId: M:IMS_Library.ServerProperty.#ctor(System.String)
      language: CSharp
      name:
        CSharp: ServerProperty(String)
        VB: ServerProperty(String)
      nameWithType:
        CSharp: ServerProperty.ServerProperty(String)
        VB: ServerProperty.ServerProperty(String)
      qualifiedName:
        CSharp: IMS_Library.ServerProperty.ServerProperty(System.String)
        VB: IMS_Library.ServerProperty.ServerProperty(System.String)
      type: Constructor
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: .ctor
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\MinecraftConfigurationWriter.cs
        startLine: 39
      syntax:
        content:
          CSharp: public ServerProperty(string propertyName)
          VB: Public Sub New(propertyName As String)
        parameters:
        - id: propertyName
          type: System.String
      overload: IMS_Library.ServerProperty.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.ServerProperty.GetData(IMS_Library.ServerConfiguration,System.Reflection.FieldInfo)
      commentId: M:IMS_Library.ServerProperty.GetData(IMS_Library.ServerConfiguration,System.Reflection.FieldInfo)
      language: CSharp
      name:
        CSharp: GetData(ServerConfiguration, FieldInfo)
        VB: GetData(ServerConfiguration, FieldInfo)
      nameWithType:
        CSharp: ServerProperty.GetData(ServerConfiguration, FieldInfo)
        VB: ServerProperty.GetData(ServerConfiguration, FieldInfo)
      qualifiedName:
        CSharp: IMS_Library.ServerProperty.GetData(IMS_Library.ServerConfiguration, System.Reflection.FieldInfo)
        VB: IMS_Library.ServerProperty.GetData(IMS_Library.ServerConfiguration, System.Reflection.FieldInfo)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetData
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\MinecraftConfigurationWriter.cs
        startLine: 44
      syntax:
        content:
          CSharp: public virtual string GetData(ServerConfiguration configuration, FieldInfo field)
          VB: Public Overridable Function GetData(configuration As ServerConfiguration, field As FieldInfo) As String
        parameters:
        - id: configuration
          type: IMS_Library.ServerConfiguration
        - id: field
          type: System.Reflection.FieldInfo
        return:
          type: System.String
      overload: IMS_Library.ServerProperty.GetData*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
  - id: IMS_Library.MinecraftPlayer
    commentId: T:IMS_Library.MinecraftPlayer
    language: CSharp
    name:
      CSharp: MinecraftPlayer
      VB: MinecraftPlayer
    nameWithType:
      CSharp: MinecraftPlayer
      VB: MinecraftPlayer
    qualifiedName:
      CSharp: IMS_Library.MinecraftPlayer
      VB: IMS_Library.MinecraftPlayer
    type: Class
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: MinecraftPlayer
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\MinecraftPlayer.cs
      startLine: 8
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class MinecraftPlayer
        VB: >-
          <Serializable>

          Public Class MinecraftPlayer
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: IMS_Library.MinecraftPlayer.Username
      commentId: F:IMS_Library.MinecraftPlayer.Username
      language: CSharp
      name:
        CSharp: Username
        VB: Username
      nameWithType:
        CSharp: MinecraftPlayer.Username
        VB: MinecraftPlayer.Username
      qualifiedName:
        CSharp: IMS_Library.MinecraftPlayer.Username
        VB: IMS_Library.MinecraftPlayer.Username
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Username
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\MinecraftPlayer.cs
        startLine: 11
      syntax:
        content:
          CSharp: public string Username
          VB: Public Username As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.MinecraftPlayer.UUID
      commentId: F:IMS_Library.MinecraftPlayer.UUID
      language: CSharp
      name:
        CSharp: UUID
        VB: UUID
      nameWithType:
        CSharp: MinecraftPlayer.UUID
        VB: MinecraftPlayer.UUID
      qualifiedName:
        CSharp: IMS_Library.MinecraftPlayer.UUID
        VB: IMS_Library.MinecraftPlayer.UUID
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: UUID
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\MinecraftPlayer.cs
        startLine: 12
      syntax:
        content:
          CSharp: public string UUID
          VB: Public UUID As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.MinecraftPlayer.IP
      commentId: F:IMS_Library.MinecraftPlayer.IP
      language: CSharp
      name:
        CSharp: IP
        VB: IP
      nameWithType:
        CSharp: MinecraftPlayer.IP
        VB: MinecraftPlayer.IP
      qualifiedName:
        CSharp: IMS_Library.MinecraftPlayer.IP
        VB: IMS_Library.MinecraftPlayer.IP
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: IP
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\MinecraftPlayer.cs
        startLine: 13
      syntax:
        content:
          CSharp: public string IP
          VB: Public IP As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.MinecraftPlayer.IsWhitelisted
      commentId: F:IMS_Library.MinecraftPlayer.IsWhitelisted
      language: CSharp
      name:
        CSharp: IsWhitelisted
        VB: IsWhitelisted
      nameWithType:
        CSharp: MinecraftPlayer.IsWhitelisted
        VB: MinecraftPlayer.IsWhitelisted
      qualifiedName:
        CSharp: IMS_Library.MinecraftPlayer.IsWhitelisted
        VB: IMS_Library.MinecraftPlayer.IsWhitelisted
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: IsWhitelisted
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\MinecraftPlayer.cs
        startLine: 14
      syntax:
        content:
          CSharp: public bool IsWhitelisted
          VB: Public IsWhitelisted As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.MinecraftPlayer.PermissionLevel
      commentId: F:IMS_Library.MinecraftPlayer.PermissionLevel
      language: CSharp
      name:
        CSharp: PermissionLevel
        VB: PermissionLevel
      nameWithType:
        CSharp: MinecraftPlayer.PermissionLevel
        VB: MinecraftPlayer.PermissionLevel
      qualifiedName:
        CSharp: IMS_Library.MinecraftPlayer.PermissionLevel
        VB: IMS_Library.MinecraftPlayer.PermissionLevel
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: PermissionLevel
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\MinecraftPlayer.cs
        startLine: 15
      syntax:
        content:
          CSharp: public int PermissionLevel
          VB: Public PermissionLevel As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.MinecraftPlayer.LastConnectionEvent
      commentId: F:IMS_Library.MinecraftPlayer.LastConnectionEvent
      language: CSharp
      name:
        CSharp: LastConnectionEvent
        VB: LastConnectionEvent
      nameWithType:
        CSharp: MinecraftPlayer.LastConnectionEvent
        VB: MinecraftPlayer.LastConnectionEvent
      qualifiedName:
        CSharp: IMS_Library.MinecraftPlayer.LastConnectionEvent
        VB: IMS_Library.MinecraftPlayer.LastConnectionEvent
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: LastConnectionEvent
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\MinecraftPlayer.cs
        startLine: 16
      syntax:
        content:
          CSharp: public DateTime LastConnectionEvent
          VB: Public LastConnectionEvent As Date
        return:
          type: System.DateTime
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: IMS_Library.MinecraftVersionProvider
    commentId: T:IMS_Library.MinecraftVersionProvider
    language: CSharp
    name:
      CSharp: MinecraftVersionProvider
      VB: MinecraftVersionProvider
    nameWithType:
      CSharp: MinecraftVersionProvider
      VB: MinecraftVersionProvider
    qualifiedName:
      CSharp: IMS_Library.MinecraftVersionProvider
      VB: IMS_Library.MinecraftVersionProvider
    type: Class
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: MinecraftVersionProvider
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\MinecraftVersionProvider.cs
      startLine: 8
    syntax:
      content:
        CSharp: 'public class MinecraftVersionProvider : IMSConfiguration, ICloneable'
        VB: >-
          Public Class MinecraftVersionProvider

              Inherits IMSConfiguration

              Implements ICloneable
    inheritance:
    - System.Object
    - IMS_Library.IMSConfiguration
    implements:
    - System.ICloneable
    inheritedMembers:
    - IMS_Library.IMSConfiguration.Clone
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    extensionMethods:
    - IMS_Library.MinecraftVersionProvider.IMS_Library.IMSConfigurationUtility.FromConfiguration``1
    - IMS_Library.MinecraftVersionProvider.IMS_Library.IMSConfigurationUtility.SaveConfiguration``1
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: IMS_Library.MinecraftVersionProvider.LatestRelease
      commentId: P:IMS_Library.MinecraftVersionProvider.LatestRelease
      language: CSharp
      name:
        CSharp: LatestRelease
        VB: LatestRelease
      nameWithType:
        CSharp: MinecraftVersionProvider.LatestRelease
        VB: MinecraftVersionProvider.LatestRelease
      qualifiedName:
        CSharp: IMS_Library.MinecraftVersionProvider.LatestRelease
        VB: IMS_Library.MinecraftVersionProvider.LatestRelease
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: LatestRelease
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\MinecraftVersionProvider.cs
        startLine: 10
      syntax:
        content:
          CSharp: public ServerVersionInformation LatestRelease { get; }
          VB: Public ReadOnly Property LatestRelease As ServerVersionInformation
        parameters: []
        return:
          type: IMS_Library.ServerVersionInformation
      overload: IMS_Library.MinecraftVersionProvider.LatestRelease*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: IMS_Library.MinecraftVersionProvider.LatestSnapshot
      commentId: P:IMS_Library.MinecraftVersionProvider.LatestSnapshot
      language: CSharp
      name:
        CSharp: LatestSnapshot
        VB: LatestSnapshot
      nameWithType:
        CSharp: MinecraftVersionProvider.LatestSnapshot
        VB: MinecraftVersionProvider.LatestSnapshot
      qualifiedName:
        CSharp: IMS_Library.MinecraftVersionProvider.LatestSnapshot
        VB: IMS_Library.MinecraftVersionProvider.LatestSnapshot
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: LatestSnapshot
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\MinecraftVersionProvider.cs
        startLine: 11
      syntax:
        content:
          CSharp: public ServerVersionInformation LatestSnapshot { get; }
          VB: Public ReadOnly Property LatestSnapshot As ServerVersionInformation
        parameters: []
        return:
          type: IMS_Library.ServerVersionInformation
      overload: IMS_Library.MinecraftVersionProvider.LatestSnapshot*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: IMS_Library.MinecraftVersionProvider.AvailableServerVersions
      commentId: F:IMS_Library.MinecraftVersionProvider.AvailableServerVersions
      language: CSharp
      name:
        CSharp: AvailableServerVersions
        VB: AvailableServerVersions
      nameWithType:
        CSharp: MinecraftVersionProvider.AvailableServerVersions
        VB: MinecraftVersionProvider.AvailableServerVersions
      qualifiedName:
        CSharp: IMS_Library.MinecraftVersionProvider.AvailableServerVersions
        VB: IMS_Library.MinecraftVersionProvider.AvailableServerVersions
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: AvailableServerVersions
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\MinecraftVersionProvider.cs
        startLine: 12
      syntax:
        content:
          CSharp: public ConcurrentDictionary<string, ServerVersionInformation> AvailableServerVersions
          VB: Public AvailableServerVersions As ConcurrentDictionary(Of String, ServerVersionInformation)
        return:
          type: System.Collections.Concurrent.ConcurrentDictionary{System.String,IMS_Library.ServerVersionInformation}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.MinecraftVersionProvider.LatestReleaseID
      commentId: F:IMS_Library.MinecraftVersionProvider.LatestReleaseID
      language: CSharp
      name:
        CSharp: LatestReleaseID
        VB: LatestReleaseID
      nameWithType:
        CSharp: MinecraftVersionProvider.LatestReleaseID
        VB: MinecraftVersionProvider.LatestReleaseID
      qualifiedName:
        CSharp: IMS_Library.MinecraftVersionProvider.LatestReleaseID
        VB: IMS_Library.MinecraftVersionProvider.LatestReleaseID
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: LatestReleaseID
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\MinecraftVersionProvider.cs
        startLine: 13
      syntax:
        content:
          CSharp: public string LatestReleaseID
          VB: Public LatestReleaseID As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.MinecraftVersionProvider.LatestSnapshotID
      commentId: F:IMS_Library.MinecraftVersionProvider.LatestSnapshotID
      language: CSharp
      name:
        CSharp: LatestSnapshotID
        VB: LatestSnapshotID
      nameWithType:
        CSharp: MinecraftVersionProvider.LatestSnapshotID
        VB: MinecraftVersionProvider.LatestSnapshotID
      qualifiedName:
        CSharp: IMS_Library.MinecraftVersionProvider.LatestSnapshotID
        VB: IMS_Library.MinecraftVersionProvider.LatestSnapshotID
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: LatestSnapshotID
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\MinecraftVersionProvider.cs
        startLine: 14
      syntax:
        content:
          CSharp: public string LatestSnapshotID
          VB: Public LatestSnapshotID As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.MinecraftVersionProvider.Start
      commentId: M:IMS_Library.MinecraftVersionProvider.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: MinecraftVersionProvider.Start()
        VB: MinecraftVersionProvider.Start()
      qualifiedName:
        CSharp: IMS_Library.MinecraftVersionProvider.Start()
        VB: IMS_Library.MinecraftVersionProvider.Start()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Start
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\MinecraftVersionProvider.cs
        startLine: 16
      syntax:
        content:
          CSharp: public void Start()
          VB: Public Sub Start
      overload: IMS_Library.MinecraftVersionProvider.Start*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.MinecraftVersionProvider.Stop
      commentId: M:IMS_Library.MinecraftVersionProvider.Stop
      language: CSharp
      name:
        CSharp: Stop()
        VB: Stop()
      nameWithType:
        CSharp: MinecraftVersionProvider.Stop()
        VB: MinecraftVersionProvider.Stop()
      qualifiedName:
        CSharp: IMS_Library.MinecraftVersionProvider.Stop()
        VB: IMS_Library.MinecraftVersionProvider.Stop()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Stop
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\MinecraftVersionProvider.cs
        startLine: 21
      syntax:
        content:
          CSharp: public void Stop()
          VB: Public Sub Stop
      overload: IMS_Library.MinecraftVersionProvider.Stop*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.MinecraftVersionProvider.GetVersionInformationFromID(System.String)
      commentId: M:IMS_Library.MinecraftVersionProvider.GetVersionInformationFromID(System.String)
      language: CSharp
      name:
        CSharp: GetVersionInformationFromID(String)
        VB: GetVersionInformationFromID(String)
      nameWithType:
        CSharp: MinecraftVersionProvider.GetVersionInformationFromID(String)
        VB: MinecraftVersionProvider.GetVersionInformationFromID(String)
      qualifiedName:
        CSharp: IMS_Library.MinecraftVersionProvider.GetVersionInformationFromID(System.String)
        VB: IMS_Library.MinecraftVersionProvider.GetVersionInformationFromID(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetVersionInformationFromID
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\MinecraftVersionProvider.cs
        startLine: 26
      syntax:
        content:
          CSharp: public ServerVersionInformation GetVersionInformationFromID(string id)
          VB: Public Function GetVersionInformationFromID(id As String) As ServerVersionInformation
        parameters:
        - id: id
          type: System.String
        return:
          type: IMS_Library.ServerVersionInformation
      overload: IMS_Library.MinecraftVersionProvider.GetVersionInformationFromID*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.MinecraftVersionProvider.GetDefaultFilePath
      commentId: M:IMS_Library.MinecraftVersionProvider.GetDefaultFilePath
      language: CSharp
      name:
        CSharp: GetDefaultFilePath()
        VB: GetDefaultFilePath()
      nameWithType:
        CSharp: MinecraftVersionProvider.GetDefaultFilePath()
        VB: MinecraftVersionProvider.GetDefaultFilePath()
      qualifiedName:
        CSharp: IMS_Library.MinecraftVersionProvider.GetDefaultFilePath()
        VB: IMS_Library.MinecraftVersionProvider.GetDefaultFilePath()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetDefaultFilePath
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\MinecraftVersionProvider.cs
        startLine: 31
      syntax:
        content:
          CSharp: public override string GetDefaultFilePath()
          VB: Public Overrides Function GetDefaultFilePath As String
        return:
          type: System.String
      overload: IMS_Library.MinecraftVersionProvider.GetDefaultFilePath*
      overridden: IMS_Library.IMSConfiguration.GetDefaultFilePath
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.MinecraftVersionProvider.UpdateAllServerVersionsAsync
      commentId: M:IMS_Library.MinecraftVersionProvider.UpdateAllServerVersionsAsync
      language: CSharp
      name:
        CSharp: UpdateAllServerVersionsAsync()
        VB: UpdateAllServerVersionsAsync()
      nameWithType:
        CSharp: MinecraftVersionProvider.UpdateAllServerVersionsAsync()
        VB: MinecraftVersionProvider.UpdateAllServerVersionsAsync()
      qualifiedName:
        CSharp: IMS_Library.MinecraftVersionProvider.UpdateAllServerVersionsAsync()
        VB: IMS_Library.MinecraftVersionProvider.UpdateAllServerVersionsAsync()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: UpdateAllServerVersionsAsync
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\MinecraftVersionProvider.cs
        startLine: 36
      syntax:
        content:
          CSharp: public Task UpdateAllServerVersionsAsync()
          VB: Public Function UpdateAllServerVersionsAsync As Task
        return:
          type: System.Threading.Tasks.Task
      overload: IMS_Library.MinecraftVersionProvider.UpdateAllServerVersionsAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: IMS_Library.MojangInteropUtility
    commentId: T:IMS_Library.MojangInteropUtility
    language: CSharp
    name:
      CSharp: MojangInteropUtility
      VB: MojangInteropUtility
    nameWithType:
      CSharp: MojangInteropUtility
      VB: MojangInteropUtility
    qualifiedName:
      CSharp: IMS_Library.MojangInteropUtility
      VB: IMS_Library.MojangInteropUtility
    type: Class
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: MojangInteropUtility
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\MojangInteropUtility.cs
      startLine: 11
    syntax:
      content:
        CSharp: public static class MojangInteropUtility
        VB: Public Module MojangInteropUtility
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: IMS_Library.MojangInteropUtility.SkinLinkCache
      commentId: F:IMS_Library.MojangInteropUtility.SkinLinkCache
      language: CSharp
      name:
        CSharp: SkinLinkCache
        VB: SkinLinkCache
      nameWithType:
        CSharp: MojangInteropUtility.SkinLinkCache
        VB: MojangInteropUtility.SkinLinkCache
      qualifiedName:
        CSharp: IMS_Library.MojangInteropUtility.SkinLinkCache
        VB: IMS_Library.MojangInteropUtility.SkinLinkCache
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: SkinLinkCache
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\MojangInteropUtility.cs
        startLine: 13
      syntax:
        content:
          CSharp: public static MemoryCache SkinLinkCache
          VB: Public Shared SkinLinkCache As MemoryCache
        return:
          type: System.Runtime.Caching.MemoryCache
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: IMS_Library.MojangInteropUtility.GetAllJavaVersionInformation
      commentId: M:IMS_Library.MojangInteropUtility.GetAllJavaVersionInformation
      language: CSharp
      name:
        CSharp: GetAllJavaVersionInformation()
        VB: GetAllJavaVersionInformation()
      nameWithType:
        CSharp: MojangInteropUtility.GetAllJavaVersionInformation()
        VB: MojangInteropUtility.GetAllJavaVersionInformation()
      qualifiedName:
        CSharp: IMS_Library.MojangInteropUtility.GetAllJavaVersionInformation()
        VB: IMS_Library.MojangInteropUtility.GetAllJavaVersionInformation()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetAllJavaVersionInformation
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\MojangInteropUtility.cs
        startLine: 15
      syntax:
        content:
          CSharp: public static Task<VersionInformationTag> GetAllJavaVersionInformation()
          VB: Public Shared Function GetAllJavaVersionInformation As Task(Of VersionInformationTag)
        return:
          type: System.Threading.Tasks.Task{IMS_Library.VersionInformationTag}
      overload: IMS_Library.MojangInteropUtility.GetAllJavaVersionInformation*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: IMS_Library.MojangInteropUtility.GetVersionInformation(IMS_Library.VersionMetadataTag)
      commentId: M:IMS_Library.MojangInteropUtility.GetVersionInformation(IMS_Library.VersionMetadataTag)
      language: CSharp
      name:
        CSharp: GetVersionInformation(VersionMetadataTag)
        VB: GetVersionInformation(VersionMetadataTag)
      nameWithType:
        CSharp: MojangInteropUtility.GetVersionInformation(VersionMetadataTag)
        VB: MojangInteropUtility.GetVersionInformation(VersionMetadataTag)
      qualifiedName:
        CSharp: IMS_Library.MojangInteropUtility.GetVersionInformation(IMS_Library.VersionMetadataTag)
        VB: IMS_Library.MojangInteropUtility.GetVersionInformation(IMS_Library.VersionMetadataTag)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetVersionInformation
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\MojangInteropUtility.cs
        startLine: 21
      syntax:
        content:
          CSharp: public static Task<VersionDataTag> GetVersionInformation(VersionMetadataTag version)
          VB: Public Shared Function GetVersionInformation(version As VersionMetadataTag) As Task(Of VersionDataTag)
        parameters:
        - id: version
          type: IMS_Library.VersionMetadataTag
        return:
          type: System.Threading.Tasks.Task{IMS_Library.VersionDataTag}
      overload: IMS_Library.MojangInteropUtility.GetVersionInformation*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: IMS_Library.MojangInteropUtility.GetUUIDFromUsername(System.String)
      commentId: M:IMS_Library.MojangInteropUtility.GetUUIDFromUsername(System.String)
      language: CSharp
      name:
        CSharp: GetUUIDFromUsername(String)
        VB: GetUUIDFromUsername(String)
      nameWithType:
        CSharp: MojangInteropUtility.GetUUIDFromUsername(String)
        VB: MojangInteropUtility.GetUUIDFromUsername(String)
      qualifiedName:
        CSharp: IMS_Library.MojangInteropUtility.GetUUIDFromUsername(System.String)
        VB: IMS_Library.MojangInteropUtility.GetUUIDFromUsername(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetUUIDFromUsername
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\MojangInteropUtility.cs
        startLine: 27
      syntax:
        content:
          CSharp: public static string GetUUIDFromUsername(string username)
          VB: Public Shared Function GetUUIDFromUsername(username As String) As String
        parameters:
        - id: username
          type: System.String
        return:
          type: System.String
      overload: IMS_Library.MojangInteropUtility.GetUUIDFromUsername*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: IMS_Library.MojangInteropUtility.GetUsernameFromUUID(System.String)
      commentId: M:IMS_Library.MojangInteropUtility.GetUsernameFromUUID(System.String)
      language: CSharp
      name:
        CSharp: GetUsernameFromUUID(String)
        VB: GetUsernameFromUUID(String)
      nameWithType:
        CSharp: MojangInteropUtility.GetUsernameFromUUID(String)
        VB: MojangInteropUtility.GetUsernameFromUUID(String)
      qualifiedName:
        CSharp: IMS_Library.MojangInteropUtility.GetUsernameFromUUID(System.String)
        VB: IMS_Library.MojangInteropUtility.GetUsernameFromUUID(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetUsernameFromUUID
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\MojangInteropUtility.cs
        startLine: 42
      syntax:
        content:
          CSharp: public static string GetUsernameFromUUID(string uuid)
          VB: Public Shared Function GetUsernameFromUUID(uuid As String) As String
        parameters:
        - id: uuid
          type: System.String
        return:
          type: System.String
      overload: IMS_Library.MojangInteropUtility.GetUsernameFromUUID*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: IMS_Library.MojangInteropUtility.GetLinkToPlayerSkin(System.String)
      commentId: M:IMS_Library.MojangInteropUtility.GetLinkToPlayerSkin(System.String)
      language: CSharp
      name:
        CSharp: GetLinkToPlayerSkin(String)
        VB: GetLinkToPlayerSkin(String)
      nameWithType:
        CSharp: MojangInteropUtility.GetLinkToPlayerSkin(String)
        VB: MojangInteropUtility.GetLinkToPlayerSkin(String)
      qualifiedName:
        CSharp: IMS_Library.MojangInteropUtility.GetLinkToPlayerSkin(System.String)
        VB: IMS_Library.MojangInteropUtility.GetLinkToPlayerSkin(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetLinkToPlayerSkin
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\MojangInteropUtility.cs
        startLine: 57
      syntax:
        content:
          CSharp: >-
            [Obsolete("This method is blocking and takes extremely long.")]

            public static string GetLinkToPlayerSkin(string uuid)
          VB: >-
            <Obsolete("This method is blocking and takes extremely long.")>

            Public Shared Function GetLinkToPlayerSkin(uuid As String) As String
        parameters:
        - id: uuid
          type: System.String
        return:
          type: System.String
      overload: IMS_Library.MojangInteropUtility.GetLinkToPlayerSkin*
      attributes:
      - type: System.ObsoleteAttribute
        ctor: System.ObsoleteAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: This method is blocking and takes extremely long.
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: IMS_Library.MojangInteropUtility.WebClientWithTimeout
    commentId: T:IMS_Library.MojangInteropUtility.WebClientWithTimeout
    language: CSharp
    name:
      CSharp: MojangInteropUtility.WebClientWithTimeout
      VB: MojangInteropUtility.WebClientWithTimeout
    nameWithType:
      CSharp: MojangInteropUtility.WebClientWithTimeout
      VB: MojangInteropUtility.WebClientWithTimeout
    qualifiedName:
      CSharp: IMS_Library.MojangInteropUtility.WebClientWithTimeout
      VB: IMS_Library.MojangInteropUtility.WebClientWithTimeout
    type: Class
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: WebClientWithTimeout
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\MojangInteropUtility.cs
      startLine: 92
    syntax:
      content:
        CSharp: 'protected class WebClientWithTimeout : WebClient, IComponent, IDisposable'
        VB: >-
          Protected Class WebClientWithTimeout

              Inherits WebClient

              Implements IComponent, IDisposable
    inheritance:
    - System.Object
    - System.MarshalByRefObject
    - System.ComponentModel.Component
    - System.Net.WebClient
    implements:
    - System.ComponentModel.IComponent
    - System.IDisposable
    inheritedMembers:
    - System.Net.WebClient.CancelAsync
    - System.Net.WebClient.DownloadData(System.String)
    - System.Net.WebClient.DownloadData(System.Uri)
    - System.Net.WebClient.DownloadDataAsync(System.Uri)
    - System.Net.WebClient.DownloadDataAsync(System.Uri,System.Object)
    - System.Net.WebClient.DownloadDataTaskAsync(System.String)
    - System.Net.WebClient.DownloadDataTaskAsync(System.Uri)
    - System.Net.WebClient.DownloadFile(System.String,System.String)
    - System.Net.WebClient.DownloadFile(System.Uri,System.String)
    - System.Net.WebClient.DownloadFileAsync(System.Uri,System.String)
    - System.Net.WebClient.DownloadFileAsync(System.Uri,System.String,System.Object)
    - System.Net.WebClient.DownloadFileTaskAsync(System.String,System.String)
    - System.Net.WebClient.DownloadFileTaskAsync(System.Uri,System.String)
    - System.Net.WebClient.DownloadString(System.String)
    - System.Net.WebClient.DownloadString(System.Uri)
    - System.Net.WebClient.DownloadStringAsync(System.Uri)
    - System.Net.WebClient.DownloadStringAsync(System.Uri,System.Object)
    - System.Net.WebClient.DownloadStringTaskAsync(System.String)
    - System.Net.WebClient.DownloadStringTaskAsync(System.Uri)
    - System.Net.WebClient.GetWebResponse(System.Net.WebRequest)
    - System.Net.WebClient.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)
    - System.Net.WebClient.OnDownloadDataCompleted(System.Net.DownloadDataCompletedEventArgs)
    - System.Net.WebClient.OnDownloadFileCompleted(System.ComponentModel.AsyncCompletedEventArgs)
    - System.Net.WebClient.OnDownloadProgressChanged(System.Net.DownloadProgressChangedEventArgs)
    - System.Net.WebClient.OnDownloadStringCompleted(System.Net.DownloadStringCompletedEventArgs)
    - System.Net.WebClient.OnOpenReadCompleted(System.Net.OpenReadCompletedEventArgs)
    - System.Net.WebClient.OnOpenWriteCompleted(System.Net.OpenWriteCompletedEventArgs)
    - System.Net.WebClient.OnUploadDataCompleted(System.Net.UploadDataCompletedEventArgs)
    - System.Net.WebClient.OnUploadFileCompleted(System.Net.UploadFileCompletedEventArgs)
    - System.Net.WebClient.OnUploadProgressChanged(System.Net.UploadProgressChangedEventArgs)
    - System.Net.WebClient.OnUploadStringCompleted(System.Net.UploadStringCompletedEventArgs)
    - System.Net.WebClient.OnUploadValuesCompleted(System.Net.UploadValuesCompletedEventArgs)
    - System.Net.WebClient.OpenRead(System.String)
    - System.Net.WebClient.OpenRead(System.Uri)
    - System.Net.WebClient.OpenReadAsync(System.Uri)
    - System.Net.WebClient.OpenReadAsync(System.Uri,System.Object)
    - System.Net.WebClient.OpenReadTaskAsync(System.String)
    - System.Net.WebClient.OpenReadTaskAsync(System.Uri)
    - System.Net.WebClient.OpenWrite(System.String)
    - System.Net.WebClient.OpenWrite(System.String,System.String)
    - System.Net.WebClient.OpenWrite(System.Uri)
    - System.Net.WebClient.OpenWrite(System.Uri,System.String)
    - System.Net.WebClient.OpenWriteAsync(System.Uri)
    - System.Net.WebClient.OpenWriteAsync(System.Uri,System.String)
    - System.Net.WebClient.OpenWriteAsync(System.Uri,System.String,System.Object)
    - System.Net.WebClient.OpenWriteTaskAsync(System.String)
    - System.Net.WebClient.OpenWriteTaskAsync(System.String,System.String)
    - System.Net.WebClient.OpenWriteTaskAsync(System.Uri)
    - System.Net.WebClient.OpenWriteTaskAsync(System.Uri,System.String)
    - System.Net.WebClient.UploadData(System.String,System.Byte[])
    - System.Net.WebClient.UploadData(System.String,System.String,System.Byte[])
    - System.Net.WebClient.UploadData(System.Uri,System.Byte[])
    - System.Net.WebClient.UploadData(System.Uri,System.String,System.Byte[])
    - System.Net.WebClient.UploadDataAsync(System.Uri,System.Byte[])
    - System.Net.WebClient.UploadDataAsync(System.Uri,System.String,System.Byte[])
    - System.Net.WebClient.UploadDataAsync(System.Uri,System.String,System.Byte[],System.Object)
    - System.Net.WebClient.UploadDataTaskAsync(System.String,System.Byte[])
    - System.Net.WebClient.UploadDataTaskAsync(System.String,System.String,System.Byte[])
    - System.Net.WebClient.UploadDataTaskAsync(System.Uri,System.Byte[])
    - System.Net.WebClient.UploadDataTaskAsync(System.Uri,System.String,System.Byte[])
    - System.Net.WebClient.UploadFile(System.String,System.String)
    - System.Net.WebClient.UploadFile(System.String,System.String,System.String)
    - System.Net.WebClient.UploadFile(System.Uri,System.String)
    - System.Net.WebClient.UploadFile(System.Uri,System.String,System.String)
    - System.Net.WebClient.UploadFileAsync(System.Uri,System.String)
    - System.Net.WebClient.UploadFileAsync(System.Uri,System.String,System.String)
    - System.Net.WebClient.UploadFileAsync(System.Uri,System.String,System.String,System.Object)
    - System.Net.WebClient.UploadFileTaskAsync(System.String,System.String)
    - System.Net.WebClient.UploadFileTaskAsync(System.String,System.String,System.String)
    - System.Net.WebClient.UploadFileTaskAsync(System.Uri,System.String)
    - System.Net.WebClient.UploadFileTaskAsync(System.Uri,System.String,System.String)
    - System.Net.WebClient.UploadString(System.String,System.String)
    - System.Net.WebClient.UploadString(System.String,System.String,System.String)
    - System.Net.WebClient.UploadString(System.Uri,System.String)
    - System.Net.WebClient.UploadString(System.Uri,System.String,System.String)
    - System.Net.WebClient.UploadStringAsync(System.Uri,System.String)
    - System.Net.WebClient.UploadStringAsync(System.Uri,System.String,System.String)
    - System.Net.WebClient.UploadStringAsync(System.Uri,System.String,System.String,System.Object)
    - System.Net.WebClient.UploadStringTaskAsync(System.String,System.String)
    - System.Net.WebClient.UploadStringTaskAsync(System.String,System.String,System.String)
    - System.Net.WebClient.UploadStringTaskAsync(System.Uri,System.String)
    - System.Net.WebClient.UploadStringTaskAsync(System.Uri,System.String,System.String)
    - System.Net.WebClient.UploadValues(System.String,System.Collections.Specialized.NameValueCollection)
    - System.Net.WebClient.UploadValues(System.String,System.String,System.Collections.Specialized.NameValueCollection)
    - System.Net.WebClient.UploadValues(System.Uri,System.Collections.Specialized.NameValueCollection)
    - System.Net.WebClient.UploadValues(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)
    - System.Net.WebClient.UploadValuesAsync(System.Uri,System.Collections.Specialized.NameValueCollection)
    - System.Net.WebClient.UploadValuesAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)
    - System.Net.WebClient.UploadValuesAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection,System.Object)
    - System.Net.WebClient.UploadValuesTaskAsync(System.String,System.Collections.Specialized.NameValueCollection)
    - System.Net.WebClient.UploadValuesTaskAsync(System.String,System.String,System.Collections.Specialized.NameValueCollection)
    - System.Net.WebClient.UploadValuesTaskAsync(System.Uri,System.Collections.Specialized.NameValueCollection)
    - System.Net.WebClient.UploadValuesTaskAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)
    - System.Net.WebClient.BaseAddress
    - System.Net.WebClient.CachePolicy
    - System.Net.WebClient.Credentials
    - System.Net.WebClient.Encoding
    - System.Net.WebClient.Headers
    - System.Net.WebClient.IsBusy
    - System.Net.WebClient.Proxy
    - System.Net.WebClient.QueryString
    - System.Net.WebClient.ResponseHeaders
    - System.Net.WebClient.UseDefaultCredentials
    - System.Net.WebClient.DownloadDataCompleted
    - System.Net.WebClient.DownloadFileCompleted
    - System.Net.WebClient.DownloadProgressChanged
    - System.Net.WebClient.DownloadStringCompleted
    - System.Net.WebClient.OpenReadCompleted
    - System.Net.WebClient.OpenWriteCompleted
    - System.Net.WebClient.UploadDataCompleted
    - System.Net.WebClient.UploadFileCompleted
    - System.Net.WebClient.UploadProgressChanged
    - System.Net.WebClient.UploadStringCompleted
    - System.Net.WebClient.UploadValuesCompleted
    - System.ComponentModel.Component.Dispose
    - System.ComponentModel.Component.Dispose(System.Boolean)
    - System.ComponentModel.Component.GetService(System.Type)
    - System.ComponentModel.Component.ToString
    - System.ComponentModel.Component.CanRaiseEvents
    - System.ComponentModel.Component.Container
    - System.ComponentModel.Component.DesignMode
    - System.ComponentModel.Component.Events
    - System.ComponentModel.Component.Site
    - System.ComponentModel.Component.Disposed
    - System.MarshalByRefObject.GetLifetimeService
    - System.MarshalByRefObject.InitializeLifetimeService
    - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - protected
      - class
      VB:
      - Protected
      - Class
    items:
    - id: IMS_Library.MojangInteropUtility.WebClientWithTimeout.Timeout
      commentId: F:IMS_Library.MojangInteropUtility.WebClientWithTimeout.Timeout
      language: CSharp
      name:
        CSharp: Timeout
        VB: Timeout
      nameWithType:
        CSharp: MojangInteropUtility.WebClientWithTimeout.Timeout
        VB: MojangInteropUtility.WebClientWithTimeout.Timeout
      qualifiedName:
        CSharp: IMS_Library.MojangInteropUtility.WebClientWithTimeout.Timeout
        VB: IMS_Library.MojangInteropUtility.WebClientWithTimeout.Timeout
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Timeout
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\MojangInteropUtility.cs
        startLine: 94
      syntax:
        content:
          CSharp: public int Timeout
          VB: Public Timeout As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.MojangInteropUtility.WebClientWithTimeout.#ctor(System.Int32)
      commentId: M:IMS_Library.MojangInteropUtility.WebClientWithTimeout.#ctor(System.Int32)
      language: CSharp
      name:
        CSharp: WebClientWithTimeout(Int32)
        VB: WebClientWithTimeout(Int32)
      nameWithType:
        CSharp: MojangInteropUtility.WebClientWithTimeout.WebClientWithTimeout(Int32)
        VB: MojangInteropUtility.WebClientWithTimeout.WebClientWithTimeout(Int32)
      qualifiedName:
        CSharp: IMS_Library.MojangInteropUtility.WebClientWithTimeout.WebClientWithTimeout(System.Int32)
        VB: IMS_Library.MojangInteropUtility.WebClientWithTimeout.WebClientWithTimeout(System.Int32)
      type: Constructor
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: .ctor
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\MojangInteropUtility.cs
        startLine: 96
      syntax:
        content:
          CSharp: public WebClientWithTimeout(int time)
          VB: Public Sub New(time As Integer)
        parameters:
        - id: time
          type: System.Int32
      overload: IMS_Library.MojangInteropUtility.WebClientWithTimeout.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.MojangInteropUtility.WebClientWithTimeout.GetWebRequest(System.Uri)
      commentId: M:IMS_Library.MojangInteropUtility.WebClientWithTimeout.GetWebRequest(System.Uri)
      language: CSharp
      name:
        CSharp: GetWebRequest(Uri)
        VB: GetWebRequest(Uri)
      nameWithType:
        CSharp: MojangInteropUtility.WebClientWithTimeout.GetWebRequest(Uri)
        VB: MojangInteropUtility.WebClientWithTimeout.GetWebRequest(Uri)
      qualifiedName:
        CSharp: IMS_Library.MojangInteropUtility.WebClientWithTimeout.GetWebRequest(System.Uri)
        VB: IMS_Library.MojangInteropUtility.WebClientWithTimeout.GetWebRequest(System.Uri)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetWebRequest
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\MojangInteropUtility.cs
        startLine: 102
      syntax:
        content:
          CSharp: protected override WebRequest GetWebRequest(Uri address)
          VB: Protected Overrides Function GetWebRequest(address As Uri) As WebRequest
        parameters:
        - id: address
          type: System.Uri
        return:
          type: System.Net.WebRequest
      overload: IMS_Library.MojangInteropUtility.WebClientWithTimeout.GetWebRequest*
      overridden: System.Net.WebClient.GetWebRequest(System.Uri)
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: IMS_Library.ServerConfiguration
    commentId: T:IMS_Library.ServerConfiguration
    language: CSharp
    name:
      CSharp: ServerConfiguration
      VB: ServerConfiguration
    nameWithType:
      CSharp: ServerConfiguration
      VB: ServerConfiguration
    qualifiedName:
      CSharp: IMS_Library.ServerConfiguration
      VB: IMS_Library.ServerConfiguration
    type: Class
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: ServerConfiguration
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerConfiguration.cs
      startLine: 6
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class ServerConfiguration : IMSConfiguration, ICloneable
        VB: >-
          <Serializable>

          Public Class ServerConfiguration

              Inherits IMSConfiguration

              Implements ICloneable
    inheritance:
    - System.Object
    - IMS_Library.IMSConfiguration
    implements:
    - System.ICloneable
    inheritedMembers:
    - IMS_Library.IMSConfiguration.Clone
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    extensionMethods:
    - IMS_Library.ServerConfiguration.IMS_Library.IMSConfigurationUtility.FromConfiguration``1
    - IMS_Library.ServerConfiguration.IMS_Library.IMSConfigurationUtility.SaveConfiguration``1
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: IMS_Library.ServerConfiguration.ID
      commentId: F:IMS_Library.ServerConfiguration.ID
      language: CSharp
      name:
        CSharp: ID
        VB: ID
      nameWithType:
        CSharp: ServerConfiguration.ID
        VB: ServerConfiguration.ID
      qualifiedName:
        CSharp: IMS_Library.ServerConfiguration.ID
        VB: IMS_Library.ServerConfiguration.ID
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ID
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerConfiguration.cs
        startLine: 9
      syntax:
        content:
          CSharp: public Guid ID
          VB: Public ID As Guid
        return:
          type: System.Guid
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.ServerConfiguration.ServerName
      commentId: F:IMS_Library.ServerConfiguration.ServerName
      language: CSharp
      name:
        CSharp: ServerName
        VB: ServerName
      nameWithType:
        CSharp: ServerConfiguration.ServerName
        VB: ServerConfiguration.ServerName
      qualifiedName:
        CSharp: IMS_Library.ServerConfiguration.ServerName
        VB: IMS_Library.ServerConfiguration.ServerName
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ServerName
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerConfiguration.cs
        startLine: 10
      syntax:
        content:
          CSharp: public string ServerName
          VB: Public ServerName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.ServerConfiguration.Edition
      commentId: F:IMS_Library.ServerConfiguration.Edition
      language: CSharp
      name:
        CSharp: Edition
        VB: Edition
      nameWithType:
        CSharp: ServerConfiguration.Edition
        VB: ServerConfiguration.Edition
      qualifiedName:
        CSharp: IMS_Library.ServerConfiguration.Edition
        VB: IMS_Library.ServerConfiguration.Edition
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Edition
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerConfiguration.cs
        startLine: 11
      syntax:
        content:
          CSharp: public MinecraftEdition Edition
          VB: Public Edition As MinecraftEdition
        return:
          type: IMS_Library.MinecraftEdition
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.ServerConfiguration.IsEnabled
      commentId: F:IMS_Library.ServerConfiguration.IsEnabled
      language: CSharp
      name:
        CSharp: IsEnabled
        VB: IsEnabled
      nameWithType:
        CSharp: ServerConfiguration.IsEnabled
        VB: ServerConfiguration.IsEnabled
      qualifiedName:
        CSharp: IMS_Library.ServerConfiguration.IsEnabled
        VB: IMS_Library.ServerConfiguration.IsEnabled
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: IsEnabled
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerConfiguration.cs
        startLine: 12
      syntax:
        content:
          CSharp: public bool IsEnabled
          VB: Public IsEnabled As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.ServerConfiguration.WorldID
      commentId: F:IMS_Library.ServerConfiguration.WorldID
      language: CSharp
      name:
        CSharp: WorldID
        VB: WorldID
      nameWithType:
        CSharp: ServerConfiguration.WorldID
        VB: ServerConfiguration.WorldID
      qualifiedName:
        CSharp: IMS_Library.ServerConfiguration.WorldID
        VB: IMS_Library.ServerConfiguration.WorldID
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: WorldID
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerConfiguration.cs
        startLine: 13
      syntax:
        content:
          CSharp: public Guid WorldID
          VB: Public WorldID As Guid
        return:
          type: System.Guid
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.ServerConfiguration.#ctor
      commentId: M:IMS_Library.ServerConfiguration.#ctor
      language: CSharp
      name:
        CSharp: ServerConfiguration()
        VB: ServerConfiguration()
      nameWithType:
        CSharp: ServerConfiguration.ServerConfiguration()
        VB: ServerConfiguration.ServerConfiguration()
      qualifiedName:
        CSharp: IMS_Library.ServerConfiguration.ServerConfiguration()
        VB: IMS_Library.ServerConfiguration.ServerConfiguration()
      type: Constructor
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: .ctor
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerConfiguration.cs
        startLine: 15
      syntax:
        content:
          CSharp: public ServerConfiguration()
          VB: Public Sub New
      overload: IMS_Library.ServerConfiguration.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.ServerConfiguration.#ctor(System.Guid)
      commentId: M:IMS_Library.ServerConfiguration.#ctor(System.Guid)
      language: CSharp
      name:
        CSharp: ServerConfiguration(Guid)
        VB: ServerConfiguration(Guid)
      nameWithType:
        CSharp: ServerConfiguration.ServerConfiguration(Guid)
        VB: ServerConfiguration.ServerConfiguration(Guid)
      qualifiedName:
        CSharp: IMS_Library.ServerConfiguration.ServerConfiguration(System.Guid)
        VB: IMS_Library.ServerConfiguration.ServerConfiguration(System.Guid)
      type: Constructor
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: .ctor
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerConfiguration.cs
        startLine: 17
      syntax:
        content:
          CSharp: public ServerConfiguration(Guid id)
          VB: Public Sub New(id As Guid)
        parameters:
        - id: id
          type: System.Guid
      overload: IMS_Library.ServerConfiguration.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.ServerConfiguration.GetServerFolderLocation
      commentId: M:IMS_Library.ServerConfiguration.GetServerFolderLocation
      language: CSharp
      name:
        CSharp: GetServerFolderLocation()
        VB: GetServerFolderLocation()
      nameWithType:
        CSharp: ServerConfiguration.GetServerFolderLocation()
        VB: ServerConfiguration.GetServerFolderLocation()
      qualifiedName:
        CSharp: IMS_Library.ServerConfiguration.GetServerFolderLocation()
        VB: IMS_Library.ServerConfiguration.GetServerFolderLocation()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetServerFolderLocation
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerConfiguration.cs
        startLine: 22
      syntax:
        content:
          CSharp: public string GetServerFolderLocation()
          VB: Public Function GetServerFolderLocation As String
        return:
          type: System.String
      overload: IMS_Library.ServerConfiguration.GetServerFolderLocation*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.ServerConfiguration.GetDefaultFilePath
      commentId: M:IMS_Library.ServerConfiguration.GetDefaultFilePath
      language: CSharp
      name:
        CSharp: GetDefaultFilePath()
        VB: GetDefaultFilePath()
      nameWithType:
        CSharp: ServerConfiguration.GetDefaultFilePath()
        VB: ServerConfiguration.GetDefaultFilePath()
      qualifiedName:
        CSharp: IMS_Library.ServerConfiguration.GetDefaultFilePath()
        VB: IMS_Library.ServerConfiguration.GetDefaultFilePath()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetDefaultFilePath
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerConfiguration.cs
        startLine: 27
      syntax:
        content:
          CSharp: public override string GetDefaultFilePath()
          VB: Public Overrides Function GetDefaultFilePath As String
        return:
          type: System.String
      overload: IMS_Library.ServerConfiguration.GetDefaultFilePath*
      overridden: IMS_Library.IMSConfiguration.GetDefaultFilePath
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IMS_Library.ServerConfiguration.GetUsedPorts
      commentId: M:IMS_Library.ServerConfiguration.GetUsedPorts
      language: CSharp
      name:
        CSharp: GetUsedPorts()
        VB: GetUsedPorts()
      nameWithType:
        CSharp: ServerConfiguration.GetUsedPorts()
        VB: ServerConfiguration.GetUsedPorts()
      qualifiedName:
        CSharp: IMS_Library.ServerConfiguration.GetUsedPorts()
        VB: IMS_Library.ServerConfiguration.GetUsedPorts()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetUsedPorts
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerConfiguration.cs
        startLine: 32
      syntax:
        content:
          CSharp: public virtual int[] GetUsedPorts()
          VB: Public Overridable Function GetUsedPorts As Integer()
        return:
          type: System.Int32[]
      overload: IMS_Library.ServerConfiguration.GetUsedPorts*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: IMS_Library.ServerConfiguration.GetPortsToForward
      commentId: M:IMS_Library.ServerConfiguration.GetPortsToForward
      language: CSharp
      name:
        CSharp: GetPortsToForward()
        VB: GetPortsToForward()
      nameWithType:
        CSharp: ServerConfiguration.GetPortsToForward()
        VB: ServerConfiguration.GetPortsToForward()
      qualifiedName:
        CSharp: IMS_Library.ServerConfiguration.GetPortsToForward()
        VB: IMS_Library.ServerConfiguration.GetPortsToForward()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetPortsToForward
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerConfiguration.cs
        startLine: 37
      syntax:
        content:
          CSharp: public virtual int[] GetPortsToForward()
          VB: Public Overridable Function GetPortsToForward As Integer()
        return:
          type: System.Int32[]
      overload: IMS_Library.ServerConfiguration.GetPortsToForward*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: IMS_Library.ServerConfiguration.CreateServer
      commentId: M:IMS_Library.ServerConfiguration.CreateServer
      language: CSharp
      name:
        CSharp: CreateServer()
        VB: CreateServer()
      nameWithType:
        CSharp: ServerConfiguration.CreateServer()
        VB: ServerConfiguration.CreateServer()
      qualifiedName:
        CSharp: IMS_Library.ServerConfiguration.CreateServer()
        VB: IMS_Library.ServerConfiguration.CreateServer()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: CreateServer
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerConfiguration.cs
        startLine: 42
      syntax:
        content:
          CSharp: public virtual ServerProxy CreateServer()
          VB: Public Overridable Function CreateServer As ServerProxy
        return:
          type: IMS_Library.ServerProxy
      overload: IMS_Library.ServerConfiguration.CreateServer*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
  - id: IMS_Library.ServerProxy
    commentId: T:IMS_Library.ServerProxy
    language: CSharp
    name:
      CSharp: ServerProxy
      VB: ServerProxy
    nameWithType:
      CSharp: ServerProxy
      VB: ServerProxy
    qualifiedName:
      CSharp: IMS_Library.ServerProxy
      VB: IMS_Library.ServerProxy
    type: Class
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: ServerProxy
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
      startLine: 13
    summary: "\nThis class represents a Minecraft server wrapper, and provides functionality for server management.\n"
    example: []
    syntax:
      content:
        CSharp: public abstract class ServerProxy
        VB: Public MustInherit Class ServerProxy
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: IMS_Library.ServerProxy.ID
      commentId: P:IMS_Library.ServerProxy.ID
      language: CSharp
      name:
        CSharp: ID
        VB: ID
      nameWithType:
        CSharp: ServerProxy.ID
        VB: ServerProxy.ID
      qualifiedName:
        CSharp: IMS_Library.ServerProxy.ID
        VB: IMS_Library.ServerProxy.ID
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ID
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
        startLine: 18
      summary: "\nThe unique identifier of the server.\n"
      example: []
      syntax:
        content:
          CSharp: public Guid ID { get; protected set; }
          VB: Public Property ID As Guid
        parameters: []
        return:
          type: System.Guid
      overload: IMS_Library.ServerProxy.ID*
      modifiers:
        CSharp:
        - public
        - get
        - protected set
        VB:
        - Public
        - Get
        - Protected Set
    - id: IMS_Library.ServerProxy.State
      commentId: P:IMS_Library.ServerProxy.State
      language: CSharp
      name:
        CSharp: State
        VB: State
      nameWithType:
        CSharp: ServerProxy.State
        VB: ServerProxy.State
      qualifiedName:
        CSharp: IMS_Library.ServerProxy.State
        VB: IMS_Library.ServerProxy.State
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: State
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
        startLine: 22
      summary: "\nThe current state of the internal server process.\n"
      example: []
      syntax:
        content:
          CSharp: public ServerProxy.ServerState State { get; protected set; }
          VB: Public Property State As ServerProxy.ServerState
        parameters: []
        return:
          type: IMS_Library.ServerProxy.ServerState
      overload: IMS_Library.ServerProxy.State*
      modifiers:
        CSharp:
        - public
        - get
        - protected set
        VB:
        - Public
        - Get
        - Protected Set
    - id: IMS_Library.ServerProxy.CurrentConfiguration
      commentId: P:IMS_Library.ServerProxy.CurrentConfiguration
      language: CSharp
      name:
        CSharp: CurrentConfiguration
        VB: CurrentConfiguration
      nameWithType:
        CSharp: ServerProxy.CurrentConfiguration
        VB: ServerProxy.CurrentConfiguration
      qualifiedName:
        CSharp: IMS_Library.ServerProxy.CurrentConfiguration
        VB: IMS_Library.ServerProxy.CurrentConfiguration
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: CurrentConfiguration
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
        startLine: 26
      summary: "\nThe current server settings.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract ServerConfiguration CurrentConfiguration { get; set; }
          VB: Public MustOverride Property CurrentConfiguration As ServerConfiguration
        parameters: []
        return:
          type: IMS_Library.ServerConfiguration
      overload: IMS_Library.ServerProxy.CurrentConfiguration*
      modifiers:
        CSharp:
        - public
        - abstract
        - get
        - set
        VB:
        - Public
        - MustOverride
    - id: IMS_Library.ServerProxy.SupportsWhitelist
      commentId: P:IMS_Library.ServerProxy.SupportsWhitelist
      language: CSharp
      name:
        CSharp: SupportsWhitelist
        VB: SupportsWhitelist
      nameWithType:
        CSharp: ServerProxy.SupportsWhitelist
        VB: ServerProxy.SupportsWhitelist
      qualifiedName:
        CSharp: IMS_Library.ServerProxy.SupportsWhitelist
        VB: IMS_Library.ServerProxy.SupportsWhitelist
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: SupportsWhitelist
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
        startLine: 31
      summary: "\nWhether the server supports whitelisting players.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract bool SupportsWhitelist { get; }
          VB: Public MustOverride ReadOnly Property SupportsWhitelist As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: IMS_Library.ServerProxy.SupportsWhitelist*
      modifiers:
        CSharp:
        - public
        - abstract
        - get
        VB:
        - Public
        - MustOverride
        - ReadOnly
    - id: IMS_Library.ServerProxy.WhitelistEnabled
      commentId: P:IMS_Library.ServerProxy.WhitelistEnabled
      language: CSharp
      name:
        CSharp: WhitelistEnabled
        VB: WhitelistEnabled
      nameWithType:
        CSharp: ServerProxy.WhitelistEnabled
        VB: ServerProxy.WhitelistEnabled
      qualifiedName:
        CSharp: IMS_Library.ServerProxy.WhitelistEnabled
        VB: IMS_Library.ServerProxy.WhitelistEnabled
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: WhitelistEnabled
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
        startLine: 35
      summary: "\nWhether the server&apos;s whitelist is currently enabled.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract bool WhitelistEnabled { get; set; }
          VB: Public MustOverride Property WhitelistEnabled As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: IMS_Library.ServerProxy.WhitelistEnabled*
      modifiers:
        CSharp:
        - public
        - abstract
        - get
        - set
        VB:
        - Public
        - MustOverride
    - id: IMS_Library.ServerProxy.SupportsBanning
      commentId: P:IMS_Library.ServerProxy.SupportsBanning
      language: CSharp
      name:
        CSharp: SupportsBanning
        VB: SupportsBanning
      nameWithType:
        CSharp: ServerProxy.SupportsBanning
        VB: ServerProxy.SupportsBanning
      qualifiedName:
        CSharp: IMS_Library.ServerProxy.SupportsBanning
        VB: IMS_Library.ServerProxy.SupportsBanning
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: SupportsBanning
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
        startLine: 39
      summary: "\nWhether the server supports banning players.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract bool SupportsBanning { get; }
          VB: Public MustOverride ReadOnly Property SupportsBanning As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: IMS_Library.ServerProxy.SupportsBanning*
      modifiers:
        CSharp:
        - public
        - abstract
        - get
        VB:
        - Public
        - MustOverride
        - ReadOnly
    - id: IMS_Library.ServerProxy.SupportsBanningIPs
      commentId: P:IMS_Library.ServerProxy.SupportsBanningIPs
      language: CSharp
      name:
        CSharp: SupportsBanningIPs
        VB: SupportsBanningIPs
      nameWithType:
        CSharp: ServerProxy.SupportsBanningIPs
        VB: ServerProxy.SupportsBanningIPs
      qualifiedName:
        CSharp: IMS_Library.ServerProxy.SupportsBanningIPs
        VB: IMS_Library.ServerProxy.SupportsBanningIPs
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: SupportsBanningIPs
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
        startLine: 43
      summary: "\nWhether the server supports banning by IP address.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract bool SupportsBanningIPs { get; }
          VB: Public MustOverride ReadOnly Property SupportsBanningIPs As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: IMS_Library.ServerProxy.SupportsBanningIPs*
      modifiers:
        CSharp:
        - public
        - abstract
        - get
        VB:
        - Public
        - MustOverride
        - ReadOnly
    - id: IMS_Library.ServerProxy.SupportsOps
      commentId: P:IMS_Library.ServerProxy.SupportsOps
      language: CSharp
      name:
        CSharp: SupportsOps
        VB: SupportsOps
      nameWithType:
        CSharp: ServerProxy.SupportsOps
        VB: ServerProxy.SupportsOps
      qualifiedName:
        CSharp: IMS_Library.ServerProxy.SupportsOps
        VB: IMS_Library.ServerProxy.SupportsOps
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: SupportsOps
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
        startLine: 47
      summary: "\nWhether the server supports player permissions.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract bool SupportsOps { get; }
          VB: Public MustOverride ReadOnly Property SupportsOps As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: IMS_Library.ServerProxy.SupportsOps*
      modifiers:
        CSharp:
        - public
        - abstract
        - get
        VB:
        - Public
        - MustOverride
        - ReadOnly
    - id: IMS_Library.ServerProxy.SupportsIPs
      commentId: P:IMS_Library.ServerProxy.SupportsIPs
      language: CSharp
      name:
        CSharp: SupportsIPs
        VB: SupportsIPs
      nameWithType:
        CSharp: ServerProxy.SupportsIPs
        VB: ServerProxy.SupportsIPs
      qualifiedName:
        CSharp: IMS_Library.ServerProxy.SupportsIPs
        VB: IMS_Library.ServerProxy.SupportsIPs
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: SupportsIPs
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
        startLine: 51
      summary: "\nWhether the server supports gathering player IP addresses.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract bool SupportsIPs { get; }
          VB: Public MustOverride ReadOnly Property SupportsIPs As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: IMS_Library.ServerProxy.SupportsIPs*
      modifiers:
        CSharp:
        - public
        - abstract
        - get
        VB:
        - Public
        - MustOverride
        - ReadOnly
    - id: IMS_Library.ServerProxy.SupportsKicking
      commentId: P:IMS_Library.ServerProxy.SupportsKicking
      language: CSharp
      name:
        CSharp: SupportsKicking
        VB: SupportsKicking
      nameWithType:
        CSharp: ServerProxy.SupportsKicking
        VB: ServerProxy.SupportsKicking
      qualifiedName:
        CSharp: IMS_Library.ServerProxy.SupportsKicking
        VB: IMS_Library.ServerProxy.SupportsKicking
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: SupportsKicking
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
        startLine: 55
      summary: "\nWhether the server supports kicking online players.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract bool SupportsKicking { get; }
          VB: Public MustOverride ReadOnly Property SupportsKicking As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: IMS_Library.ServerProxy.SupportsKicking*
      modifiers:
        CSharp:
        - public
        - abstract
        - get
        VB:
        - Public
        - MustOverride
        - ReadOnly
    - id: IMS_Library.ServerProxy.SupportedEdition
      commentId: P:IMS_Library.ServerProxy.SupportedEdition
      language: CSharp
      name:
        CSharp: SupportedEdition
        VB: SupportedEdition
      nameWithType:
        CSharp: ServerProxy.SupportedEdition
        VB: ServerProxy.SupportedEdition
      qualifiedName:
        CSharp: IMS_Library.ServerProxy.SupportedEdition
        VB: IMS_Library.ServerProxy.SupportedEdition
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: SupportedEdition
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
        startLine: 59
      summary: "\nThe version of Minecraft that this server is targeted toward.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract MinecraftEdition SupportedEdition { get; }
          VB: Public MustOverride ReadOnly Property SupportedEdition As MinecraftEdition
        parameters: []
        return:
          type: IMS_Library.MinecraftEdition
      overload: IMS_Library.ServerProxy.SupportedEdition*
      modifiers:
        CSharp:
        - public
        - abstract
        - get
        VB:
        - Public
        - MustOverride
        - ReadOnly
    - id: IMS_Library.ServerProxy.#ctor(System.Guid)
      commentId: M:IMS_Library.ServerProxy.#ctor(System.Guid)
      language: CSharp
      name:
        CSharp: ServerProxy(Guid)
        VB: ServerProxy(Guid)
      nameWithType:
        CSharp: ServerProxy.ServerProxy(Guid)
        VB: ServerProxy.ServerProxy(Guid)
      qualifiedName:
        CSharp: IMS_Library.ServerProxy.ServerProxy(System.Guid)
        VB: IMS_Library.ServerProxy.ServerProxy(System.Guid)
      type: Constructor
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: .ctor
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
        startLine: 65
      summary: "\nCreates a new <xref href=\"IMS_Library.ServerProxy\" data-throw-if-not-resolved=\"false\"></xref> instance with the specified unique identifier.\n"
      example: []
      syntax:
        content:
          CSharp: public ServerProxy(Guid guid)
          VB: Public Sub New(guid As Guid)
        parameters:
        - id: guid
          type: System.Guid
          description: The unique identifier that the server should be associated with.
      overload: IMS_Library.ServerProxy.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        IMS_Library.ServerProxy: 
    - id: IMS_Library.ServerProxy.StartAsync
      commentId: M:IMS_Library.ServerProxy.StartAsync
      language: CSharp
      name:
        CSharp: StartAsync()
        VB: StartAsync()
      nameWithType:
        CSharp: ServerProxy.StartAsync()
        VB: ServerProxy.StartAsync()
      qualifiedName:
        CSharp: IMS_Library.ServerProxy.StartAsync()
        VB: IMS_Library.ServerProxy.StartAsync()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: StartAsync
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
        startLine: 73
      summary: "\nStarts the Minecraft server.  This call does not complete until the Minecraft server is in the <xref href=\"IMS_Library.ServerProxy.ServerState.Running\" data-throw-if-not-resolved=\"false\"></xref> phase.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract Task StartAsync()
          VB: Public MustOverride Function StartAsync As Task
        return:
          type: System.Threading.Tasks.Task
          description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the state of the start operation.
      overload: IMS_Library.ServerProxy.StartAsync*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
      references:
        IMS_Library.ServerProxy.ServerState.Running: 
        System.Threading.Tasks.Task: 
    - id: IMS_Library.ServerProxy.StopAsync
      commentId: M:IMS_Library.ServerProxy.StopAsync
      language: CSharp
      name:
        CSharp: StopAsync()
        VB: StopAsync()
      nameWithType:
        CSharp: ServerProxy.StopAsync()
        VB: ServerProxy.StopAsync()
      qualifiedName:
        CSharp: IMS_Library.ServerProxy.StopAsync()
        VB: IMS_Library.ServerProxy.StopAsync()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: StopAsync
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
        startLine: 78
      summary: "\nStops the Minecraft server.  This call does not complete until the Minecraft server is in the <xref href=\"IMS_Library.ServerProxy.ServerState.Disabled\" data-throw-if-not-resolved=\"false\"></xref> phase.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract Task StopAsync()
          VB: Public MustOverride Function StopAsync As Task
        return:
          type: System.Threading.Tasks.Task
          description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the state of the stop operation.
      overload: IMS_Library.ServerProxy.StopAsync*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
      references:
        IMS_Library.ServerProxy.ServerState.Disabled: 
        System.Threading.Tasks.Task: 
    - id: IMS_Library.ServerProxy.RestartAsync
      commentId: M:IMS_Library.ServerProxy.RestartAsync
      language: CSharp
      name:
        CSharp: RestartAsync()
        VB: RestartAsync()
      nameWithType:
        CSharp: ServerProxy.RestartAsync()
        VB: ServerProxy.RestartAsync()
      qualifiedName:
        CSharp: IMS_Library.ServerProxy.RestartAsync()
        VB: IMS_Library.ServerProxy.RestartAsync()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: RestartAsync
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
        startLine: 83
      summary: "\nRestarts the Minecraft server.  This call does not complete until the Minecraft server has restarted and is in the <xref href=\"IMS_Library.ServerProxy.ServerState.Running\" data-throw-if-not-resolved=\"false\"></xref> phase.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract Task RestartAsync()
          VB: Public MustOverride Function RestartAsync As Task
        return:
          type: System.Threading.Tasks.Task
          description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the state of the restart operation.
      overload: IMS_Library.ServerProxy.RestartAsync*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
      references:
        IMS_Library.ServerProxy.ServerState.Running: 
        System.Threading.Tasks.Task: 
    - id: IMS_Library.ServerProxy.GetPlayerInformationByUsername(System.String)
      commentId: M:IMS_Library.ServerProxy.GetPlayerInformationByUsername(System.String)
      language: CSharp
      name:
        CSharp: GetPlayerInformationByUsername(String)
        VB: GetPlayerInformationByUsername(String)
      nameWithType:
        CSharp: ServerProxy.GetPlayerInformationByUsername(String)
        VB: ServerProxy.GetPlayerInformationByUsername(String)
      qualifiedName:
        CSharp: IMS_Library.ServerProxy.GetPlayerInformationByUsername(System.String)
        VB: IMS_Library.ServerProxy.GetPlayerInformationByUsername(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetPlayerInformationByUsername
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
        startLine: 89
      summary: "\nRetrieves a Minecraft player&apos;s data by their username.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract MinecraftPlayer GetPlayerInformationByUsername(string username)
          VB: Public MustOverride Function GetPlayerInformationByUsername(username As String) As MinecraftPlayer
        parameters:
        - id: username
          type: System.String
          description: The username of the player to find.
        return:
          type: IMS_Library.MinecraftPlayer
          description: An object with information about the player, or null if no player was found..
      overload: IMS_Library.ServerProxy.GetPlayerInformationByUsername*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: IMS_Library.ServerProxy.GetPlayerInformationByUUID(System.String)
      commentId: M:IMS_Library.ServerProxy.GetPlayerInformationByUUID(System.String)
      language: CSharp
      name:
        CSharp: GetPlayerInformationByUUID(String)
        VB: GetPlayerInformationByUUID(String)
      nameWithType:
        CSharp: ServerProxy.GetPlayerInformationByUUID(String)
        VB: ServerProxy.GetPlayerInformationByUUID(String)
      qualifiedName:
        CSharp: IMS_Library.ServerProxy.GetPlayerInformationByUUID(System.String)
        VB: IMS_Library.ServerProxy.GetPlayerInformationByUUID(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetPlayerInformationByUUID
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
        startLine: 95
      summary: "\nRetrieves a Minecraft player&apos;s data by their UUID.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract MinecraftPlayer GetPlayerInformationByUUID(string uuid)
          VB: Public MustOverride Function GetPlayerInformationByUUID(uuid As String) As MinecraftPlayer
        parameters:
        - id: uuid
          type: System.String
          description: The unique identifier of the player to find.
        return:
          type: IMS_Library.MinecraftPlayer
          description: An object with information about the player, or null if no player was found.
      overload: IMS_Library.ServerProxy.GetPlayerInformationByUUID*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: IMS_Library.ServerProxy.GetOnlinePlayers
      commentId: M:IMS_Library.ServerProxy.GetOnlinePlayers
      language: CSharp
      name:
        CSharp: GetOnlinePlayers()
        VB: GetOnlinePlayers()
      nameWithType:
        CSharp: ServerProxy.GetOnlinePlayers()
        VB: ServerProxy.GetOnlinePlayers()
      qualifiedName:
        CSharp: IMS_Library.ServerProxy.GetOnlinePlayers()
        VB: IMS_Library.ServerProxy.GetOnlinePlayers()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetOnlinePlayers
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
        startLine: 100
      summary: "\nRetrieves a list of players currently logged onto the Minecraft server.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract IEnumerable<MinecraftPlayer> GetOnlinePlayers()
          VB: Public MustOverride Function GetOnlinePlayers As IEnumerable(Of MinecraftPlayer)
        return:
          type: System.Collections.Generic.IEnumerable{IMS_Library.MinecraftPlayer}
          description: A list of players.
      overload: IMS_Library.ServerProxy.GetOnlinePlayers*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: IMS_Library.ServerProxy.GetAllPlayers
      commentId: M:IMS_Library.ServerProxy.GetAllPlayers
      language: CSharp
      name:
        CSharp: GetAllPlayers()
        VB: GetAllPlayers()
      nameWithType:
        CSharp: ServerProxy.GetAllPlayers()
        VB: ServerProxy.GetAllPlayers()
      qualifiedName:
        CSharp: IMS_Library.ServerProxy.GetAllPlayers()
        VB: IMS_Library.ServerProxy.GetAllPlayers()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetAllPlayers
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
        startLine: 105
      summary: "\nRetrieves a list of all players who have logged onto the Minecraft server.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract IEnumerable<MinecraftPlayer> GetAllPlayers()
          VB: Public MustOverride Function GetAllPlayers As IEnumerable(Of MinecraftPlayer)
        return:
          type: System.Collections.Generic.IEnumerable{IMS_Library.MinecraftPlayer}
          description: A list of players.
      overload: IMS_Library.ServerProxy.GetAllPlayers*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: IMS_Library.ServerProxy.GetAllOps
      commentId: M:IMS_Library.ServerProxy.GetAllOps
      language: CSharp
      name:
        CSharp: GetAllOps()
        VB: GetAllOps()
      nameWithType:
        CSharp: ServerProxy.GetAllOps()
        VB: ServerProxy.GetAllOps()
      qualifiedName:
        CSharp: IMS_Library.ServerProxy.GetAllOps()
        VB: IMS_Library.ServerProxy.GetAllOps()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetAllOps
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
        startLine: 110
      summary: "\nRetrieves a list of all server operators registered on the server.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract IEnumerable<MinecraftPlayer> GetAllOps()
          VB: Public MustOverride Function GetAllOps As IEnumerable(Of MinecraftPlayer)
        return:
          type: System.Collections.Generic.IEnumerable{IMS_Library.MinecraftPlayer}
          description: A list of players.
      overload: IMS_Library.ServerProxy.GetAllOps*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: IMS_Library.ServerProxy.GetAllBans
      commentId: M:IMS_Library.ServerProxy.GetAllBans
      language: CSharp
      name:
        CSharp: GetAllBans()
        VB: GetAllBans()
      nameWithType:
        CSharp: ServerProxy.GetAllBans()
        VB: ServerProxy.GetAllBans()
      qualifiedName:
        CSharp: IMS_Library.ServerProxy.GetAllBans()
        VB: IMS_Library.ServerProxy.GetAllBans()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetAllBans
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
        startLine: 115
      summary: "\nRetrieves a list of all players banned from the server.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract List<BanInformation> GetAllBans()
          VB: Public MustOverride Function GetAllBans As List(Of BanInformation)
        return:
          type: System.Collections.Generic.List{IMS_Library.BanInformation}
          description: A list of players.
      overload: IMS_Library.ServerProxy.GetAllBans*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: IMS_Library.ServerProxy.GetAllBannedIPs
      commentId: M:IMS_Library.ServerProxy.GetAllBannedIPs
      language: CSharp
      name:
        CSharp: GetAllBannedIPs()
        VB: GetAllBannedIPs()
      nameWithType:
        CSharp: ServerProxy.GetAllBannedIPs()
        VB: ServerProxy.GetAllBannedIPs()
      qualifiedName:
        CSharp: IMS_Library.ServerProxy.GetAllBannedIPs()
        VB: IMS_Library.ServerProxy.GetAllBannedIPs()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetAllBannedIPs
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
        startLine: 120
      summary: "\nRetrieves a list of all IPs banned from the server.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract List<BanIPTag> GetAllBannedIPs()
          VB: Public MustOverride Function GetAllBannedIPs As List(Of BanIPTag)
        return:
          type: System.Collections.Generic.List{IMS_Library.BanIPTag}
          description: A list of IP ban information.
      overload: IMS_Library.ServerProxy.GetAllBannedIPs*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: IMS_Library.ServerProxy.GetAllWhitelistedPlayers
      commentId: M:IMS_Library.ServerProxy.GetAllWhitelistedPlayers
      language: CSharp
      name:
        CSharp: GetAllWhitelistedPlayers()
        VB: GetAllWhitelistedPlayers()
      nameWithType:
        CSharp: ServerProxy.GetAllWhitelistedPlayers()
        VB: ServerProxy.GetAllWhitelistedPlayers()
      qualifiedName:
        CSharp: IMS_Library.ServerProxy.GetAllWhitelistedPlayers()
        VB: IMS_Library.ServerProxy.GetAllWhitelistedPlayers()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetAllWhitelistedPlayers
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
        startLine: 125
      summary: "\nRetrieves a list of all players currently whitelisted on the server.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract IEnumerable<MinecraftPlayer> GetAllWhitelistedPlayers()
          VB: Public MustOverride Function GetAllWhitelistedPlayers As IEnumerable(Of MinecraftPlayer)
        return:
          type: System.Collections.Generic.IEnumerable{IMS_Library.MinecraftPlayer}
          description: A list of players.
      overload: IMS_Library.ServerProxy.GetAllWhitelistedPlayers*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: IMS_Library.ServerProxy.WhitelistPlayer(System.String)
      commentId: M:IMS_Library.ServerProxy.WhitelistPlayer(System.String)
      language: CSharp
      name:
        CSharp: WhitelistPlayer(String)
        VB: WhitelistPlayer(String)
      nameWithType:
        CSharp: ServerProxy.WhitelistPlayer(String)
        VB: ServerProxy.WhitelistPlayer(String)
      qualifiedName:
        CSharp: IMS_Library.ServerProxy.WhitelistPlayer(System.String)
        VB: IMS_Library.ServerProxy.WhitelistPlayer(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: WhitelistPlayer
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
        startLine: 130
      summary: "\nAdds a player to the server whitelist.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void WhitelistPlayer(string name)
          VB: Public MustOverride Sub WhitelistPlayer(name As String)
        parameters:
        - id: name
          type: System.String
          description: The name of the player to whitelist.
      overload: IMS_Library.ServerProxy.WhitelistPlayer*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: IMS_Library.ServerProxy.RemoveWhitelistPlayer(System.String)
      commentId: M:IMS_Library.ServerProxy.RemoveWhitelistPlayer(System.String)
      language: CSharp
      name:
        CSharp: RemoveWhitelistPlayer(String)
        VB: RemoveWhitelistPlayer(String)
      nameWithType:
        CSharp: ServerProxy.RemoveWhitelistPlayer(String)
        VB: ServerProxy.RemoveWhitelistPlayer(String)
      qualifiedName:
        CSharp: IMS_Library.ServerProxy.RemoveWhitelistPlayer(System.String)
        VB: IMS_Library.ServerProxy.RemoveWhitelistPlayer(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: RemoveWhitelistPlayer
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
        startLine: 135
      summary: "\nRemoves a player from the server whitelist.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void RemoveWhitelistPlayer(string name)
          VB: Public MustOverride Sub RemoveWhitelistPlayer(name As String)
        parameters:
        - id: name
          type: System.String
          description: The name of the player to remove.
      overload: IMS_Library.ServerProxy.RemoveWhitelistPlayer*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: IMS_Library.ServerProxy.OpPlayer(System.String)
      commentId: M:IMS_Library.ServerProxy.OpPlayer(System.String)
      language: CSharp
      name:
        CSharp: OpPlayer(String)
        VB: OpPlayer(String)
      nameWithType:
        CSharp: ServerProxy.OpPlayer(String)
        VB: ServerProxy.OpPlayer(String)
      qualifiedName:
        CSharp: IMS_Library.ServerProxy.OpPlayer(System.String)
        VB: IMS_Library.ServerProxy.OpPlayer(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: OpPlayer
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
        startLine: 140
      summary: "\nMakes a player a server operator.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void OpPlayer(string name)
          VB: Public MustOverride Sub OpPlayer(name As String)
        parameters:
        - id: name
          type: System.String
          description: The name of the player to promote.
      overload: IMS_Library.ServerProxy.OpPlayer*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: IMS_Library.ServerProxy.DeopPlayer(System.String)
      commentId: M:IMS_Library.ServerProxy.DeopPlayer(System.String)
      language: CSharp
      name:
        CSharp: DeopPlayer(String)
        VB: DeopPlayer(String)
      nameWithType:
        CSharp: ServerProxy.DeopPlayer(String)
        VB: ServerProxy.DeopPlayer(String)
      qualifiedName:
        CSharp: IMS_Library.ServerProxy.DeopPlayer(System.String)
        VB: IMS_Library.ServerProxy.DeopPlayer(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: DeopPlayer
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
        startLine: 145
      summary: "\nRevokes a player&apos;s server operator status.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void DeopPlayer(string name)
          VB: Public MustOverride Sub DeopPlayer(name As String)
        parameters:
        - id: name
          type: System.String
          description: The name of the player to demote.
      overload: IMS_Library.ServerProxy.DeopPlayer*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: IMS_Library.ServerProxy.KickPlayer(System.String,System.String)
      commentId: M:IMS_Library.ServerProxy.KickPlayer(System.String,System.String)
      language: CSharp
      name:
        CSharp: KickPlayer(String, String)
        VB: KickPlayer(String, String)
      nameWithType:
        CSharp: ServerProxy.KickPlayer(String, String)
        VB: ServerProxy.KickPlayer(String, String)
      qualifiedName:
        CSharp: IMS_Library.ServerProxy.KickPlayer(System.String, System.String)
        VB: IMS_Library.ServerProxy.KickPlayer(System.String, System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: KickPlayer
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
        startLine: 151
      summary: "\nKicks a player from the Minecraft server.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void KickPlayer(string name, string reason)
          VB: Public MustOverride Sub KickPlayer(name As String, reason As String)
        parameters:
        - id: name
          type: System.String
          description: The name of the player to disconnect.
        - id: reason
          type: System.String
          description: The disconnection reason that should display on the player&apos;s screen.
      overload: IMS_Library.ServerProxy.KickPlayer*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: IMS_Library.ServerProxy.BanPlayer(System.String,System.String)
      commentId: M:IMS_Library.ServerProxy.BanPlayer(System.String,System.String)
      language: CSharp
      name:
        CSharp: BanPlayer(String, String)
        VB: BanPlayer(String, String)
      nameWithType:
        CSharp: ServerProxy.BanPlayer(String, String)
        VB: ServerProxy.BanPlayer(String, String)
      qualifiedName:
        CSharp: IMS_Library.ServerProxy.BanPlayer(System.String, System.String)
        VB: IMS_Library.ServerProxy.BanPlayer(System.String, System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: BanPlayer
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
        startLine: 157
      summary: "\nPermanently bans a player from the server.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void BanPlayer(string name, string reason)
          VB: Public MustOverride Sub BanPlayer(name As String, reason As String)
        parameters:
        - id: name
          type: System.String
          description: The name of the player to banish.
        - id: reason
          type: System.String
          description: The reason for banning that should display on the player&apos;s screen.
      overload: IMS_Library.ServerProxy.BanPlayer*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: IMS_Library.ServerProxy.BanIP(System.String,System.String)
      commentId: M:IMS_Library.ServerProxy.BanIP(System.String,System.String)
      language: CSharp
      name:
        CSharp: BanIP(String, String)
        VB: BanIP(String, String)
      nameWithType:
        CSharp: ServerProxy.BanIP(String, String)
        VB: ServerProxy.BanIP(String, String)
      qualifiedName:
        CSharp: IMS_Library.ServerProxy.BanIP(System.String, System.String)
        VB: IMS_Library.ServerProxy.BanIP(System.String, System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: BanIP
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
        startLine: 163
      summary: "\nPermanently bans an IP address from the server.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void BanIP(string ip, string reason)
          VB: Public MustOverride Sub BanIP(ip As String, reason As String)
        parameters:
        - id: ip
          type: System.String
          description: The IP to ban.
        - id: reason
          type: System.String
          description: The reason for banning that should display on the players&apos; screens who have this IP.
      overload: IMS_Library.ServerProxy.BanIP*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: IMS_Library.ServerProxy.UnbanPlayer(System.String)
      commentId: M:IMS_Library.ServerProxy.UnbanPlayer(System.String)
      language: CSharp
      name:
        CSharp: UnbanPlayer(String)
        VB: UnbanPlayer(String)
      nameWithType:
        CSharp: ServerProxy.UnbanPlayer(String)
        VB: ServerProxy.UnbanPlayer(String)
      qualifiedName:
        CSharp: IMS_Library.ServerProxy.UnbanPlayer(System.String)
        VB: IMS_Library.ServerProxy.UnbanPlayer(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: UnbanPlayer
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
        startLine: 168
      summary: "\nLifts a player&apos;s ban, allowing them to rejoin the server.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void UnbanPlayer(string name)
          VB: Public MustOverride Sub UnbanPlayer(name As String)
        parameters:
        - id: name
          type: System.String
          description: The name of the player to unban.
      overload: IMS_Library.ServerProxy.UnbanPlayer*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: IMS_Library.ServerProxy.UnbanIP(System.String)
      commentId: M:IMS_Library.ServerProxy.UnbanIP(System.String)
      language: CSharp
      name:
        CSharp: UnbanIP(String)
        VB: UnbanIP(String)
      nameWithType:
        CSharp: ServerProxy.UnbanIP(String)
        VB: ServerProxy.UnbanIP(String)
      qualifiedName:
        CSharp: IMS_Library.ServerProxy.UnbanIP(System.String)
        VB: IMS_Library.ServerProxy.UnbanIP(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: UnbanIP
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
        startLine: 173
      summary: "\nLifts an IP address ban, allowing those with the address to rejoin the server.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void UnbanIP(string ip)
          VB: Public MustOverride Sub UnbanIP(ip As String)
        parameters:
        - id: ip
          type: System.String
          description: The IP address to unban.
      overload: IMS_Library.ServerProxy.UnbanIP*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: IMS_Library.ServerProxy.SendConsoleCommand(System.String)
      commentId: M:IMS_Library.ServerProxy.SendConsoleCommand(System.String)
      language: CSharp
      name:
        CSharp: SendConsoleCommand(String)
        VB: SendConsoleCommand(String)
      nameWithType:
        CSharp: ServerProxy.SendConsoleCommand(String)
        VB: ServerProxy.SendConsoleCommand(String)
      qualifiedName:
        CSharp: IMS_Library.ServerProxy.SendConsoleCommand(System.String)
        VB: IMS_Library.ServerProxy.SendConsoleCommand(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: SendConsoleCommand
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
        startLine: 178
      summary: "\nSends a command to the server&apos;s input console.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void SendConsoleCommand(string command)
          VB: Public MustOverride Sub SendConsoleCommand(command As String)
        parameters:
        - id: command
          type: System.String
          description: The command to send.
      overload: IMS_Library.ServerProxy.SendConsoleCommand*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: IMS_Library.ServerProxy.GetConsoleText
      commentId: M:IMS_Library.ServerProxy.GetConsoleText
      language: CSharp
      name:
        CSharp: GetConsoleText()
        VB: GetConsoleText()
      nameWithType:
        CSharp: ServerProxy.GetConsoleText()
        VB: ServerProxy.GetConsoleText()
      qualifiedName:
        CSharp: IMS_Library.ServerProxy.GetConsoleText()
        VB: IMS_Library.ServerProxy.GetConsoleText()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetConsoleText
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
        startLine: 183
      summary: "\nRetrieves a reasonably large number of lines of recent output from the Minecraft server console.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract string GetConsoleText()
          VB: Public MustOverride Function GetConsoleText As String
        return:
          type: System.String
          description: A block of recent server console text.
      overload: IMS_Library.ServerProxy.GetConsoleText*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: IMS_Library.ServerProxy.ReloadServerWhitelist
      commentId: M:IMS_Library.ServerProxy.ReloadServerWhitelist
      language: CSharp
      name:
        CSharp: ReloadServerWhitelist()
        VB: ReloadServerWhitelist()
      nameWithType:
        CSharp: ServerProxy.ReloadServerWhitelist()
        VB: ServerProxy.ReloadServerWhitelist()
      qualifiedName:
        CSharp: IMS_Library.ServerProxy.ReloadServerWhitelist()
        VB: IMS_Library.ServerProxy.ReloadServerWhitelist()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ReloadServerWhitelist
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
        startLine: 187
      summary: "\nReloads the server whitelist from the server whitelist file.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void ReloadServerWhitelist()
          VB: Public MustOverride Sub ReloadServerWhitelist
      overload: IMS_Library.ServerProxy.ReloadServerWhitelist*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: IMS_Library.ServerProxy.ReloadServerPermissions
      commentId: M:IMS_Library.ServerProxy.ReloadServerPermissions
      language: CSharp
      name:
        CSharp: ReloadServerPermissions()
        VB: ReloadServerPermissions()
      nameWithType:
        CSharp: ServerProxy.ReloadServerPermissions()
        VB: ServerProxy.ReloadServerPermissions()
      qualifiedName:
        CSharp: IMS_Library.ServerProxy.ReloadServerPermissions()
        VB: IMS_Library.ServerProxy.ReloadServerPermissions()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ReloadServerPermissions
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
        startLine: 191
      summary: "\nReloads the server permissions list from the server whitelist file.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void ReloadServerPermissions()
          VB: Public MustOverride Sub ReloadServerPermissions
      overload: IMS_Library.ServerProxy.ReloadServerPermissions*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: IMS_Library.ServerProxy.GetLogFiles
      commentId: M:IMS_Library.ServerProxy.GetLogFiles
      language: CSharp
      name:
        CSharp: GetLogFiles()
        VB: GetLogFiles()
      nameWithType:
        CSharp: ServerProxy.GetLogFiles()
        VB: ServerProxy.GetLogFiles()
      qualifiedName:
        CSharp: IMS_Library.ServerProxy.GetLogFiles()
        VB: IMS_Library.ServerProxy.GetLogFiles()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetLogFiles
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
        startLine: 196
      summary: "\nRetrieves a list of all currently-existing Minecraft server logfiles.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract List<LogFileInformation> GetLogFiles()
          VB: Public MustOverride Function GetLogFiles As List(Of LogFileInformation)
        return:
          type: System.Collections.Generic.List{IMS_Library.LogFileInformation}
          description: A list containing information about each logfile.
      overload: IMS_Library.ServerProxy.GetLogFiles*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: IMS_Library.ServerProxy.GetLogFile(System.String)
      commentId: M:IMS_Library.ServerProxy.GetLogFile(System.String)
      language: CSharp
      name:
        CSharp: GetLogFile(String)
        VB: GetLogFile(String)
      nameWithType:
        CSharp: ServerProxy.GetLogFile(String)
        VB: ServerProxy.GetLogFile(String)
      qualifiedName:
        CSharp: IMS_Library.ServerProxy.GetLogFile(System.String)
        VB: IMS_Library.ServerProxy.GetLogFile(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetLogFile
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
        startLine: 202
      summary: "\nRetrieves the text of a logfile based on its name.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract string GetLogFile(string name)
          VB: Public MustOverride Function GetLogFile(name As String) As String
        parameters:
        - id: name
          type: System.String
          description: The name of the logfile to retrieve.
        return:
          type: System.String
          description: The text inside the logfile.
      overload: IMS_Library.ServerProxy.GetLogFile*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: IMS_Library.ServerProxy.BackupToLocationAsync(System.String)
      commentId: M:IMS_Library.ServerProxy.BackupToLocationAsync(System.String)
      language: CSharp
      name:
        CSharp: BackupToLocationAsync(String)
        VB: BackupToLocationAsync(String)
      nameWithType:
        CSharp: ServerProxy.BackupToLocationAsync(String)
        VB: ServerProxy.BackupToLocationAsync(String)
      qualifiedName:
        CSharp: IMS_Library.ServerProxy.BackupToLocationAsync(System.String)
        VB: IMS_Library.ServerProxy.BackupToLocationAsync(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: BackupToLocationAsync
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
        startLine: 208
      summary: "\nCopies the current server world to a specified location on disk.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract Task BackupToLocationAsync(string location)
          VB: Public MustOverride Function BackupToLocationAsync(location As String) As Task
        parameters:
        - id: location
          type: System.String
          description: The absolute path of the folder to copy the current Minecraft world to.
        return:
          type: System.Threading.Tasks.Task
          description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object representing the current state of the backup operation.
      overload: IMS_Library.ServerProxy.BackupToLocationAsync*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
      references:
        System.Threading.Tasks.Task: 
    - id: IMS_Library.ServerProxy.BackupToZipFileAsync(System.String)
      commentId: M:IMS_Library.ServerProxy.BackupToZipFileAsync(System.String)
      language: CSharp
      name:
        CSharp: BackupToZipFileAsync(String)
        VB: BackupToZipFileAsync(String)
      nameWithType:
        CSharp: ServerProxy.BackupToZipFileAsync(String)
        VB: ServerProxy.BackupToZipFileAsync(String)
      qualifiedName:
        CSharp: IMS_Library.ServerProxy.BackupToZipFileAsync(System.String)
        VB: IMS_Library.ServerProxy.BackupToZipFileAsync(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: BackupToZipFileAsync
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
        startLine: 214
      summary: "\nCopies the current server world to a zip file.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract Task BackupToZipFileAsync(string file)
          VB: Public MustOverride Function BackupToZipFileAsync(file As String) As Task
        parameters:
        - id: file
          type: System.String
          description: The absolute path of the zip file to make of the current Minecraft world.
        return:
          type: System.Threading.Tasks.Task
          description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object representing the current state of the backup operation.
      overload: IMS_Library.ServerProxy.BackupToZipFileAsync*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
      references:
        System.Threading.Tasks.Task: 
    - id: IMS_Library.ServerProxy.GetDefaultServerConfiguration
      commentId: M:IMS_Library.ServerProxy.GetDefaultServerConfiguration
      language: CSharp
      name:
        CSharp: GetDefaultServerConfiguration()
        VB: GetDefaultServerConfiguration()
      nameWithType:
        CSharp: ServerProxy.GetDefaultServerConfiguration()
        VB: ServerProxy.GetDefaultServerConfiguration()
      qualifiedName:
        CSharp: IMS_Library.ServerProxy.GetDefaultServerConfiguration()
        VB: IMS_Library.ServerProxy.GetDefaultServerConfiguration()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetDefaultServerConfiguration
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
        startLine: 220
      summary: "\nLoads the server&apos;s previous settings from disk.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual ServerConfiguration GetDefaultServerConfiguration()
          VB: Public Overridable Function GetDefaultServerConfiguration As ServerConfiguration
        return:
          type: IMS_Library.ServerConfiguration
          description: A configuration object representing the loaded server settings.
      overload: IMS_Library.ServerProxy.GetDefaultServerConfiguration*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
  - id: IMS_Library.ServerProxy.ServerState
    commentId: T:IMS_Library.ServerProxy.ServerState
    language: CSharp
    name:
      CSharp: ServerProxy.ServerState
      VB: ServerProxy.ServerState
    nameWithType:
      CSharp: ServerProxy.ServerState
      VB: ServerProxy.ServerState
    qualifiedName:
      CSharp: IMS_Library.ServerProxy.ServerState
      VB: IMS_Library.ServerProxy.ServerState
    type: Enum
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: ServerState
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
      startLine: 228
    summary: "\nThis enum is used to represent the current state of the internal server process.\n"
    example: []
    syntax:
      content:
        CSharp: public enum ServerState
        VB: Public Enum ServerState
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: IMS_Library.ServerProxy.ServerState.Disabled
      commentId: F:IMS_Library.ServerProxy.ServerState.Disabled
      language: CSharp
      name:
        CSharp: Disabled
        VB: Disabled
      nameWithType:
        CSharp: ServerProxy.ServerState.Disabled
        VB: ServerProxy.ServerState.Disabled
      qualifiedName:
        CSharp: IMS_Library.ServerProxy.ServerState.Disabled
        VB: IMS_Library.ServerProxy.ServerState.Disabled
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Disabled
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
        startLine: 232
      summary: "\nThe server is not currently running.\n"
      example: []
      syntax:
        content:
          CSharp: Disabled = 0
          VB: Disabled = 0
        return:
          type: IMS_Library.ServerProxy.ServerState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: IMS_Library.ServerProxy.ServerState.Starting
      commentId: F:IMS_Library.ServerProxy.ServerState.Starting
      language: CSharp
      name:
        CSharp: Starting
        VB: Starting
      nameWithType:
        CSharp: ServerProxy.ServerState.Starting
        VB: ServerProxy.ServerState.Starting
      qualifiedName:
        CSharp: IMS_Library.ServerProxy.ServerState.Starting
        VB: IMS_Library.ServerProxy.ServerState.Starting
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Starting
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
        startLine: 236
      summary: "\nThe server is loading files from disk, but is not ready to accept players yet.\n"
      example: []
      syntax:
        content:
          CSharp: Starting = 1
          VB: Starting = 1
        return:
          type: IMS_Library.ServerProxy.ServerState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: IMS_Library.ServerProxy.ServerState.Running
      commentId: F:IMS_Library.ServerProxy.ServerState.Running
      language: CSharp
      name:
        CSharp: Running
        VB: Running
      nameWithType:
        CSharp: ServerProxy.ServerState.Running
        VB: ServerProxy.ServerState.Running
      qualifiedName:
        CSharp: IMS_Library.ServerProxy.ServerState.Running
        VB: IMS_Library.ServerProxy.ServerState.Running
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Running
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
        startLine: 240
      summary: "\nThe server is running and players can join/interact with the Minecraft world.\n"
      example: []
      syntax:
        content:
          CSharp: Running = 2
          VB: Running = 2
        return:
          type: IMS_Library.ServerProxy.ServerState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: IMS_Library.ServerProxy.ServerState.Stopping
      commentId: F:IMS_Library.ServerProxy.ServerState.Stopping
      language: CSharp
      name:
        CSharp: Stopping
        VB: Stopping
      nameWithType:
        CSharp: ServerProxy.ServerState.Stopping
        VB: ServerProxy.ServerState.Stopping
      qualifiedName:
        CSharp: IMS_Library.ServerProxy.ServerState.Stopping
        VB: IMS_Library.ServerProxy.ServerState.Stopping
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Stopping
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerProxy.cs
        startLine: 244
      summary: "\nThe server is saving its files and shutting down.\n"
      example: []
      syntax:
        content:
          CSharp: Stopping = 3
          VB: Stopping = 3
        return:
          type: IMS_Library.ServerProxy.ServerState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: IMS_Library.ServerVersionInformation
    commentId: T:IMS_Library.ServerVersionInformation
    language: CSharp
    name:
      CSharp: ServerVersionInformation
      VB: ServerVersionInformation
    nameWithType:
      CSharp: ServerVersionInformation
      VB: ServerVersionInformation
    qualifiedName:
      CSharp: IMS_Library.ServerVersionInformation
      VB: IMS_Library.ServerVersionInformation
    type: Class
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: ServerVersionInformation
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerVersionInformation.cs
      startLine: 13
    summary: "\nInstances of this class contain information about a particular Minecraft server version.\n"
    example: []
    syntax:
      content:
        CSharp: public class ServerVersionInformation
        VB: Public Class ServerVersionInformation
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: IMS_Library.ServerVersionInformation.Name
      commentId: F:IMS_Library.ServerVersionInformation.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: ServerVersionInformation.Name
        VB: ServerVersionInformation.Name
      qualifiedName:
        CSharp: IMS_Library.ServerVersionInformation.Name
        VB: IMS_Library.ServerVersionInformation.Name
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Name
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerVersionInformation.cs
        startLine: 18
      summary: "\nThe display name of the server version.\n"
      example: []
      syntax:
        content:
          CSharp: public string Name
          VB: Public Name As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.ServerVersionInformation.Version
      commentId: F:IMS_Library.ServerVersionInformation.Version
      language: CSharp
      name:
        CSharp: Version
        VB: Version
      nameWithType:
        CSharp: ServerVersionInformation.Version
        VB: ServerVersionInformation.Version
      qualifiedName:
        CSharp: IMS_Library.ServerVersionInformation.Version
        VB: IMS_Library.ServerVersionInformation.Version
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Version
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerVersionInformation.cs
        startLine: 22
      summary: "\nThe official Minecraft version code.\n"
      example: []
      syntax:
        content:
          CSharp: public string Version
          VB: Public Version As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.ServerVersionInformation.ReleaseTime
      commentId: F:IMS_Library.ServerVersionInformation.ReleaseTime
      language: CSharp
      name:
        CSharp: ReleaseTime
        VB: ReleaseTime
      nameWithType:
        CSharp: ServerVersionInformation.ReleaseTime
        VB: ServerVersionInformation.ReleaseTime
      qualifiedName:
        CSharp: IMS_Library.ServerVersionInformation.ReleaseTime
        VB: IMS_Library.ServerVersionInformation.ReleaseTime
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ReleaseTime
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerVersionInformation.cs
        startLine: 26
      summary: "\nThe time at which this Minecraft version was released.\n"
      example: []
      syntax:
        content:
          CSharp: public DateTime ReleaseTime
          VB: Public ReleaseTime As Date
        return:
          type: System.DateTime
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.ServerVersionInformation.Edition
      commentId: F:IMS_Library.ServerVersionInformation.Edition
      language: CSharp
      name:
        CSharp: Edition
        VB: Edition
      nameWithType:
        CSharp: ServerVersionInformation.Edition
        VB: ServerVersionInformation.Edition
      qualifiedName:
        CSharp: IMS_Library.ServerVersionInformation.Edition
        VB: IMS_Library.ServerVersionInformation.Edition
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Edition
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerVersionInformation.cs
        startLine: 30
      summary: "\nThe edition of Minecraft that this server supports.\n"
      example: []
      syntax:
        content:
          CSharp: public MinecraftEdition Edition
          VB: Public Edition As MinecraftEdition
        return:
          type: IMS_Library.MinecraftEdition
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.ServerVersionInformation.VersionType
      commentId: F:IMS_Library.ServerVersionInformation.VersionType
      language: CSharp
      name:
        CSharp: VersionType
        VB: VersionType
      nameWithType:
        CSharp: ServerVersionInformation.VersionType
        VB: ServerVersionInformation.VersionType
      qualifiedName:
        CSharp: IMS_Library.ServerVersionInformation.VersionType
        VB: IMS_Library.ServerVersionInformation.VersionType
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: VersionType
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerVersionInformation.cs
        startLine: 34
      summary: "\nThe type of release that this server was made under.\n"
      example: []
      syntax:
        content:
          CSharp: public ServerVersionInformation.ReleaseType VersionType
          VB: Public VersionType As ServerVersionInformation.ReleaseType
        return:
          type: IMS_Library.ServerVersionInformation.ReleaseType
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.ServerVersionInformation.DownloadURL
      commentId: F:IMS_Library.ServerVersionInformation.DownloadURL
      language: CSharp
      name:
        CSharp: DownloadURL
        VB: DownloadURL
      nameWithType:
        CSharp: ServerVersionInformation.DownloadURL
        VB: ServerVersionInformation.DownloadURL
      qualifiedName:
        CSharp: IMS_Library.ServerVersionInformation.DownloadURL
        VB: IMS_Library.ServerVersionInformation.DownloadURL
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: DownloadURL
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerVersionInformation.cs
        startLine: 38
      summary: "\nThe download URL for the Minecraft server binary.\n"
      example: []
      syntax:
        content:
          CSharp: public string DownloadURL
          VB: Public DownloadURL As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.ServerVersionInformation.PhysicalLocation
      commentId: P:IMS_Library.ServerVersionInformation.PhysicalLocation
      language: CSharp
      name:
        CSharp: PhysicalLocation
        VB: PhysicalLocation
      nameWithType:
        CSharp: ServerVersionInformation.PhysicalLocation
        VB: ServerVersionInformation.PhysicalLocation
      qualifiedName:
        CSharp: IMS_Library.ServerVersionInformation.PhysicalLocation
        VB: IMS_Library.ServerVersionInformation.PhysicalLocation
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: PhysicalLocation
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerVersionInformation.cs
        startLine: 45
      summary: "\nRepresents where the server binary is located on disk.  This returns an absolute path if the server binary is downloaded, or null if the server binary does not exist locally.\n"
      example: []
      syntax:
        content:
          CSharp: public string PhysicalLocation { get; }
          VB: Public ReadOnly Property PhysicalLocation As String
        parameters: []
        return:
          type: System.String
      overload: IMS_Library.ServerVersionInformation.PhysicalLocation*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: IMS_Library.ServerVersionInformation.#ctor
      commentId: M:IMS_Library.ServerVersionInformation.#ctor
      language: CSharp
      name:
        CSharp: ServerVersionInformation()
        VB: ServerVersionInformation()
      nameWithType:
        CSharp: ServerVersionInformation.ServerVersionInformation()
        VB: ServerVersionInformation.ServerVersionInformation()
      qualifiedName:
        CSharp: IMS_Library.ServerVersionInformation.ServerVersionInformation()
        VB: IMS_Library.ServerVersionInformation.ServerVersionInformation()
      type: Constructor
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: .ctor
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerVersionInformation.cs
        startLine: 50
      summary: "\nConstructs a new <xref href=\"IMS_Library.ServerVersionInformation\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
      example: []
      syntax:
        content:
          CSharp: public ServerVersionInformation()
          VB: Public Sub New
      overload: IMS_Library.ServerVersionInformation.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        IMS_Library.ServerVersionInformation: 
    - id: IMS_Library.ServerVersionInformation.#ctor(System.String,System.String,System.DateTime,IMS_Library.MinecraftEdition,IMS_Library.ServerVersionInformation.ReleaseType,System.String)
      commentId: M:IMS_Library.ServerVersionInformation.#ctor(System.String,System.String,System.DateTime,IMS_Library.MinecraftEdition,IMS_Library.ServerVersionInformation.ReleaseType,System.String)
      language: CSharp
      name:
        CSharp: ServerVersionInformation(String, String, DateTime, MinecraftEdition, ServerVersionInformation.ReleaseType, String)
        VB: ServerVersionInformation(String, String, DateTime, MinecraftEdition, ServerVersionInformation.ReleaseType, String)
      nameWithType:
        CSharp: ServerVersionInformation.ServerVersionInformation(String, String, DateTime, MinecraftEdition, ServerVersionInformation.ReleaseType, String)
        VB: ServerVersionInformation.ServerVersionInformation(String, String, DateTime, MinecraftEdition, ServerVersionInformation.ReleaseType, String)
      qualifiedName:
        CSharp: IMS_Library.ServerVersionInformation.ServerVersionInformation(System.String, System.String, System.DateTime, IMS_Library.MinecraftEdition, IMS_Library.ServerVersionInformation.ReleaseType, System.String)
        VB: IMS_Library.ServerVersionInformation.ServerVersionInformation(System.String, System.String, System.DateTime, IMS_Library.MinecraftEdition, IMS_Library.ServerVersionInformation.ReleaseType, System.String)
      type: Constructor
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: .ctor
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerVersionInformation.cs
        startLine: 61
      summary: "\nConstructs a new <xref href=\"IMS_Library.ServerVersionInformation\" data-throw-if-not-resolved=\"false\"></xref> instance with the specified information.\n"
      example: []
      syntax:
        content:
          CSharp: public ServerVersionInformation(string name, string version, DateTime releaseTime, MinecraftEdition edition, ServerVersionInformation.ReleaseType versionType, string downloadUrl)
          VB: Public Sub New(name As String, version As String, releaseTime As Date, edition As MinecraftEdition, versionType As ServerVersionInformation.ReleaseType, downloadUrl As String)
        parameters:
        - id: name
          type: System.String
          description: The display name of the version.
        - id: version
          type: System.String
          description: The official Minecraft version code.
        - id: releaseTime
          type: System.DateTime
          description: When the server was publicly released.
        - id: edition
          type: IMS_Library.MinecraftEdition
          description: The type of Minecraft that this server supports.
        - id: versionType
          type: IMS_Library.ServerVersionInformation.ReleaseType
          description: The release type that this server was released under.
        - id: downloadUrl
          type: System.String
          description: The URL for downloading the server binary.
      overload: IMS_Library.ServerVersionInformation.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        IMS_Library.ServerVersionInformation: 
    - id: IMS_Library.ServerVersionInformation.DownloadServerBinaryAsync
      commentId: M:IMS_Library.ServerVersionInformation.DownloadServerBinaryAsync
      language: CSharp
      name:
        CSharp: DownloadServerBinaryAsync()
        VB: DownloadServerBinaryAsync()
      nameWithType:
        CSharp: ServerVersionInformation.DownloadServerBinaryAsync()
        VB: ServerVersionInformation.DownloadServerBinaryAsync()
      qualifiedName:
        CSharp: IMS_Library.ServerVersionInformation.DownloadServerBinaryAsync()
        VB: IMS_Library.ServerVersionInformation.DownloadServerBinaryAsync()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: DownloadServerBinaryAsync
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerVersionInformation.cs
        startLine: 75
      summary: "\nDownloads the server binary from the internet if it does not already exist.\n"
      example: []
      syntax:
        content:
          CSharp: public Task DownloadServerBinaryAsync()
          VB: Public Function DownloadServerBinaryAsync As Task
        return:
          type: System.Threading.Tasks.Task
          description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object representing the current state of the download operation.
      overload: IMS_Library.ServerVersionInformation.DownloadServerBinaryAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        System.Threading.Tasks.Task: 
  - id: IMS_Library.ServerVersionInformation.ReleaseType
    commentId: T:IMS_Library.ServerVersionInformation.ReleaseType
    language: CSharp
    name:
      CSharp: ServerVersionInformation.ReleaseType
      VB: ServerVersionInformation.ReleaseType
    nameWithType:
      CSharp: ServerVersionInformation.ReleaseType
      VB: ServerVersionInformation.ReleaseType
    qualifiedName:
      CSharp: IMS_Library.ServerVersionInformation.ReleaseType
      VB: IMS_Library.ServerVersionInformation.ReleaseType
    type: Enum
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: ReleaseType
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerVersionInformation.cs
      startLine: 110
    summary: "\nRepresents the type of software release that any one version was made available under.\n"
    example: []
    syntax:
      content:
        CSharp: public enum ReleaseType
        VB: Public Enum ReleaseType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: IMS_Library.ServerVersionInformation.ReleaseType.Release
      commentId: F:IMS_Library.ServerVersionInformation.ReleaseType.Release
      language: CSharp
      name:
        CSharp: Release
        VB: Release
      nameWithType:
        CSharp: ServerVersionInformation.ReleaseType.Release
        VB: ServerVersionInformation.ReleaseType.Release
      qualifiedName:
        CSharp: IMS_Library.ServerVersionInformation.ReleaseType.Release
        VB: IMS_Library.ServerVersionInformation.ReleaseType.Release
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Release
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerVersionInformation.cs
        startLine: 115
      summary: "\nThis server version goes along with an official release of a new Minecraft version.\n"
      example: []
      syntax:
        content:
          CSharp: Release = 0
          VB: Release = 0
        return:
          type: IMS_Library.ServerVersionInformation.ReleaseType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: IMS_Library.ServerVersionInformation.ReleaseType.Snapshot
      commentId: F:IMS_Library.ServerVersionInformation.ReleaseType.Snapshot
      language: CSharp
      name:
        CSharp: Snapshot
        VB: Snapshot
      nameWithType:
        CSharp: ServerVersionInformation.ReleaseType.Snapshot
        VB: ServerVersionInformation.ReleaseType.Snapshot
      qualifiedName:
        CSharp: IMS_Library.ServerVersionInformation.ReleaseType.Snapshot
        VB: IMS_Library.ServerVersionInformation.ReleaseType.Snapshot
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Snapshot
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerVersionInformation.cs
        startLine: 119
      summary: "\nThis server version goes along with a &quot;preview&quot; version of a new Minecraft update.\n"
      example: []
      syntax:
        content:
          CSharp: Snapshot = 1
          VB: Snapshot = 1
        return:
          type: IMS_Library.ServerVersionInformation.ReleaseType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: IMS_Library.ServerVersionInformation.ReleaseType.OldBeta
      commentId: F:IMS_Library.ServerVersionInformation.ReleaseType.OldBeta
      language: CSharp
      name:
        CSharp: OldBeta
        VB: OldBeta
      nameWithType:
        CSharp: ServerVersionInformation.ReleaseType.OldBeta
        VB: ServerVersionInformation.ReleaseType.OldBeta
      qualifiedName:
        CSharp: IMS_Library.ServerVersionInformation.ReleaseType.OldBeta
        VB: IMS_Library.ServerVersionInformation.ReleaseType.OldBeta
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: OldBeta
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerVersionInformation.cs
        startLine: 123
      summary: "\nThis server version corresponds to a beta version of Minecraft.\n"
      example: []
      syntax:
        content:
          CSharp: OldBeta = 2
          VB: OldBeta = 2
        return:
          type: IMS_Library.ServerVersionInformation.ReleaseType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: IMS_Library.ServerVersionInformation.ReleaseType.OldAlpha
      commentId: F:IMS_Library.ServerVersionInformation.ReleaseType.OldAlpha
      language: CSharp
      name:
        CSharp: OldAlpha
        VB: OldAlpha
      nameWithType:
        CSharp: ServerVersionInformation.ReleaseType.OldAlpha
        VB: ServerVersionInformation.ReleaseType.OldAlpha
      qualifiedName:
        CSharp: IMS_Library.ServerVersionInformation.ReleaseType.OldAlpha
        VB: IMS_Library.ServerVersionInformation.ReleaseType.OldAlpha
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: OldAlpha
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Server\ServerVersionInformation.cs
        startLine: 127
      summary: "\nThis server version corresponds to an alpha version of Minecraft.\n"
      example: []
      syntax:
        content:
          CSharp: OldAlpha = 3
          VB: OldAlpha = 3
        return:
          type: IMS_Library.ServerVersionInformation.ReleaseType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: IMS_Library.WebInterface
    commentId: T:IMS_Library.WebInterface
    language: CSharp
    name:
      CSharp: WebInterface
      VB: WebInterface
    nameWithType:
      CSharp: WebInterface
      VB: WebInterface
    qualifiedName:
      CSharp: IMS_Library.WebInterface
      VB: IMS_Library.WebInterface
    type: Class
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: WebInterface
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\WebInterface.cs
      startLine: 9
    summary: "\nRepresents the IMS admin console web interface.\n"
    example: []
    syntax:
      content:
        CSharp: public abstract class WebInterface
        VB: Public MustInherit Class WebInterface
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: IMS_Library.WebInterface.Port
      commentId: F:IMS_Library.WebInterface.Port
      language: CSharp
      name:
        CSharp: Port
        VB: Port
      nameWithType:
        CSharp: WebInterface.Port
        VB: WebInterface.Port
      qualifiedName:
        CSharp: IMS_Library.WebInterface.Port
        VB: IMS_Library.WebInterface.Port
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Port
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\WebInterface.cs
        startLine: 14
      summary: "\nThe port which the interface should run on.\n"
      example: []
      syntax:
        content:
          CSharp: public WebPort Port
          VB: Public Port As WebPort
        return:
          type: IMS_Library.WebPort
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.WebInterface.Start
      commentId: M:IMS_Library.WebInterface.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: WebInterface.Start()
        VB: WebInterface.Start()
      qualifiedName:
        CSharp: IMS_Library.WebInterface.Start()
        VB: IMS_Library.WebInterface.Start()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Start
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\WebInterface.cs
        startLine: 19
      summary: "\nThis method starts the web interface.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void Start()
          VB: Public MustOverride Sub Start
      overload: IMS_Library.WebInterface.Start*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: IMS_Library.WebInterface.Stop
      commentId: M:IMS_Library.WebInterface.Stop
      language: CSharp
      name:
        CSharp: Stop()
        VB: Stop()
      nameWithType:
        CSharp: WebInterface.Stop()
        VB: WebInterface.Stop()
      qualifiedName:
        CSharp: IMS_Library.WebInterface.Stop()
        VB: IMS_Library.WebInterface.Stop()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Stop
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\WebInterface.cs
        startLine: 23
      summary: "\nThis method shuts down the web interface.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void Stop()
          VB: Public MustOverride Sub Stop
      overload: IMS_Library.WebInterface.Stop*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
  - id: IMS_Library.WebPort
    commentId: T:IMS_Library.WebPort
    language: CSharp
    name:
      CSharp: WebPort
      VB: WebPort
    nameWithType:
      CSharp: WebPort
      VB: WebPort
    qualifiedName:
      CSharp: IMS_Library.WebPort
      VB: IMS_Library.WebPort
    type: Struct
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: WebPort
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Webport.cs
      startLine: 11
    summary: "\nRepresents a port on the host computer, and contains data about the port&apos;s identity and whether it should be forwarded.\n"
    example: []
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public struct WebPort
        VB: >-
          <Serializable>

          Public Structure WebPort
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: IMS_Library.WebPort.Port
      commentId: F:IMS_Library.WebPort.Port
      language: CSharp
      name:
        CSharp: Port
        VB: Port
      nameWithType:
        CSharp: WebPort.Port
        VB: WebPort.Port
      qualifiedName:
        CSharp: IMS_Library.WebPort.Port
        VB: IMS_Library.WebPort.Port
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Port
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Webport.cs
        startLine: 17
      summary: "\nThe port number that this object represents.\n"
      example: []
      syntax:
        content:
          CSharp: public int Port
          VB: Public Port As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.WebPort.AttemptUPnPForwarding
      commentId: F:IMS_Library.WebPort.AttemptUPnPForwarding
      language: CSharp
      name:
        CSharp: AttemptUPnPForwarding
        VB: AttemptUPnPForwarding
      nameWithType:
        CSharp: WebPort.AttemptUPnPForwarding
        VB: WebPort.AttemptUPnPForwarding
      qualifiedName:
        CSharp: IMS_Library.WebPort.AttemptUPnPForwarding
        VB: IMS_Library.WebPort.AttemptUPnPForwarding
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: AttemptUPnPForwarding
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Webport.cs
        startLine: 21
      summary: "\nWhether IMS should attempt to forward this port using UPnP when it is in use.\n"
      example: []
      syntax:
        content:
          CSharp: public bool AttemptUPnPForwarding
          VB: Public AttemptUPnPForwarding As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.WebPort.#ctor(System.Int32)
      commentId: M:IMS_Library.WebPort.#ctor(System.Int32)
      language: CSharp
      name:
        CSharp: WebPort(Int32)
        VB: WebPort(Int32)
      nameWithType:
        CSharp: WebPort.WebPort(Int32)
        VB: WebPort.WebPort(Int32)
      qualifiedName:
        CSharp: IMS_Library.WebPort.WebPort(System.Int32)
        VB: IMS_Library.WebPort.WebPort(System.Int32)
      type: Constructor
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: .ctor
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Webport.cs
        startLine: 27
      summary: "\nCreates a new <xref href=\"IMS_Library.WebPort\" data-throw-if-not-resolved=\"false\"></xref> instance with the specified port that does not attempt UPnP forwarding.\n"
      example: []
      syntax:
        content:
          CSharp: public WebPort(int port)
          VB: Public Sub New(port As Integer)
        parameters:
        - id: port
          type: System.Int32
          description: The port this object represents.
      overload: IMS_Library.WebPort.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        IMS_Library.WebPort: 
    - id: IMS_Library.WebPort.#ctor(System.Int32,System.Boolean)
      commentId: M:IMS_Library.WebPort.#ctor(System.Int32,System.Boolean)
      language: CSharp
      name:
        CSharp: WebPort(Int32, Boolean)
        VB: WebPort(Int32, Boolean)
      nameWithType:
        CSharp: WebPort.WebPort(Int32, Boolean)
        VB: WebPort.WebPort(Int32, Boolean)
      qualifiedName:
        CSharp: IMS_Library.WebPort.WebPort(System.Int32, System.Boolean)
        VB: IMS_Library.WebPort.WebPort(System.Int32, System.Boolean)
      type: Constructor
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: .ctor
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\Webport.cs
        startLine: 38
      summary: "\nCreates a new <xref href=\"IMS_Library.WebPort\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
      example: []
      syntax:
        content:
          CSharp: public WebPort(int port, bool attemptUPnP)
          VB: Public Sub New(port As Integer, attemptUPnP As Boolean)
        parameters:
        - id: port
          type: System.Int32
          description: The port that this object represents.
        - id: attemptUPnP
          type: System.Boolean
          description: Whether IMS should attempt to forward the port.
      overload: IMS_Library.WebPort.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        IMS_Library.WebPort: 
  - id: IMS_Library.WorldController
    commentId: T:IMS_Library.WorldController
    language: CSharp
    name:
      CSharp: WorldController
      VB: WorldController
    nameWithType:
      CSharp: WorldController
      VB: WorldController
    qualifiedName:
      CSharp: IMS_Library.WorldController
      VB: IMS_Library.WorldController
    type: Class
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: WorldController
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\WorldController.cs
      startLine: 14
    summary: "\nActs as a manager object which regulates the user&apos;s Minecraft worlds.\n"
    example: []
    syntax:
      content:
        CSharp: public sealed class WorldController
        VB: Public NotInheritable Class WorldController
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: IMS_Library.WorldController.LoadedWorlds
      commentId: P:IMS_Library.WorldController.LoadedWorlds
      language: CSharp
      name:
        CSharp: LoadedWorlds
        VB: LoadedWorlds
      nameWithType:
        CSharp: WorldController.LoadedWorlds
        VB: WorldController.LoadedWorlds
      qualifiedName:
        CSharp: IMS_Library.WorldController.LoadedWorlds
        VB: IMS_Library.WorldController.LoadedWorlds
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: LoadedWorlds
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\WorldController.cs
        startLine: 19
      summary: "\nA list which contains all currently loaded Minecraft worlds.\n"
      example: []
      syntax:
        content:
          CSharp: public IList<World> LoadedWorlds { get; }
          VB: Public ReadOnly Property LoadedWorlds As IList(Of World)
        parameters: []
        return:
          type: System.Collections.Generic.IList{IMS_Library.World}
      overload: IMS_Library.WorldController.LoadedWorlds*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: IMS_Library.WorldController.Start
      commentId: M:IMS_Library.WorldController.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: WorldController.Start()
        VB: WorldController.Start()
      qualifiedName:
        CSharp: IMS_Library.WorldController.Start()
        VB: IMS_Library.WorldController.Start()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Start
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\WorldController.cs
        startLine: 27
      summary: "\nBegins the <xref href=\"IMS_Library.WorldController\" data-throw-if-not-resolved=\"false\"></xref> instance, loading worlds from disk and starting the update timer for world backups.\n"
      example: []
      syntax:
        content:
          CSharp: public void Start()
          VB: Public Sub Start
      overload: IMS_Library.WorldController.Start*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        IMS_Library.WorldController: 
    - id: IMS_Library.WorldController.GetWorldByID(System.Guid)
      commentId: M:IMS_Library.WorldController.GetWorldByID(System.Guid)
      language: CSharp
      name:
        CSharp: GetWorldByID(Guid)
        VB: GetWorldByID(Guid)
      nameWithType:
        CSharp: WorldController.GetWorldByID(Guid)
        VB: WorldController.GetWorldByID(Guid)
      qualifiedName:
        CSharp: IMS_Library.WorldController.GetWorldByID(System.Guid)
        VB: IMS_Library.WorldController.GetWorldByID(System.Guid)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetWorldByID
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\WorldController.cs
        startLine: 48
      summary: "\nRetrieves a <xref href=\"IMS_Library.World\" data-throw-if-not-resolved=\"false\"></xref> instance by its ID.\n"
      example: []
      syntax:
        content:
          CSharp: public World GetWorldByID(Guid id)
          VB: Public Function GetWorldByID(id As Guid) As World
        parameters:
        - id: id
          type: System.Guid
          description: The ID of the world to find.
        return:
          type: IMS_Library.World
          description: The <xref href="IMS_Library.World" data-throw-if-not-resolved="false"></xref> object that was found, or if the ID was not found, null.
      overload: IMS_Library.WorldController.GetWorldByID*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        IMS_Library.World: 
    - id: IMS_Library.WorldController.GetServerOfWorld(IMS_Library.World)
      commentId: M:IMS_Library.WorldController.GetServerOfWorld(IMS_Library.World)
      language: CSharp
      name:
        CSharp: GetServerOfWorld(World)
        VB: GetServerOfWorld(World)
      nameWithType:
        CSharp: WorldController.GetServerOfWorld(World)
        VB: WorldController.GetServerOfWorld(World)
      qualifiedName:
        CSharp: IMS_Library.WorldController.GetServerOfWorld(IMS_Library.World)
        VB: IMS_Library.WorldController.GetServerOfWorld(IMS_Library.World)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetServerOfWorld
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\WorldController.cs
        startLine: 93
      summary: "\nGets the server on which <code data-dev-comment-type=\"paramref\" class=\"paramref\">world</code> is currently running.\n"
      example: []
      syntax:
        content:
          CSharp: public ServerProxy GetServerOfWorld(World world)
          VB: Public Function GetServerOfWorld(world As World) As ServerProxy
        parameters:
        - id: world
          type: IMS_Library.World
          description: The world whose server to obtain.
        return:
          type: IMS_Library.ServerProxy
          description: The server that is currently running <code data-dev-comment-type="paramref" class="paramref">world</code>, or null if no server is using it.
      overload: IMS_Library.WorldController.GetServerOfWorld*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.WorldController.AddWorldToRegistry(IMS_Library.World)
      commentId: M:IMS_Library.WorldController.AddWorldToRegistry(IMS_Library.World)
      language: CSharp
      name:
        CSharp: AddWorldToRegistry(World)
        VB: AddWorldToRegistry(World)
      nameWithType:
        CSharp: WorldController.AddWorldToRegistry(World)
        VB: WorldController.AddWorldToRegistry(World)
      qualifiedName:
        CSharp: IMS_Library.WorldController.AddWorldToRegistry(IMS_Library.World)
        VB: IMS_Library.WorldController.AddWorldToRegistry(IMS_Library.World)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: AddWorldToRegistry
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\WorldController.cs
        startLine: 109
      summary: "\nAdds a Minecraft world to the instance&apos;s world registry.\n"
      example: []
      syntax:
        content:
          CSharp: public void AddWorldToRegistry(World world)
          VB: Public Sub AddWorldToRegistry(world As World)
        parameters:
        - id: world
          type: IMS_Library.World
          description: The <xref href="IMS_Library.World" data-throw-if-not-resolved="false"></xref> to make known to IMS.
      overload: IMS_Library.WorldController.AddWorldToRegistry*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        IMS_Library.World: 
    - id: IMS_Library.WorldController.DeleteWorldAsync(IMS_Library.World)
      commentId: M:IMS_Library.WorldController.DeleteWorldAsync(IMS_Library.World)
      language: CSharp
      name:
        CSharp: DeleteWorldAsync(World)
        VB: DeleteWorldAsync(World)
      nameWithType:
        CSharp: WorldController.DeleteWorldAsync(World)
        VB: WorldController.DeleteWorldAsync(World)
      qualifiedName:
        CSharp: IMS_Library.WorldController.DeleteWorldAsync(IMS_Library.World)
        VB: IMS_Library.WorldController.DeleteWorldAsync(IMS_Library.World)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: DeleteWorldAsync
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\WorldController.cs
        startLine: 120
      summary: "\nDeletes a world from the registry and removes it from disk.\n"
      example: []
      syntax:
        content:
          CSharp: public Task DeleteWorldAsync(World world)
          VB: Public Function DeleteWorldAsync(world As World) As Task
        parameters:
        - id: world
          type: IMS_Library.World
          description: The world to delete.
        return:
          type: System.Threading.Tasks.Task
          description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object which represents the progress of the world folder deletion.
      overload: IMS_Library.WorldController.DeleteWorldAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        System.Threading.Tasks.Task: 
    - id: IMS_Library.WorldController.Stop
      commentId: M:IMS_Library.WorldController.Stop
      language: CSharp
      name:
        CSharp: Stop()
        VB: Stop()
      nameWithType:
        CSharp: WorldController.Stop()
        VB: WorldController.Stop()
      qualifiedName:
        CSharp: IMS_Library.WorldController.Stop()
        VB: IMS_Library.WorldController.Stop()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Stop
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\WorldController.cs
        startLine: 132
      summary: "\nStops the <xref href=\"IMS_Library.WorldController\" data-throw-if-not-resolved=\"false\"></xref> instance, saving worlds and disabling the backup timer.\n"
      example: []
      syntax:
        content:
          CSharp: public void Stop()
          VB: Public Sub Stop
      overload: IMS_Library.WorldController.Stop*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        IMS_Library.WorldController: 
  - id: IMS_Library.BackupAfterTimeIntervalPolicy
    commentId: T:IMS_Library.BackupAfterTimeIntervalPolicy
    language: CSharp
    name:
      CSharp: BackupAfterTimeIntervalPolicy
      VB: BackupAfterTimeIntervalPolicy
    nameWithType:
      CSharp: BackupAfterTimeIntervalPolicy
      VB: BackupAfterTimeIntervalPolicy
    qualifiedName:
      CSharp: IMS_Library.BackupAfterTimeIntervalPolicy
      VB: IMS_Library.BackupAfterTimeIntervalPolicy
    type: Class
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: BackupAfterTimeIntervalPolicy
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\World\BackupAfterTimeIntervalPolicy.cs
      startLine: 9
    summary: "\nRepresents a backup policy where a backup is created when a specific time interval elapses.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class BackupAfterTimeIntervalPolicy : IBackupPolicy'
        VB: >-
          Public Class BackupAfterTimeIntervalPolicy

              Implements IBackupPolicy
    inheritance:
    - System.Object
    implements:
    - IMS_Library.IBackupPolicy
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: IMS_Library.BackupAfterTimeIntervalPolicy.BackupName
      commentId: F:IMS_Library.BackupAfterTimeIntervalPolicy.BackupName
      language: CSharp
      name:
        CSharp: BackupName
        VB: BackupName
      nameWithType:
        CSharp: BackupAfterTimeIntervalPolicy.BackupName
        VB: BackupAfterTimeIntervalPolicy.BackupName
      qualifiedName:
        CSharp: IMS_Library.BackupAfterTimeIntervalPolicy.BackupName
        VB: IMS_Library.BackupAfterTimeIntervalPolicy.BackupName
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: BackupName
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\World\BackupAfterTimeIntervalPolicy.cs
        startLine: 14
      summary: "\nThe name of the backup to create.\n"
      example: []
      syntax:
        content:
          CSharp: public string BackupName
          VB: Public BackupName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.BackupAfterTimeIntervalPolicy.BackupInterval
      commentId: F:IMS_Library.BackupAfterTimeIntervalPolicy.BackupInterval
      language: CSharp
      name:
        CSharp: BackupInterval
        VB: BackupInterval
      nameWithType:
        CSharp: BackupAfterTimeIntervalPolicy.BackupInterval
        VB: BackupAfterTimeIntervalPolicy.BackupInterval
      qualifiedName:
        CSharp: IMS_Library.BackupAfterTimeIntervalPolicy.BackupInterval
        VB: IMS_Library.BackupAfterTimeIntervalPolicy.BackupInterval
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: BackupInterval
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\World\BackupAfterTimeIntervalPolicy.cs
        startLine: 19
      summary: "\nThe interval between world backups.\n"
      example: []
      syntax:
        content:
          CSharp: public TimeSpan BackupInterval
          VB: Public BackupInterval As TimeSpan
        return:
          type: System.TimeSpan
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.BackupAfterTimeIntervalPolicy.LastBackedUp
      commentId: F:IMS_Library.BackupAfterTimeIntervalPolicy.LastBackedUp
      language: CSharp
      name:
        CSharp: LastBackedUp
        VB: LastBackedUp
      nameWithType:
        CSharp: BackupAfterTimeIntervalPolicy.LastBackedUp
        VB: BackupAfterTimeIntervalPolicy.LastBackedUp
      qualifiedName:
        CSharp: IMS_Library.BackupAfterTimeIntervalPolicy.LastBackedUp
        VB: IMS_Library.BackupAfterTimeIntervalPolicy.LastBackedUp
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: LastBackedUp
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\World\BackupAfterTimeIntervalPolicy.cs
        startLine: 23
      summary: "\nThe last time the world was backed up.  When it is <xref href=\"IMS_Library.BackupAfterTimeIntervalPolicy.BackupInterval\" data-throw-if-not-resolved=\"false\"></xref> past this time, a new backup is made.\n"
      example: []
      syntax:
        content:
          CSharp: public DateTime LastBackedUp
          VB: Public LastBackedUp As Date
        return:
          type: System.DateTime
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        IMS_Library.BackupAfterTimeIntervalPolicy.BackupInterval: 
    - id: IMS_Library.BackupAfterTimeIntervalPolicy.Update(IMS_Library.World)
      commentId: M:IMS_Library.BackupAfterTimeIntervalPolicy.Update(IMS_Library.World)
      language: CSharp
      name:
        CSharp: Update(World)
        VB: Update(World)
      nameWithType:
        CSharp: BackupAfterTimeIntervalPolicy.Update(World)
        VB: BackupAfterTimeIntervalPolicy.Update(World)
      qualifiedName:
        CSharp: IMS_Library.BackupAfterTimeIntervalPolicy.Update(IMS_Library.World)
        VB: IMS_Library.BackupAfterTimeIntervalPolicy.Update(IMS_Library.World)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Update
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\World\BackupAfterTimeIntervalPolicy.cs
        startLine: 29
      summary: "\nThis function checks to determine whether it is time to make a backup, and does so if necessary.\n"
      example: []
      syntax:
        content:
          CSharp: public void Update(World world)
          VB: Public Sub Update(world As World)
        parameters:
        - id: world
          type: IMS_Library.World
          description: The parent world.
      overload: IMS_Library.BackupAfterTimeIntervalPolicy.Update*
      implements:
      - IMS_Library.IBackupPolicy.Update(IMS_Library.World)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: IMS_Library.BackupInformation
    commentId: T:IMS_Library.BackupInformation
    language: CSharp
    name:
      CSharp: BackupInformation
      VB: BackupInformation
    nameWithType:
      CSharp: BackupInformation
      VB: BackupInformation
    qualifiedName:
      CSharp: IMS_Library.BackupInformation
      VB: IMS_Library.BackupInformation
    type: Class
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: BackupInformation
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\World\BackupInformation.cs
      startLine: 9
    summary: "\nThis class is used to keep track of backup data.\n"
    example: []
    syntax:
      content:
        CSharp: public class BackupInformation
        VB: Public Class BackupInformation
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: IMS_Library.BackupInformation.Name
      commentId: F:IMS_Library.BackupInformation.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: BackupInformation.Name
        VB: BackupInformation.Name
      qualifiedName:
        CSharp: IMS_Library.BackupInformation.Name
        VB: IMS_Library.BackupInformation.Name
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Name
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\World\BackupInformation.cs
        startLine: 14
      summary: "\nThe display name of the backup.\n"
      example: []
      syntax:
        content:
          CSharp: public string Name
          VB: Public Name As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.BackupInformation.Date
      commentId: F:IMS_Library.BackupInformation.Date
      language: CSharp
      name:
        CSharp: Date
        VB: Date
      nameWithType:
        CSharp: BackupInformation.Date
        VB: BackupInformation.Date
      qualifiedName:
        CSharp: IMS_Library.BackupInformation.Date
        VB: IMS_Library.BackupInformation.Date
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Date
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\World\BackupInformation.cs
        startLine: 18
      summary: "\nThe time at which the backup was created.\n"
      example: []
      syntax:
        content:
          CSharp: public DateTime Date
          VB: Public Date As Date
        return:
          type: System.DateTime
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.BackupInformation.ID
      commentId: F:IMS_Library.BackupInformation.ID
      language: CSharp
      name:
        CSharp: ID
        VB: ID
      nameWithType:
        CSharp: BackupInformation.ID
        VB: BackupInformation.ID
      qualifiedName:
        CSharp: IMS_Library.BackupInformation.ID
        VB: IMS_Library.BackupInformation.ID
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ID
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\World\BackupInformation.cs
        startLine: 22
      summary: "\nThe unique identifier of the backup.\n"
      example: []
      syntax:
        content:
          CSharp: public Guid ID
          VB: Public ID As Guid
        return:
          type: System.Guid
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: IMS_Library.IBackupPolicy
    commentId: T:IMS_Library.IBackupPolicy
    language: CSharp
    name:
      CSharp: IBackupPolicy
      VB: IBackupPolicy
    nameWithType:
      CSharp: IBackupPolicy
      VB: IBackupPolicy
    qualifiedName:
      CSharp: IMS_Library.IBackupPolicy
      VB: IMS_Library.IBackupPolicy
    type: Interface
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: IBackupPolicy
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\World\IBackupPolicy.cs
      startLine: 9
    summary: "\nThis interface is used to implement backup functionality - it represents a controller which performs an action related to maintaining world backups when <xref href=\"IMS_Library.IBackupPolicy.Update(IMS_Library.World)\" data-throw-if-not-resolved=\"false\"></xref> is called.\n"
    example: []
    syntax:
      content:
        CSharp: public interface IBackupPolicy
        VB: Public Interface IBackupPolicy
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: IMS_Library.IBackupPolicy.Update(IMS_Library.World)
      commentId: M:IMS_Library.IBackupPolicy.Update(IMS_Library.World)
      language: CSharp
      name:
        CSharp: Update(World)
        VB: Update(World)
      nameWithType:
        CSharp: IBackupPolicy.Update(World)
        VB: IBackupPolicy.Update(World)
      qualifiedName:
        CSharp: IMS_Library.IBackupPolicy.Update(IMS_Library.World)
        VB: IMS_Library.IBackupPolicy.Update(IMS_Library.World)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Update
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\World\IBackupPolicy.cs
        startLine: 15
      summary: "\nThis method is called by <xref href=\"IMS_Library.WorldController\" data-throw-if-not-resolved=\"false\"></xref> every 60 seconds to allow the backup policy to perform any actions it needs to complete.\n"
      example: []
      syntax:
        content:
          CSharp: void Update(World world)
          VB: Sub Update(world As World)
        parameters:
        - id: world
          type: IMS_Library.World
          description: The world to perform backup operations on.
      overload: IMS_Library.IBackupPolicy.Update*
      modifiers:
        CSharp: []
        VB: []
      references:
        IMS_Library.WorldController: 
    references:
      IMS_Library.IBackupPolicy.Update(IMS_Library.World): 
  - id: IMS_Library.RemoveBackupAfterTimeIntervalPolicy
    commentId: T:IMS_Library.RemoveBackupAfterTimeIntervalPolicy
    language: CSharp
    name:
      CSharp: RemoveBackupAfterTimeIntervalPolicy
      VB: RemoveBackupAfterTimeIntervalPolicy
    nameWithType:
      CSharp: RemoveBackupAfterTimeIntervalPolicy
      VB: RemoveBackupAfterTimeIntervalPolicy
    qualifiedName:
      CSharp: IMS_Library.RemoveBackupAfterTimeIntervalPolicy
      VB: IMS_Library.RemoveBackupAfterTimeIntervalPolicy
    type: Class
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: RemoveBackupAfterTimeIntervalPolicy
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\World\RemoveBackupAfterTimeIntervalPolicy.cs
      startLine: 9
    summary: "\nThis represents a backup policy which removes backups of a specified name after they are a certain age.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class RemoveBackupAfterTimeIntervalPolicy : IBackupPolicy'
        VB: >-
          Public Class RemoveBackupAfterTimeIntervalPolicy

              Implements IBackupPolicy
    inheritance:
    - System.Object
    implements:
    - IMS_Library.IBackupPolicy
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: IMS_Library.RemoveBackupAfterTimeIntervalPolicy.BackupName
      commentId: F:IMS_Library.RemoveBackupAfterTimeIntervalPolicy.BackupName
      language: CSharp
      name:
        CSharp: BackupName
        VB: BackupName
      nameWithType:
        CSharp: RemoveBackupAfterTimeIntervalPolicy.BackupName
        VB: RemoveBackupAfterTimeIntervalPolicy.BackupName
      qualifiedName:
        CSharp: IMS_Library.RemoveBackupAfterTimeIntervalPolicy.BackupName
        VB: IMS_Library.RemoveBackupAfterTimeIntervalPolicy.BackupName
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: BackupName
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\World\RemoveBackupAfterTimeIntervalPolicy.cs
        startLine: 14
      summary: "\nThe name of the backups to remove.\n"
      example: []
      syntax:
        content:
          CSharp: public string BackupName
          VB: Public BackupName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.RemoveBackupAfterTimeIntervalPolicy.BackupRemovalTime
      commentId: F:IMS_Library.RemoveBackupAfterTimeIntervalPolicy.BackupRemovalTime
      language: CSharp
      name:
        CSharp: BackupRemovalTime
        VB: BackupRemovalTime
      nameWithType:
        CSharp: RemoveBackupAfterTimeIntervalPolicy.BackupRemovalTime
        VB: RemoveBackupAfterTimeIntervalPolicy.BackupRemovalTime
      qualifiedName:
        CSharp: IMS_Library.RemoveBackupAfterTimeIntervalPolicy.BackupRemovalTime
        VB: IMS_Library.RemoveBackupAfterTimeIntervalPolicy.BackupRemovalTime
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: BackupRemovalTime
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\World\RemoveBackupAfterTimeIntervalPolicy.cs
        startLine: 18
      summary: "\nThe age that any one backup needs to be in order to be automatically deleted.\n"
      example: []
      syntax:
        content:
          CSharp: public TimeSpan BackupRemovalTime
          VB: Public BackupRemovalTime As TimeSpan
        return:
          type: System.TimeSpan
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.RemoveBackupAfterTimeIntervalPolicy.Update(IMS_Library.World)
      commentId: M:IMS_Library.RemoveBackupAfterTimeIntervalPolicy.Update(IMS_Library.World)
      language: CSharp
      name:
        CSharp: Update(World)
        VB: Update(World)
      nameWithType:
        CSharp: RemoveBackupAfterTimeIntervalPolicy.Update(World)
        VB: RemoveBackupAfterTimeIntervalPolicy.Update(World)
      qualifiedName:
        CSharp: IMS_Library.RemoveBackupAfterTimeIntervalPolicy.Update(IMS_Library.World)
        VB: IMS_Library.RemoveBackupAfterTimeIntervalPolicy.Update(IMS_Library.World)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Update
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\World\RemoveBackupAfterTimeIntervalPolicy.cs
        startLine: 24
      summary: "\nThis method causes the backup policy to iterate over known backups and delete the ones which are older than <xref href=\"IMS_Library.RemoveBackupAfterTimeIntervalPolicy.BackupRemovalTime\" data-throw-if-not-resolved=\"false\"></xref>.\n"
      example: []
      syntax:
        content:
          CSharp: public void Update(World world)
          VB: Public Sub Update(world As World)
        parameters:
        - id: world
          type: IMS_Library.World
          description: The world whose backups to operate on.
      overload: IMS_Library.RemoveBackupAfterTimeIntervalPolicy.Update*
      implements:
      - IMS_Library.IBackupPolicy.Update(IMS_Library.World)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        IMS_Library.RemoveBackupAfterTimeIntervalPolicy.BackupRemovalTime: 
  - id: IMS_Library.World
    commentId: T:IMS_Library.World
    language: CSharp
    name:
      CSharp: World
      VB: World
    nameWithType:
      CSharp: World
      VB: World
    qualifiedName:
      CSharp: IMS_Library.World
      VB: IMS_Library.World
    type: Class
    assemblies:
    - IMS-Library
    namespace: IMS_Library
    source:
      id: World
      path: D:\Projects\IntegratedMinecraftServer\IMS-Library\World\World.cs
      startLine: 13
    summary: "\nInstances of this class represent Minecraft worlds, allowing for control over the world files and their backups.\n"
    example: []
    syntax:
      content:
        CSharp: 'public sealed class World : IMSConfiguration, ICloneable'
        VB: >-
          Public NotInheritable Class World

              Inherits IMSConfiguration

              Implements ICloneable
    inheritance:
    - System.Object
    - IMS_Library.IMSConfiguration
    implements:
    - System.ICloneable
    inheritedMembers:
    - IMS_Library.IMSConfiguration.Clone
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    extensionMethods:
    - IMS_Library.World.IMS_Library.IMSConfigurationUtility.FromConfiguration``1
    - IMS_Library.World.IMS_Library.IMSConfigurationUtility.SaveConfiguration``1
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: IMS_Library.World.ID
      commentId: F:IMS_Library.World.ID
      language: CSharp
      name:
        CSharp: ID
        VB: ID
      nameWithType:
        CSharp: World.ID
        VB: World.ID
      qualifiedName:
        CSharp: IMS_Library.World.ID
        VB: IMS_Library.World.ID
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: ID
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\World\World.cs
        startLine: 18
      summary: "\nThe unique identifier of the world.\n"
      example: []
      syntax:
        content:
          CSharp: public Guid ID
          VB: Public ID As Guid
        return:
          type: System.Guid
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.World.Name
      commentId: F:IMS_Library.World.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: World.Name
        VB: World.Name
      qualifiedName:
        CSharp: IMS_Library.World.Name
        VB: IMS_Library.World.Name
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Name
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\World\World.cs
        startLine: 22
      summary: "\nThe display name of the world.\n"
      example: []
      syntax:
        content:
          CSharp: public string Name
          VB: Public Name As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.World.Edition
      commentId: F:IMS_Library.World.Edition
      language: CSharp
      name:
        CSharp: Edition
        VB: Edition
      nameWithType:
        CSharp: World.Edition
        VB: World.Edition
      qualifiedName:
        CSharp: IMS_Library.World.Edition
        VB: IMS_Library.World.Edition
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Edition
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\World\World.cs
        startLine: 26
      summary: "\nThe edition of Minecraft that this world is associated with.\n"
      example: []
      syntax:
        content:
          CSharp: public MinecraftEdition Edition
          VB: Public Edition As MinecraftEdition
        return:
          type: IMS_Library.MinecraftEdition
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.World.BackupPolicies
      commentId: F:IMS_Library.World.BackupPolicies
      language: CSharp
      name:
        CSharp: BackupPolicies
        VB: BackupPolicies
      nameWithType:
        CSharp: World.BackupPolicies
        VB: World.BackupPolicies
      qualifiedName:
        CSharp: IMS_Library.World.BackupPolicies
        VB: IMS_Library.World.BackupPolicies
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: BackupPolicies
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\World\World.cs
        startLine: 30
      summary: "\nThe backup policies that this world utilizes to make/delete backups.\n"
      example: []
      syntax:
        content:
          CSharp: public SynchronizedCollection<IBackupPolicy> BackupPolicies
          VB: Public BackupPolicies As SynchronizedCollection(Of IBackupPolicy)
        return:
          type: System.Collections.Generic.SynchronizedCollection{IMS_Library.IBackupPolicy}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.World.Backups
      commentId: F:IMS_Library.World.Backups
      language: CSharp
      name:
        CSharp: Backups
        VB: Backups
      nameWithType:
        CSharp: World.Backups
        VB: World.Backups
      qualifiedName:
        CSharp: IMS_Library.World.Backups
        VB: IMS_Library.World.Backups
      type: Field
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: Backups
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\World\World.cs
        startLine: 34
      summary: "\nAll of the backups that currently exist of this world, indexed by unique identifier.\n"
      example: []
      syntax:
        content:
          CSharp: public ConcurrentDictionary<Guid, BackupInformation> Backups
          VB: Public Backups As ConcurrentDictionary(Of Guid, BackupInformation)
        return:
          type: System.Collections.Concurrent.ConcurrentDictionary{System.Guid,IMS_Library.BackupInformation}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.World.FolderPath
      commentId: P:IMS_Library.World.FolderPath
      language: CSharp
      name:
        CSharp: FolderPath
        VB: FolderPath
      nameWithType:
        CSharp: World.FolderPath
        VB: World.FolderPath
      qualifiedName:
        CSharp: IMS_Library.World.FolderPath
        VB: IMS_Library.World.FolderPath
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: FolderPath
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\World\World.cs
        startLine: 39
      summary: "\nThe absolute path of this world&apos;s directory (the directory which stores metadata, world backups, and the current world files).  This is the parent directory of <xref href=\"IMS_Library.World.WorldPath\" data-throw-if-not-resolved=\"false\"></xref>.\n"
      example: []
      syntax:
        content:
          CSharp: public string FolderPath { get; }
          VB: Public ReadOnly Property FolderPath As String
        parameters: []
        return:
          type: System.String
      overload: IMS_Library.World.FolderPath*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
      references:
        IMS_Library.World.WorldPath: 
    - id: IMS_Library.World.WorldPath
      commentId: P:IMS_Library.World.WorldPath
      language: CSharp
      name:
        CSharp: WorldPath
        VB: WorldPath
      nameWithType:
        CSharp: World.WorldPath
        VB: World.WorldPath
      qualifiedName:
        CSharp: IMS_Library.World.WorldPath
        VB: IMS_Library.World.WorldPath
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: WorldPath
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\World\World.cs
        startLine: 43
      summary: "\nThe absolute path of the current Minecraft world folder.\n"
      example: []
      syntax:
        content:
          CSharp: public string WorldPath { get; }
          VB: Public ReadOnly Property WorldPath As String
        parameters: []
        return:
          type: System.String
      overload: IMS_Library.World.WorldPath*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: IMS_Library.World.IconPath
      commentId: P:IMS_Library.World.IconPath
      language: CSharp
      name:
        CSharp: IconPath
        VB: IconPath
      nameWithType:
        CSharp: World.IconPath
        VB: World.IconPath
      qualifiedName:
        CSharp: IMS_Library.World.IconPath
        VB: IMS_Library.World.IconPath
      type: Property
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: IconPath
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\World\World.cs
        startLine: 56
      summary: "\nThe absolute path of the world&apos;s display icon.  This always returns a default path based on world edition - it does not check to see whether an icon exists.\n"
      example: []
      syntax:
        content:
          CSharp: public string IconPath { get; }
          VB: Public ReadOnly Property IconPath As String
        parameters: []
        return:
          type: System.String
      overload: IMS_Library.World.IconPath*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: IMS_Library.World.#ctor
      commentId: M:IMS_Library.World.#ctor
      language: CSharp
      name:
        CSharp: World()
        VB: World()
      nameWithType:
        CSharp: World.World()
        VB: World.World()
      qualifiedName:
        CSharp: IMS_Library.World.World()
        VB: IMS_Library.World.World()
      type: Constructor
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: .ctor
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\World\World.cs
        startLine: 73
      summary: "\nConstructs a new instance of the <xref href=\"IMS_Library.World\" data-throw-if-not-resolved=\"false\"></xref> class, generating a new GUID to associate it with.\n"
      example: []
      syntax:
        content:
          CSharp: public World()
          VB: Public Sub New
      overload: IMS_Library.World.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        IMS_Library.World: 
    - id: IMS_Library.World.#ctor(System.Guid)
      commentId: M:IMS_Library.World.#ctor(System.Guid)
      language: CSharp
      name:
        CSharp: World(Guid)
        VB: World(Guid)
      nameWithType:
        CSharp: World.World(Guid)
        VB: World.World(Guid)
      qualifiedName:
        CSharp: IMS_Library.World.World(System.Guid)
        VB: IMS_Library.World.World(System.Guid)
      type: Constructor
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: .ctor
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\World\World.cs
        startLine: 81
      summary: "\nConstructs a new instance of the <xref href=\"IMS_Library.World\" data-throw-if-not-resolved=\"false\"></xref> class with the specified GUID.\n"
      example: []
      syntax:
        content:
          CSharp: public World(Guid id)
          VB: Public Sub New(id As Guid)
        parameters:
        - id: id
          type: System.Guid
          description: The unique identifier to associate this world with.
      overload: IMS_Library.World.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        IMS_Library.World: 
    - id: IMS_Library.World.MakeBackupAsync(System.String)
      commentId: M:IMS_Library.World.MakeBackupAsync(System.String)
      language: CSharp
      name:
        CSharp: MakeBackupAsync(String)
        VB: MakeBackupAsync(String)
      nameWithType:
        CSharp: World.MakeBackupAsync(String)
        VB: World.MakeBackupAsync(String)
      qualifiedName:
        CSharp: IMS_Library.World.MakeBackupAsync(System.String)
        VB: IMS_Library.World.MakeBackupAsync(System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: MakeBackupAsync
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\World\World.cs
        startLine: 91
      summary: "\nTakes a snapshot of the current world.\n"
      example: []
      syntax:
        content:
          CSharp: public Task<Guid> MakeBackupAsync(string backupName = "Automatic backup")
          VB: Public Function MakeBackupAsync(backupName As String = "Automatic backup") As Task(Of Guid)
        parameters:
        - id: backupName
          type: System.String
          description: The display name of the backup to create.
        return:
          type: System.Threading.Tasks.Task{System.Guid}
          description: The unique identifier of the backup that was created.
      overload: IMS_Library.World.MakeBackupAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.World.RestoreFromBackupAsync(System.Guid,System.Boolean,System.String)
      commentId: M:IMS_Library.World.RestoreFromBackupAsync(System.Guid,System.Boolean,System.String)
      language: CSharp
      name:
        CSharp: RestoreFromBackupAsync(Guid, Boolean, String)
        VB: RestoreFromBackupAsync(Guid, Boolean, String)
      nameWithType:
        CSharp: World.RestoreFromBackupAsync(Guid, Boolean, String)
        VB: World.RestoreFromBackupAsync(Guid, Boolean, String)
      qualifiedName:
        CSharp: IMS_Library.World.RestoreFromBackupAsync(System.Guid, System.Boolean, System.String)
        VB: IMS_Library.World.RestoreFromBackupAsync(System.Guid, System.Boolean, System.String)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: RestoreFromBackupAsync
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\World\World.cs
        startLine: 114
      summary: "\nRestores a world to a former backup.\n"
      example: []
      syntax:
        content:
          CSharp: public Task RestoreFromBackupAsync(Guid backupID, bool makeBackupOfCurrentWorld = true, string currentWorldBackupName = "Overwritten world backup")
          VB: Public Function RestoreFromBackupAsync(backupID As Guid, makeBackupOfCurrentWorld As Boolean = True, currentWorldBackupName As String = "Overwritten world backup") As Task
        parameters:
        - id: backupID
          type: System.Guid
          description: The unique identifier of the backup to restore to.
        - id: makeBackupOfCurrentWorld
          type: System.Boolean
          description: Whether the current Minecraft world should be backed up before restoration, or simply overwritten.
        - id: currentWorldBackupName
          type: System.String
          description: The name of the backup that represents the replaced Minecraft world instance.  This is only used if <code data-dev-comment-type="paramref" class="paramref">makeBackupOfCurrentWorld</code> is <code>true</code>.
        return:
          type: System.Threading.Tasks.Task
          description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object representing the progress of the operation, including any necessary server restart and the copying of the Minecraft world folders.
      overload: IMS_Library.World.RestoreFromBackupAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        System.Threading.Tasks.Task: 
    - id: IMS_Library.World.GetPathOfBackup(IMS_Library.BackupInformation)
      commentId: M:IMS_Library.World.GetPathOfBackup(IMS_Library.BackupInformation)
      language: CSharp
      name:
        CSharp: GetPathOfBackup(BackupInformation)
        VB: GetPathOfBackup(BackupInformation)
      nameWithType:
        CSharp: World.GetPathOfBackup(BackupInformation)
        VB: World.GetPathOfBackup(BackupInformation)
      qualifiedName:
        CSharp: IMS_Library.World.GetPathOfBackup(IMS_Library.BackupInformation)
        VB: IMS_Library.World.GetPathOfBackup(IMS_Library.BackupInformation)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetPathOfBackup
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\World\World.cs
        startLine: 149
      summary: "\nRetrieves the absolute path of a backup&apos;s Minecraft world folder.\n"
      example: []
      syntax:
        content:
          CSharp: public string GetPathOfBackup(BackupInformation backup)
          VB: Public Function GetPathOfBackup(backup As BackupInformation) As String
        parameters:
        - id: backup
          type: IMS_Library.BackupInformation
          description: The backup to get information about.
        return:
          type: System.String
          description: The absolute path of the Minecraft world folder.
      overload: IMS_Library.World.GetPathOfBackup*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.World.GetPathOfBackup(System.Guid)
      commentId: M:IMS_Library.World.GetPathOfBackup(System.Guid)
      language: CSharp
      name:
        CSharp: GetPathOfBackup(Guid)
        VB: GetPathOfBackup(Guid)
      nameWithType:
        CSharp: World.GetPathOfBackup(Guid)
        VB: World.GetPathOfBackup(Guid)
      qualifiedName:
        CSharp: IMS_Library.World.GetPathOfBackup(System.Guid)
        VB: IMS_Library.World.GetPathOfBackup(System.Guid)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetPathOfBackup
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\World\World.cs
        startLine: 163
      summary: "\nRetrieves the absolute path of a backup&apos;s Minecraft world folder.\n"
      example: []
      syntax:
        content:
          CSharp: public string GetPathOfBackup(Guid backup)
          VB: Public Function GetPathOfBackup(backup As Guid) As String
        parameters:
        - id: backup
          type: System.Guid
          description: The unique identifier of the backup to get information about.
        return:
          type: System.String
          description: The absolute path of the Minecraft world folder.
      overload: IMS_Library.World.GetPathOfBackup*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IMS_Library.World.DeleteBackupAsync(System.Guid)
      commentId: M:IMS_Library.World.DeleteBackupAsync(System.Guid)
      language: CSharp
      name:
        CSharp: DeleteBackupAsync(Guid)
        VB: DeleteBackupAsync(Guid)
      nameWithType:
        CSharp: World.DeleteBackupAsync(Guid)
        VB: World.DeleteBackupAsync(Guid)
      qualifiedName:
        CSharp: IMS_Library.World.DeleteBackupAsync(System.Guid)
        VB: IMS_Library.World.DeleteBackupAsync(System.Guid)
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: DeleteBackupAsync
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\World\World.cs
        startLine: 173
      summary: "\nDeletes a backup from the backup registry, removing the Minecraft world folder from disk.\n"
      example: []
      syntax:
        content:
          CSharp: public Task DeleteBackupAsync(Guid backupID)
          VB: Public Function DeleteBackupAsync(backupID As Guid) As Task
        parameters:
        - id: backupID
          type: System.Guid
          description: The unique identifier of the backup to remove.
        return:
          type: System.Threading.Tasks.Task
          description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object representing the current state of the directory deletion operation.
      overload: IMS_Library.World.DeleteBackupAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        System.Threading.Tasks.Task: 
    - id: IMS_Library.World.GetDefaultFilePath
      commentId: M:IMS_Library.World.GetDefaultFilePath
      language: CSharp
      name:
        CSharp: GetDefaultFilePath()
        VB: GetDefaultFilePath()
      nameWithType:
        CSharp: World.GetDefaultFilePath()
        VB: World.GetDefaultFilePath()
      qualifiedName:
        CSharp: IMS_Library.World.GetDefaultFilePath()
        VB: IMS_Library.World.GetDefaultFilePath()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetDefaultFilePath
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\World\World.cs
        startLine: 185
      summary: "\nRetrieves the file path for this <xref href=\"IMS_Library.World\" data-throw-if-not-resolved=\"false\"></xref>&apos;s configuration file.\n"
      example: []
      syntax:
        content:
          CSharp: public override string GetDefaultFilePath()
          VB: Public Overrides Function GetDefaultFilePath As String
        return:
          type: System.String
          description: The absolute path of the configuration file.
      overload: IMS_Library.World.GetDefaultFilePath*
      overridden: IMS_Library.IMSConfiguration.GetDefaultFilePath
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
      references:
        IMS_Library.World: 
    - id: IMS_Library.World.RunBackupUpdates
      commentId: M:IMS_Library.World.RunBackupUpdates
      language: CSharp
      name:
        CSharp: RunBackupUpdates()
        VB: RunBackupUpdates()
      nameWithType:
        CSharp: World.RunBackupUpdates()
        VB: World.RunBackupUpdates()
      qualifiedName:
        CSharp: IMS_Library.World.RunBackupUpdates()
        VB: IMS_Library.World.RunBackupUpdates()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: RunBackupUpdates
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\World\World.cs
        startLine: 193
      summary: "\nCalls the <xref href=\"IMS_Library.IBackupPolicy.Update(IMS_Library.World)\" data-throw-if-not-resolved=\"false\"></xref> method on all registered backup policies.\n"
      example: []
      syntax:
        content:
          CSharp: public void RunBackupUpdates()
          VB: Public Sub RunBackupUpdates
      overload: IMS_Library.World.RunBackupUpdates*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        IMS_Library.IBackupPolicy.Update(IMS_Library.World): 
    - id: IMS_Library.World.GetTotalSizeAsync
      commentId: M:IMS_Library.World.GetTotalSizeAsync
      language: CSharp
      name:
        CSharp: GetTotalSizeAsync()
        VB: GetTotalSizeAsync()
      nameWithType:
        CSharp: World.GetTotalSizeAsync()
        VB: World.GetTotalSizeAsync()
      qualifiedName:
        CSharp: IMS_Library.World.GetTotalSizeAsync()
        VB: IMS_Library.World.GetTotalSizeAsync()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetTotalSizeAsync
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\World\World.cs
        startLine: 210
      summary: "\nRetrieves the total size of all Minecraft world files on disk.\n"
      example: []
      syntax:
        content:
          CSharp: public Task<long> GetTotalSizeAsync()
          VB: Public Function GetTotalSizeAsync As Task(Of Long)
        return:
          type: System.Threading.Tasks.Task{System.Int64}
          description: The size, in bytes, of the <xref href="IMS_Library.World.FolderPath" data-throw-if-not-resolved="false"></xref> folder.
      overload: IMS_Library.World.GetTotalSizeAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        IMS_Library.World.FolderPath: 
    - id: IMS_Library.World.GetWorldSizeAsync
      commentId: M:IMS_Library.World.GetWorldSizeAsync
      language: CSharp
      name:
        CSharp: GetWorldSizeAsync()
        VB: GetWorldSizeAsync()
      nameWithType:
        CSharp: World.GetWorldSizeAsync()
        VB: World.GetWorldSizeAsync()
      qualifiedName:
        CSharp: IMS_Library.World.GetWorldSizeAsync()
        VB: IMS_Library.World.GetWorldSizeAsync()
      type: Method
      assemblies:
      - IMS-Library
      namespace: IMS_Library
      source:
        id: GetWorldSizeAsync
        path: D:\Projects\IntegratedMinecraftServer\IMS-Library\World\World.cs
        startLine: 219
      summary: "\nRetrieves the total size of the current Minecraft world folder.\n"
      example: []
      syntax:
        content:
          CSharp: public Task<long> GetWorldSizeAsync()
          VB: Public Function GetWorldSizeAsync As Task(Of Long)
        return:
          type: System.Threading.Tasks.Task{System.Int64}
          description: The size, in bytes, of the <xref href="IMS_Library.World.WorldPath" data-throw-if-not-resolved="false"></xref> folder.
      overload: IMS_Library.World.GetWorldSizeAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        IMS_Library.World.WorldPath: 
references:
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.Object.Equals(System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object)
  System.Object.Equals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object,System.Object)
  System.Object.GetHashCode:
    name:
      CSharp:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetHashCode
  System.Object.GetType:
    name:
      CSharp:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetType
  System.Object.MemberwiseClone:
    name:
      CSharp:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.MemberwiseClone
  System.Object.ReferenceEquals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  System.Object.ToString:
    name:
      CSharp:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ToString
  System.Diagnostics:
    name:
      CSharp:
      - name: System.Diagnostics
        nameWithType: System.Diagnostics
        qualifiedName: System.Diagnostics
        isExternal: true
      VB:
      - name: System.Diagnostics
        nameWithType: System.Diagnostics
        qualifiedName: System.Diagnostics
    isDefinition: true
    commentId: N:System.Diagnostics
  System.Diagnostics.Process:
    name:
      CSharp:
      - id: System.Diagnostics.Process
        name: Process
        nameWithType: Process
        qualifiedName: System.Diagnostics.Process
        isExternal: true
      VB:
      - id: System.Diagnostics.Process
        name: Process
        nameWithType: Process
        qualifiedName: System.Diagnostics.Process
        isExternal: true
    isDefinition: true
    parent: System.Diagnostics
    commentId: T:System.Diagnostics.Process
  IMS_Library.ChildProcessTracker.AddProcess*:
    name:
      CSharp:
      - id: IMS_Library.ChildProcessTracker.AddProcess*
        name: AddProcess
        nameWithType: ChildProcessTracker.AddProcess
        qualifiedName: IMS_Library.ChildProcessTracker.AddProcess
      VB:
      - id: IMS_Library.ChildProcessTracker.AddProcess*
        name: AddProcess
        nameWithType: ChildProcessTracker.AddProcess
        qualifiedName: IMS_Library.ChildProcessTracker.AddProcess
    isDefinition: true
    commentId: Overload:IMS_Library.ChildProcessTracker.AddProcess
  IMS_Library.ChildProcessTracker:
    name:
      CSharp:
      - id: IMS_Library.ChildProcessTracker
        name: ChildProcessTracker
        nameWithType: ChildProcessTracker
        qualifiedName: IMS_Library.ChildProcessTracker
      VB:
      - id: IMS_Library.ChildProcessTracker
        name: ChildProcessTracker
        nameWithType: ChildProcessTracker
        qualifiedName: IMS_Library.ChildProcessTracker
    isDefinition: true
    commentId: T:IMS_Library.ChildProcessTracker
  IMS_Library:
    name:
      CSharp:
      - name: IMS_Library
        nameWithType: IMS_Library
        qualifiedName: IMS_Library
      VB:
      - name: IMS_Library
        nameWithType: IMS_Library
        qualifiedName: IMS_Library
    isDefinition: true
    commentId: N:IMS_Library
  IMS_Library.JobObjectInfoType:
    name:
      CSharp:
      - id: IMS_Library.JobObjectInfoType
        name: JobObjectInfoType
        nameWithType: JobObjectInfoType
        qualifiedName: IMS_Library.JobObjectInfoType
      VB:
      - id: IMS_Library.JobObjectInfoType
        name: JobObjectInfoType
        nameWithType: JobObjectInfoType
        qualifiedName: IMS_Library.JobObjectInfoType
    isDefinition: true
    parent: IMS_Library
    commentId: T:IMS_Library.JobObjectInfoType
  System.ValueType:
    name:
      CSharp:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
      VB:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.ValueType
  System.ValueType.Equals(System.Object):
    name:
      CSharp:
      - id: System.ValueType.Equals(System.Object)
        name: Equals
        nameWithType: ValueType.Equals
        qualifiedName: System.ValueType.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.Equals(System.Object)
        name: Equals
        nameWithType: ValueType.Equals
        qualifiedName: System.ValueType.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.Equals(System.Object)
  System.ValueType.GetHashCode:
    name:
      CSharp:
      - id: System.ValueType.GetHashCode
        name: GetHashCode
        nameWithType: ValueType.GetHashCode
        qualifiedName: System.ValueType.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.GetHashCode
        name: GetHashCode
        nameWithType: ValueType.GetHashCode
        qualifiedName: System.ValueType.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.GetHashCode
  System.ValueType.ToString:
    name:
      CSharp:
      - id: System.ValueType.ToString
        name: ToString
        nameWithType: ValueType.ToString
        qualifiedName: System.ValueType.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.ToString
        name: ToString
        nameWithType: ValueType.ToString
        qualifiedName: System.ValueType.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.ToString
  System.Int64:
    name:
      CSharp:
      - id: System.Int64
        name: Int64
        nameWithType: Int64
        qualifiedName: System.Int64
        isExternal: true
      VB:
      - id: System.Int64
        name: Int64
        nameWithType: Int64
        qualifiedName: System.Int64
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int64
  IMS_Library.JOBOBJECTLIMIT:
    name:
      CSharp:
      - id: IMS_Library.JOBOBJECTLIMIT
        name: JOBOBJECTLIMIT
        nameWithType: JOBOBJECTLIMIT
        qualifiedName: IMS_Library.JOBOBJECTLIMIT
      VB:
      - id: IMS_Library.JOBOBJECTLIMIT
        name: JOBOBJECTLIMIT
        nameWithType: JOBOBJECTLIMIT
        qualifiedName: IMS_Library.JOBOBJECTLIMIT
    isDefinition: true
    parent: IMS_Library
    commentId: T:IMS_Library.JOBOBJECTLIMIT
  System.UIntPtr:
    name:
      CSharp:
      - id: System.UIntPtr
        name: UIntPtr
        nameWithType: UIntPtr
        qualifiedName: System.UIntPtr
        isExternal: true
      VB:
      - id: System.UIntPtr
        name: UIntPtr
        nameWithType: UIntPtr
        qualifiedName: System.UIntPtr
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.UIntPtr
  System.UInt32:
    name:
      CSharp:
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      VB:
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.UInt32
  IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION:
    name:
      CSharp:
      - id: IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION
        name: JOBOBJECT_BASIC_LIMIT_INFORMATION
        nameWithType: JOBOBJECT_BASIC_LIMIT_INFORMATION
        qualifiedName: IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION
      VB:
      - id: IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION
        name: JOBOBJECT_BASIC_LIMIT_INFORMATION
        nameWithType: JOBOBJECT_BASIC_LIMIT_INFORMATION
        qualifiedName: IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION
    isDefinition: true
    parent: IMS_Library
    commentId: T:IMS_Library.JOBOBJECT_BASIC_LIMIT_INFORMATION
  System.FlagsAttribute:
    name:
      CSharp:
      - id: System.FlagsAttribute
        name: FlagsAttribute
        nameWithType: FlagsAttribute
        qualifiedName: System.FlagsAttribute
        isExternal: true
      VB:
      - id: System.FlagsAttribute
        name: FlagsAttribute
        nameWithType: FlagsAttribute
        qualifiedName: System.FlagsAttribute
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.FlagsAttribute
  System.FlagsAttribute.#ctor:
    name:
      CSharp:
      - id: System.FlagsAttribute.#ctor
        name: FlagsAttribute
        nameWithType: FlagsAttribute.FlagsAttribute
        qualifiedName: System.FlagsAttribute.FlagsAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.FlagsAttribute.#ctor
        name: FlagsAttribute
        nameWithType: FlagsAttribute.FlagsAttribute
        qualifiedName: System.FlagsAttribute.FlagsAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.FlagsAttribute
    commentId: M:System.FlagsAttribute.#ctor
  System.UInt64:
    name:
      CSharp:
      - id: System.UInt64
        name: UInt64
        nameWithType: UInt64
        qualifiedName: System.UInt64
        isExternal: true
      VB:
      - id: System.UInt64
        name: UInt64
        nameWithType: UInt64
        qualifiedName: System.UInt64
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.UInt64
  IMS_Library.IO_COUNTERS:
    name:
      CSharp:
      - id: IMS_Library.IO_COUNTERS
        name: IO_COUNTERS
        nameWithType: IO_COUNTERS
        qualifiedName: IMS_Library.IO_COUNTERS
      VB:
      - id: IMS_Library.IO_COUNTERS
        name: IO_COUNTERS
        nameWithType: IO_COUNTERS
        qualifiedName: IMS_Library.IO_COUNTERS
    isDefinition: true
    parent: IMS_Library
    commentId: T:IMS_Library.IO_COUNTERS
  IMS_Library.JOBOBJECT_EXTENDED_LIMIT_INFORMATION:
    name:
      CSharp:
      - id: IMS_Library.JOBOBJECT_EXTENDED_LIMIT_INFORMATION
        name: JOBOBJECT_EXTENDED_LIMIT_INFORMATION
        nameWithType: JOBOBJECT_EXTENDED_LIMIT_INFORMATION
        qualifiedName: IMS_Library.JOBOBJECT_EXTENDED_LIMIT_INFORMATION
      VB:
      - id: IMS_Library.JOBOBJECT_EXTENDED_LIMIT_INFORMATION
        name: JOBOBJECT_EXTENDED_LIMIT_INFORMATION
        nameWithType: JOBOBJECT_EXTENDED_LIMIT_INFORMATION
        qualifiedName: IMS_Library.JOBOBJECT_EXTENDED_LIMIT_INFORMATION
    isDefinition: true
    commentId: T:IMS_Library.JOBOBJECT_EXTENDED_LIMIT_INFORMATION
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  IMS_Library.PortForwarder:
    name:
      CSharp:
      - id: IMS_Library.PortForwarder
        name: PortForwarder
        nameWithType: PortForwarder
        qualifiedName: IMS_Library.PortForwarder
      VB:
      - id: IMS_Library.PortForwarder
        name: PortForwarder
        nameWithType: PortForwarder
        qualifiedName: IMS_Library.PortForwarder
    isDefinition: true
    parent: IMS_Library
    commentId: T:IMS_Library.PortForwarder
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  System.Collections.Generic.Dictionary`2:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.Dictionary`2
  System.Collections.Generic:
    name:
      CSharp:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
        isExternal: true
      VB:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
    isDefinition: true
    commentId: N:System.Collections.Generic
  System.Collections.Generic.Dictionary{System.String,System.String}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  IMS_Library.Constants:
    name:
      CSharp:
      - id: IMS_Library.Constants
        name: Constants
        nameWithType: Constants
        qualifiedName: IMS_Library.Constants
      VB:
      - id: IMS_Library.Constants
        name: Constants
        nameWithType: Constants
        qualifiedName: IMS_Library.Constants
    isDefinition: true
    commentId: T:IMS_Library.Constants
  System.Byte[]:
    name:
      CSharp:
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  System.Byte:
    name:
      CSharp:
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      VB:
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Byte
  IMS_Library.Encryption.GetRandomBytes*:
    name:
      CSharp:
      - id: IMS_Library.Encryption.GetRandomBytes*
        name: GetRandomBytes
        nameWithType: Encryption.GetRandomBytes
        qualifiedName: IMS_Library.Encryption.GetRandomBytes
      VB:
      - id: IMS_Library.Encryption.GetRandomBytes*
        name: GetRandomBytes
        nameWithType: Encryption.GetRandomBytes
        qualifiedName: IMS_Library.Encryption.GetRandomBytes
    isDefinition: true
    commentId: Overload:IMS_Library.Encryption.GetRandomBytes
  IMS_Library.Encryption.HashBytes*:
    name:
      CSharp:
      - id: IMS_Library.Encryption.HashBytes*
        name: HashBytes
        nameWithType: Encryption.HashBytes
        qualifiedName: IMS_Library.Encryption.HashBytes
      VB:
      - id: IMS_Library.Encryption.HashBytes*
        name: HashBytes
        nameWithType: Encryption.HashBytes
        qualifiedName: IMS_Library.Encryption.HashBytes
    isDefinition: true
    commentId: Overload:IMS_Library.Encryption.HashBytes
  System.Tuple`2:
    name:
      CSharp:
      - id: System.Tuple`2
        name: Tuple
        nameWithType: Tuple
        qualifiedName: System.Tuple
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Tuple`2
        name: Tuple
        nameWithType: Tuple
        qualifiedName: System.Tuple
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Tuple`2
  System.Tuple{System.Security.Cryptography.RSAParameters,System.Security.Cryptography.RSAParameters}:
    name:
      CSharp:
      - id: System.Tuple`2
        name: Tuple
        nameWithType: Tuple
        qualifiedName: System.Tuple
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Security.Cryptography.RSAParameters
        name: RSAParameters
        nameWithType: RSAParameters
        qualifiedName: System.Security.Cryptography.RSAParameters
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Security.Cryptography.RSAParameters
        name: RSAParameters
        nameWithType: RSAParameters
        qualifiedName: System.Security.Cryptography.RSAParameters
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Tuple`2
        name: Tuple
        nameWithType: Tuple
        qualifiedName: System.Tuple
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Security.Cryptography.RSAParameters
        name: RSAParameters
        nameWithType: RSAParameters
        qualifiedName: System.Security.Cryptography.RSAParameters
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Security.Cryptography.RSAParameters
        name: RSAParameters
        nameWithType: RSAParameters
        qualifiedName: System.Security.Cryptography.RSAParameters
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Tuple`2
    parent: System
    commentId: T:System.Tuple{System.Security.Cryptography.RSAParameters,System.Security.Cryptography.RSAParameters}
  IMS_Library.Encryption.GenerateAsymmetricKeyPair*:
    name:
      CSharp:
      - id: IMS_Library.Encryption.GenerateAsymmetricKeyPair*
        name: GenerateAsymmetricKeyPair
        nameWithType: Encryption.GenerateAsymmetricKeyPair
        qualifiedName: IMS_Library.Encryption.GenerateAsymmetricKeyPair
      VB:
      - id: IMS_Library.Encryption.GenerateAsymmetricKeyPair*
        name: GenerateAsymmetricKeyPair
        nameWithType: Encryption.GenerateAsymmetricKeyPair
        qualifiedName: IMS_Library.Encryption.GenerateAsymmetricKeyPair
    isDefinition: true
    commentId: Overload:IMS_Library.Encryption.GenerateAsymmetricKeyPair
  System.Security.Cryptography:
    name:
      CSharp:
      - name: System.Security.Cryptography
        nameWithType: System.Security.Cryptography
        qualifiedName: System.Security.Cryptography
        isExternal: true
      VB:
      - name: System.Security.Cryptography
        nameWithType: System.Security.Cryptography
        qualifiedName: System.Security.Cryptography
    isDefinition: true
    commentId: N:System.Security.Cryptography
  System.Security.Cryptography.RSAParameters:
    name:
      CSharp:
      - id: System.Security.Cryptography.RSAParameters
        name: RSAParameters
        nameWithType: RSAParameters
        qualifiedName: System.Security.Cryptography.RSAParameters
        isExternal: true
      VB:
      - id: System.Security.Cryptography.RSAParameters
        name: RSAParameters
        nameWithType: RSAParameters
        qualifiedName: System.Security.Cryptography.RSAParameters
        isExternal: true
    isDefinition: true
    parent: System.Security.Cryptography
    commentId: T:System.Security.Cryptography.RSAParameters
  IMS_Library.Encryption.DecryptBytesAsymmetric*:
    name:
      CSharp:
      - id: IMS_Library.Encryption.DecryptBytesAsymmetric*
        name: DecryptBytesAsymmetric
        nameWithType: Encryption.DecryptBytesAsymmetric
        qualifiedName: IMS_Library.Encryption.DecryptBytesAsymmetric
      VB:
      - id: IMS_Library.Encryption.DecryptBytesAsymmetric*
        name: DecryptBytesAsymmetric
        nameWithType: Encryption.DecryptBytesAsymmetric
        qualifiedName: IMS_Library.Encryption.DecryptBytesAsymmetric
    isDefinition: true
    commentId: Overload:IMS_Library.Encryption.DecryptBytesAsymmetric
  IMS_Library.Encryption.EncryptBytesAsymmetric*:
    name:
      CSharp:
      - id: IMS_Library.Encryption.EncryptBytesAsymmetric*
        name: EncryptBytesAsymmetric
        nameWithType: Encryption.EncryptBytesAsymmetric
        qualifiedName: IMS_Library.Encryption.EncryptBytesAsymmetric
      VB:
      - id: IMS_Library.Encryption.EncryptBytesAsymmetric*
        name: EncryptBytesAsymmetric
        nameWithType: Encryption.EncryptBytesAsymmetric
        qualifiedName: IMS_Library.Encryption.EncryptBytesAsymmetric
    isDefinition: true
    commentId: Overload:IMS_Library.Encryption.EncryptBytesAsymmetric
  IMS_Library.Encryption:
    name:
      CSharp:
      - id: IMS_Library.Encryption
        name: Encryption
        nameWithType: Encryption
        qualifiedName: IMS_Library.Encryption
      VB:
      - id: IMS_Library.Encryption
        name: Encryption
        nameWithType: Encryption
        qualifiedName: IMS_Library.Encryption
    isDefinition: true
    commentId: T:IMS_Library.Encryption
  System.Collections.Concurrent.ConcurrentDictionary`2:
    name:
      CSharp:
      - id: System.Collections.Concurrent.ConcurrentDictionary`2
        name: ConcurrentDictionary
        nameWithType: ConcurrentDictionary
        qualifiedName: System.Collections.Concurrent.ConcurrentDictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Concurrent.ConcurrentDictionary`2
        name: ConcurrentDictionary
        nameWithType: ConcurrentDictionary
        qualifiedName: System.Collections.Concurrent.ConcurrentDictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Concurrent.ConcurrentDictionary`2
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  System.Collections.Concurrent:
    name:
      CSharp:
      - name: System.Collections.Concurrent
        nameWithType: System.Collections.Concurrent
        qualifiedName: System.Collections.Concurrent
        isExternal: true
      VB:
      - name: System.Collections.Concurrent
        nameWithType: System.Collections.Concurrent
        qualifiedName: System.Collections.Concurrent
    isDefinition: true
    commentId: N:System.Collections.Concurrent
  System.Collections.Concurrent.ConcurrentDictionary{{K},{V}}:
    name:
      CSharp:
      - id: System.Collections.Concurrent.ConcurrentDictionary`2
        name: ConcurrentDictionary
        nameWithType: ConcurrentDictionary
        qualifiedName: System.Collections.Concurrent.ConcurrentDictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: K
        nameWithType: K
        qualifiedName: K
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: V
        nameWithType: V
        qualifiedName: V
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Concurrent.ConcurrentDictionary`2
        name: ConcurrentDictionary
        nameWithType: ConcurrentDictionary
        qualifiedName: System.Collections.Concurrent.ConcurrentDictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: K
        nameWithType: K
        qualifiedName: K
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: V
        nameWithType: V
        qualifiedName: V
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Concurrent.ConcurrentDictionary`2
    parent: System.Collections.Concurrent
    commentId: T:System.Collections.Concurrent.ConcurrentDictionary{``0,``1}
  K:
    name:
      CSharp:
      - name: K
        nameWithType: K
        qualifiedName: K
      VB:
      - name: K
        nameWithType: K
        qualifiedName: K
    isDefinition: true
    commentId: '!:K'
  '{K}':
    name:
      CSharp:
      - name: K
        nameWithType: K
        qualifiedName: K
      VB:
      - name: K
        nameWithType: K
        qualifiedName: K
    isDefinition: false
    definition: K
    commentId: '!:K'
  IMS_Library.Extensions.Remove*:
    name:
      CSharp:
      - id: IMS_Library.Extensions.Remove*
        name: Remove
        nameWithType: Extensions.Remove
        qualifiedName: IMS_Library.Extensions.Remove
      VB:
      - id: IMS_Library.Extensions.Remove*
        name: Remove
        nameWithType: Extensions.Remove
        qualifiedName: IMS_Library.Extensions.Remove
    isDefinition: true
    commentId: Overload:IMS_Library.Extensions.Remove
  System.IO:
    name:
      CSharp:
      - name: System.IO
        nameWithType: System.IO
        qualifiedName: System.IO
        isExternal: true
      VB:
      - name: System.IO
        nameWithType: System.IO
        qualifiedName: System.IO
    isDefinition: true
    commentId: N:System.IO
  System.IO.FileInfo:
    name:
      CSharp:
      - id: System.IO.FileInfo
        name: FileInfo
        nameWithType: FileInfo
        qualifiedName: System.IO.FileInfo
        isExternal: true
      VB:
      - id: System.IO.FileInfo
        name: FileInfo
        nameWithType: FileInfo
        qualifiedName: System.IO.FileInfo
        isExternal: true
    isDefinition: true
    parent: System.IO
    commentId: T:System.IO.FileInfo
  IMS_Library.Extensions.IsFileLocked*:
    name:
      CSharp:
      - id: IMS_Library.Extensions.IsFileLocked*
        name: IsFileLocked
        nameWithType: Extensions.IsFileLocked
        qualifiedName: IMS_Library.Extensions.IsFileLocked
      VB:
      - id: IMS_Library.Extensions.IsFileLocked*
        name: IsFileLocked
        nameWithType: Extensions.IsFileLocked
        qualifiedName: IMS_Library.Extensions.IsFileLocked
    isDefinition: true
    commentId: Overload:IMS_Library.Extensions.IsFileLocked
  IMS_Library.Extensions.CopyFolder*:
    name:
      CSharp:
      - id: IMS_Library.Extensions.CopyFolder*
        name: CopyFolder
        nameWithType: Extensions.CopyFolder
        qualifiedName: IMS_Library.Extensions.CopyFolder
      VB:
      - id: IMS_Library.Extensions.CopyFolder*
        name: CopyFolder
        nameWithType: Extensions.CopyFolder
        qualifiedName: IMS_Library.Extensions.CopyFolder
    isDefinition: true
    commentId: Overload:IMS_Library.Extensions.CopyFolder
  IMS_Library.Extensions:
    name:
      CSharp:
      - id: IMS_Library.Extensions
        name: Extensions
        nameWithType: Extensions
        qualifiedName: IMS_Library.Extensions
      VB:
      - id: IMS_Library.Extensions
        name: Extensions
        nameWithType: Extensions
        qualifiedName: IMS_Library.Extensions
    isDefinition: true
    commentId: T:IMS_Library.Extensions
  System.Guid:
    name:
      CSharp:
      - id: System.Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: System.Guid
        isExternal: true
      VB:
      - id: System.Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: System.Guid
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Guid
  IMS_Library.FirewallController.CreateFirewallExecutableException*:
    name:
      CSharp:
      - id: IMS_Library.FirewallController.CreateFirewallExecutableException*
        name: CreateFirewallExecutableException
        nameWithType: FirewallController.CreateFirewallExecutableException
        qualifiedName: IMS_Library.FirewallController.CreateFirewallExecutableException
      VB:
      - id: IMS_Library.FirewallController.CreateFirewallExecutableException*
        name: CreateFirewallExecutableException
        nameWithType: FirewallController.CreateFirewallExecutableException
        qualifiedName: IMS_Library.FirewallController.CreateFirewallExecutableException
    isDefinition: true
    commentId: Overload:IMS_Library.FirewallController.CreateFirewallExecutableException
  IMS_Library.FirewallController.RemoveFirewallExecutableException*:
    name:
      CSharp:
      - id: IMS_Library.FirewallController.RemoveFirewallExecutableException*
        name: RemoveFirewallExecutableException
        nameWithType: FirewallController.RemoveFirewallExecutableException
        qualifiedName: IMS_Library.FirewallController.RemoveFirewallExecutableException
      VB:
      - id: IMS_Library.FirewallController.RemoveFirewallExecutableException*
        name: RemoveFirewallExecutableException
        nameWithType: FirewallController.RemoveFirewallExecutableException
        qualifiedName: IMS_Library.FirewallController.RemoveFirewallExecutableException
    isDefinition: true
    commentId: Overload:IMS_Library.FirewallController.RemoveFirewallExecutableException
  IMS_Library.FirewallController.CreateFirewallPortException*:
    name:
      CSharp:
      - id: IMS_Library.FirewallController.CreateFirewallPortException*
        name: CreateFirewallPortException
        nameWithType: FirewallController.CreateFirewallPortException
        qualifiedName: IMS_Library.FirewallController.CreateFirewallPortException
      VB:
      - id: IMS_Library.FirewallController.CreateFirewallPortException*
        name: CreateFirewallPortException
        nameWithType: FirewallController.CreateFirewallPortException
        qualifiedName: IMS_Library.FirewallController.CreateFirewallPortException
    isDefinition: true
    commentId: Overload:IMS_Library.FirewallController.CreateFirewallPortException
  IMS_Library.FirewallController.RemoveFirewallPortException*:
    name:
      CSharp:
      - id: IMS_Library.FirewallController.RemoveFirewallPortException*
        name: RemoveFirewallPortException
        nameWithType: FirewallController.RemoveFirewallPortException
        qualifiedName: IMS_Library.FirewallController.RemoveFirewallPortException
      VB:
      - id: IMS_Library.FirewallController.RemoveFirewallPortException*
        name: RemoveFirewallPortException
        nameWithType: FirewallController.RemoveFirewallPortException
        qualifiedName: IMS_Library.FirewallController.RemoveFirewallPortException
    isDefinition: true
    commentId: Overload:IMS_Library.FirewallController.RemoveFirewallPortException
  IMS_Library.FirewallController:
    name:
      CSharp:
      - id: IMS_Library.FirewallController
        name: FirewallController
        nameWithType: FirewallController
        qualifiedName: IMS_Library.FirewallController
      VB:
      - id: IMS_Library.FirewallController
        name: FirewallController
        nameWithType: FirewallController
        qualifiedName: IMS_Library.FirewallController
    isDefinition: true
    parent: IMS_Library
    commentId: T:IMS_Library.FirewallController
  System.ServiceProcess:
    name:
      CSharp:
      - name: System.ServiceProcess
        nameWithType: System.ServiceProcess
        qualifiedName: System.ServiceProcess
        isExternal: true
      VB:
      - name: System.ServiceProcess
        nameWithType: System.ServiceProcess
        qualifiedName: System.ServiceProcess
    isDefinition: true
    commentId: N:System.ServiceProcess
  System.ServiceProcess.ServiceBase:
    name:
      CSharp:
      - id: System.ServiceProcess.ServiceBase
        name: ServiceBase
        nameWithType: ServiceBase
        qualifiedName: System.ServiceProcess.ServiceBase
        isExternal: true
      VB:
      - id: System.ServiceProcess.ServiceBase
        name: ServiceBase
        nameWithType: ServiceBase
        qualifiedName: System.ServiceProcess.ServiceBase
        isExternal: true
    isDefinition: true
    parent: System.ServiceProcess
    commentId: T:System.ServiceProcess.ServiceBase
  System.ServiceProcess.ServiceBase.MaxNameLength:
    name:
      CSharp:
      - id: System.ServiceProcess.ServiceBase.MaxNameLength
        name: MaxNameLength
        nameWithType: ServiceBase.MaxNameLength
        qualifiedName: System.ServiceProcess.ServiceBase.MaxNameLength
        isExternal: true
      VB:
      - id: System.ServiceProcess.ServiceBase.MaxNameLength
        name: MaxNameLength
        nameWithType: ServiceBase.MaxNameLength
        qualifiedName: System.ServiceProcess.ServiceBase.MaxNameLength
        isExternal: true
    isDefinition: true
    parent: System.ServiceProcess.ServiceBase
    commentId: F:System.ServiceProcess.ServiceBase.MaxNameLength
  System.ServiceProcess.ServiceBase.Dispose(System.Boolean):
    name:
      CSharp:
      - id: System.ServiceProcess.ServiceBase.Dispose(System.Boolean)
        name: Dispose
        nameWithType: ServiceBase.Dispose
        qualifiedName: System.ServiceProcess.ServiceBase.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ServiceProcess.ServiceBase.Dispose(System.Boolean)
        name: Dispose
        nameWithType: ServiceBase.Dispose
        qualifiedName: System.ServiceProcess.ServiceBase.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ServiceProcess.ServiceBase
    commentId: M:System.ServiceProcess.ServiceBase.Dispose(System.Boolean)
  System.ServiceProcess.ServiceBase.OnContinue:
    name:
      CSharp:
      - id: System.ServiceProcess.ServiceBase.OnContinue
        name: OnContinue
        nameWithType: ServiceBase.OnContinue
        qualifiedName: System.ServiceProcess.ServiceBase.OnContinue
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ServiceProcess.ServiceBase.OnContinue
        name: OnContinue
        nameWithType: ServiceBase.OnContinue
        qualifiedName: System.ServiceProcess.ServiceBase.OnContinue
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ServiceProcess.ServiceBase
    commentId: M:System.ServiceProcess.ServiceBase.OnContinue
  System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32):
    name:
      CSharp:
      - id: System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)
        name: OnCustomCommand
        nameWithType: ServiceBase.OnCustomCommand
        qualifiedName: System.ServiceProcess.ServiceBase.OnCustomCommand
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)
        name: OnCustomCommand
        nameWithType: ServiceBase.OnCustomCommand
        qualifiedName: System.ServiceProcess.ServiceBase.OnCustomCommand
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ServiceProcess.ServiceBase
    commentId: M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)
  System.ServiceProcess.ServiceBase.OnPause:
    name:
      CSharp:
      - id: System.ServiceProcess.ServiceBase.OnPause
        name: OnPause
        nameWithType: ServiceBase.OnPause
        qualifiedName: System.ServiceProcess.ServiceBase.OnPause
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ServiceProcess.ServiceBase.OnPause
        name: OnPause
        nameWithType: ServiceBase.OnPause
        qualifiedName: System.ServiceProcess.ServiceBase.OnPause
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ServiceProcess.ServiceBase
    commentId: M:System.ServiceProcess.ServiceBase.OnPause
  System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus):
    name:
      CSharp:
      - id: System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)
        name: OnPowerEvent
        nameWithType: ServiceBase.OnPowerEvent
        qualifiedName: System.ServiceProcess.ServiceBase.OnPowerEvent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.ServiceProcess.PowerBroadcastStatus
        name: PowerBroadcastStatus
        nameWithType: PowerBroadcastStatus
        qualifiedName: System.ServiceProcess.PowerBroadcastStatus
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)
        name: OnPowerEvent
        nameWithType: ServiceBase.OnPowerEvent
        qualifiedName: System.ServiceProcess.ServiceBase.OnPowerEvent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.ServiceProcess.PowerBroadcastStatus
        name: PowerBroadcastStatus
        nameWithType: PowerBroadcastStatus
        qualifiedName: System.ServiceProcess.PowerBroadcastStatus
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ServiceProcess.ServiceBase
    commentId: M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)
  System.ServiceProcess.ServiceBase.OnSessionChange(System.ServiceProcess.SessionChangeDescription):
    name:
      CSharp:
      - id: System.ServiceProcess.ServiceBase.OnSessionChange(System.ServiceProcess.SessionChangeDescription)
        name: OnSessionChange
        nameWithType: ServiceBase.OnSessionChange
        qualifiedName: System.ServiceProcess.ServiceBase.OnSessionChange
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.ServiceProcess.SessionChangeDescription
        name: SessionChangeDescription
        nameWithType: SessionChangeDescription
        qualifiedName: System.ServiceProcess.SessionChangeDescription
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ServiceProcess.ServiceBase.OnSessionChange(System.ServiceProcess.SessionChangeDescription)
        name: OnSessionChange
        nameWithType: ServiceBase.OnSessionChange
        qualifiedName: System.ServiceProcess.ServiceBase.OnSessionChange
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.ServiceProcess.SessionChangeDescription
        name: SessionChangeDescription
        nameWithType: SessionChangeDescription
        qualifiedName: System.ServiceProcess.SessionChangeDescription
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ServiceProcess.ServiceBase
    commentId: M:System.ServiceProcess.ServiceBase.OnSessionChange(System.ServiceProcess.SessionChangeDescription)
  System.ServiceProcess.ServiceBase.OnShutdown:
    name:
      CSharp:
      - id: System.ServiceProcess.ServiceBase.OnShutdown
        name: OnShutdown
        nameWithType: ServiceBase.OnShutdown
        qualifiedName: System.ServiceProcess.ServiceBase.OnShutdown
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ServiceProcess.ServiceBase.OnShutdown
        name: OnShutdown
        nameWithType: ServiceBase.OnShutdown
        qualifiedName: System.ServiceProcess.ServiceBase.OnShutdown
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ServiceProcess.ServiceBase
    commentId: M:System.ServiceProcess.ServiceBase.OnShutdown
  System.ServiceProcess.ServiceBase.RequestAdditionalTime(System.Int32):
    name:
      CSharp:
      - id: System.ServiceProcess.ServiceBase.RequestAdditionalTime(System.Int32)
        name: RequestAdditionalTime
        nameWithType: ServiceBase.RequestAdditionalTime
        qualifiedName: System.ServiceProcess.ServiceBase.RequestAdditionalTime
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ServiceProcess.ServiceBase.RequestAdditionalTime(System.Int32)
        name: RequestAdditionalTime
        nameWithType: ServiceBase.RequestAdditionalTime
        qualifiedName: System.ServiceProcess.ServiceBase.RequestAdditionalTime
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ServiceProcess.ServiceBase
    commentId: M:System.ServiceProcess.ServiceBase.RequestAdditionalTime(System.Int32)
  System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase):
    name:
      CSharp:
      - id: System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase)
        name: Run
        nameWithType: ServiceBase.Run
        qualifiedName: System.ServiceProcess.ServiceBase.Run
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.ServiceProcess.ServiceBase
        name: ServiceBase
        nameWithType: ServiceBase
        qualifiedName: System.ServiceProcess.ServiceBase
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase)
        name: Run
        nameWithType: ServiceBase.Run
        qualifiedName: System.ServiceProcess.ServiceBase.Run
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.ServiceProcess.ServiceBase
        name: ServiceBase
        nameWithType: ServiceBase
        qualifiedName: System.ServiceProcess.ServiceBase
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ServiceProcess.ServiceBase
    commentId: M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase)
  System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase[]):
    name:
      CSharp:
      - id: System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase[])
        name: Run
        nameWithType: ServiceBase.Run
        qualifiedName: System.ServiceProcess.ServiceBase.Run
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.ServiceProcess.ServiceBase
        name: ServiceBase
        nameWithType: ServiceBase
        qualifiedName: System.ServiceProcess.ServiceBase
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase[])
        name: Run
        nameWithType: ServiceBase.Run
        qualifiedName: System.ServiceProcess.ServiceBase.Run
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.ServiceProcess.ServiceBase
        name: ServiceBase
        nameWithType: ServiceBase
        qualifiedName: System.ServiceProcess.ServiceBase
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ServiceProcess.ServiceBase
    commentId: M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase[])
  System.ServiceProcess.ServiceBase.Stop:
    name:
      CSharp:
      - id: System.ServiceProcess.ServiceBase.Stop
        name: Stop
        nameWithType: ServiceBase.Stop
        qualifiedName: System.ServiceProcess.ServiceBase.Stop
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ServiceProcess.ServiceBase.Stop
        name: Stop
        nameWithType: ServiceBase.Stop
        qualifiedName: System.ServiceProcess.ServiceBase.Stop
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ServiceProcess.ServiceBase
    commentId: M:System.ServiceProcess.ServiceBase.Stop
  System.ServiceProcess.ServiceBase.AutoLog:
    name:
      CSharp:
      - id: System.ServiceProcess.ServiceBase.AutoLog
        name: AutoLog
        nameWithType: ServiceBase.AutoLog
        qualifiedName: System.ServiceProcess.ServiceBase.AutoLog
        isExternal: true
      VB:
      - id: System.ServiceProcess.ServiceBase.AutoLog
        name: AutoLog
        nameWithType: ServiceBase.AutoLog
        qualifiedName: System.ServiceProcess.ServiceBase.AutoLog
        isExternal: true
    isDefinition: true
    parent: System.ServiceProcess.ServiceBase
    commentId: P:System.ServiceProcess.ServiceBase.AutoLog
  System.ServiceProcess.ServiceBase.CanHandlePowerEvent:
    name:
      CSharp:
      - id: System.ServiceProcess.ServiceBase.CanHandlePowerEvent
        name: CanHandlePowerEvent
        nameWithType: ServiceBase.CanHandlePowerEvent
        qualifiedName: System.ServiceProcess.ServiceBase.CanHandlePowerEvent
        isExternal: true
      VB:
      - id: System.ServiceProcess.ServiceBase.CanHandlePowerEvent
        name: CanHandlePowerEvent
        nameWithType: ServiceBase.CanHandlePowerEvent
        qualifiedName: System.ServiceProcess.ServiceBase.CanHandlePowerEvent
        isExternal: true
    isDefinition: true
    parent: System.ServiceProcess.ServiceBase
    commentId: P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent
  System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent:
    name:
      CSharp:
      - id: System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent
        name: CanHandleSessionChangeEvent
        nameWithType: ServiceBase.CanHandleSessionChangeEvent
        qualifiedName: System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent
        isExternal: true
      VB:
      - id: System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent
        name: CanHandleSessionChangeEvent
        nameWithType: ServiceBase.CanHandleSessionChangeEvent
        qualifiedName: System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent
        isExternal: true
    isDefinition: true
    parent: System.ServiceProcess.ServiceBase
    commentId: P:System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent
  System.ServiceProcess.ServiceBase.CanPauseAndContinue:
    name:
      CSharp:
      - id: System.ServiceProcess.ServiceBase.CanPauseAndContinue
        name: CanPauseAndContinue
        nameWithType: ServiceBase.CanPauseAndContinue
        qualifiedName: System.ServiceProcess.ServiceBase.CanPauseAndContinue
        isExternal: true
      VB:
      - id: System.ServiceProcess.ServiceBase.CanPauseAndContinue
        name: CanPauseAndContinue
        nameWithType: ServiceBase.CanPauseAndContinue
        qualifiedName: System.ServiceProcess.ServiceBase.CanPauseAndContinue
        isExternal: true
    isDefinition: true
    parent: System.ServiceProcess.ServiceBase
    commentId: P:System.ServiceProcess.ServiceBase.CanPauseAndContinue
  System.ServiceProcess.ServiceBase.CanShutdown:
    name:
      CSharp:
      - id: System.ServiceProcess.ServiceBase.CanShutdown
        name: CanShutdown
        nameWithType: ServiceBase.CanShutdown
        qualifiedName: System.ServiceProcess.ServiceBase.CanShutdown
        isExternal: true
      VB:
      - id: System.ServiceProcess.ServiceBase.CanShutdown
        name: CanShutdown
        nameWithType: ServiceBase.CanShutdown
        qualifiedName: System.ServiceProcess.ServiceBase.CanShutdown
        isExternal: true
    isDefinition: true
    parent: System.ServiceProcess.ServiceBase
    commentId: P:System.ServiceProcess.ServiceBase.CanShutdown
  System.ServiceProcess.ServiceBase.CanStop:
    name:
      CSharp:
      - id: System.ServiceProcess.ServiceBase.CanStop
        name: CanStop
        nameWithType: ServiceBase.CanStop
        qualifiedName: System.ServiceProcess.ServiceBase.CanStop
        isExternal: true
      VB:
      - id: System.ServiceProcess.ServiceBase.CanStop
        name: CanStop
        nameWithType: ServiceBase.CanStop
        qualifiedName: System.ServiceProcess.ServiceBase.CanStop
        isExternal: true
    isDefinition: true
    parent: System.ServiceProcess.ServiceBase
    commentId: P:System.ServiceProcess.ServiceBase.CanStop
  System.ServiceProcess.ServiceBase.EventLog:
    name:
      CSharp:
      - id: System.ServiceProcess.ServiceBase.EventLog
        name: EventLog
        nameWithType: ServiceBase.EventLog
        qualifiedName: System.ServiceProcess.ServiceBase.EventLog
        isExternal: true
      VB:
      - id: System.ServiceProcess.ServiceBase.EventLog
        name: EventLog
        nameWithType: ServiceBase.EventLog
        qualifiedName: System.ServiceProcess.ServiceBase.EventLog
        isExternal: true
    isDefinition: true
    parent: System.ServiceProcess.ServiceBase
    commentId: P:System.ServiceProcess.ServiceBase.EventLog
  System.ServiceProcess.ServiceBase.ExitCode:
    name:
      CSharp:
      - id: System.ServiceProcess.ServiceBase.ExitCode
        name: ExitCode
        nameWithType: ServiceBase.ExitCode
        qualifiedName: System.ServiceProcess.ServiceBase.ExitCode
        isExternal: true
      VB:
      - id: System.ServiceProcess.ServiceBase.ExitCode
        name: ExitCode
        nameWithType: ServiceBase.ExitCode
        qualifiedName: System.ServiceProcess.ServiceBase.ExitCode
        isExternal: true
    isDefinition: true
    parent: System.ServiceProcess.ServiceBase
    commentId: P:System.ServiceProcess.ServiceBase.ExitCode
  System.ServiceProcess.ServiceBase.ServiceHandle:
    name:
      CSharp:
      - id: System.ServiceProcess.ServiceBase.ServiceHandle
        name: ServiceHandle
        nameWithType: ServiceBase.ServiceHandle
        qualifiedName: System.ServiceProcess.ServiceBase.ServiceHandle
        isExternal: true
      VB:
      - id: System.ServiceProcess.ServiceBase.ServiceHandle
        name: ServiceHandle
        nameWithType: ServiceBase.ServiceHandle
        qualifiedName: System.ServiceProcess.ServiceBase.ServiceHandle
        isExternal: true
    isDefinition: true
    parent: System.ServiceProcess.ServiceBase
    commentId: P:System.ServiceProcess.ServiceBase.ServiceHandle
  System.ServiceProcess.ServiceBase.ServiceName:
    name:
      CSharp:
      - id: System.ServiceProcess.ServiceBase.ServiceName
        name: ServiceName
        nameWithType: ServiceBase.ServiceName
        qualifiedName: System.ServiceProcess.ServiceBase.ServiceName
        isExternal: true
      VB:
      - id: System.ServiceProcess.ServiceBase.ServiceName
        name: ServiceName
        nameWithType: ServiceBase.ServiceName
        qualifiedName: System.ServiceProcess.ServiceBase.ServiceName
        isExternal: true
    isDefinition: true
    parent: System.ServiceProcess.ServiceBase
    commentId: P:System.ServiceProcess.ServiceBase.ServiceName
  System.ComponentModel:
    name:
      CSharp:
      - name: System.ComponentModel
        nameWithType: System.ComponentModel
        qualifiedName: System.ComponentModel
        isExternal: true
      VB:
      - name: System.ComponentModel
        nameWithType: System.ComponentModel
        qualifiedName: System.ComponentModel
    isDefinition: true
    commentId: N:System.ComponentModel
  System.ComponentModel.Component:
    name:
      CSharp:
      - id: System.ComponentModel.Component
        name: Component
        nameWithType: Component
        qualifiedName: System.ComponentModel.Component
        isExternal: true
      VB:
      - id: System.ComponentModel.Component
        name: Component
        nameWithType: Component
        qualifiedName: System.ComponentModel.Component
        isExternal: true
    isDefinition: true
    parent: System.ComponentModel
    commentId: T:System.ComponentModel.Component
  System.ComponentModel.Component.Dispose:
    name:
      CSharp:
      - id: System.ComponentModel.Component.Dispose
        name: Dispose
        nameWithType: Component.Dispose
        qualifiedName: System.ComponentModel.Component.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ComponentModel.Component.Dispose
        name: Dispose
        nameWithType: Component.Dispose
        qualifiedName: System.ComponentModel.Component.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ComponentModel.Component
    commentId: M:System.ComponentModel.Component.Dispose
  System.ComponentModel.Component.GetService(System.Type):
    name:
      CSharp:
      - id: System.ComponentModel.Component.GetService(System.Type)
        name: GetService
        nameWithType: Component.GetService
        qualifiedName: System.ComponentModel.Component.GetService
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ComponentModel.Component.GetService(System.Type)
        name: GetService
        nameWithType: Component.GetService
        qualifiedName: System.ComponentModel.Component.GetService
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ComponentModel.Component
    commentId: M:System.ComponentModel.Component.GetService(System.Type)
  System.ComponentModel.Component.ToString:
    name:
      CSharp:
      - id: System.ComponentModel.Component.ToString
        name: ToString
        nameWithType: Component.ToString
        qualifiedName: System.ComponentModel.Component.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ComponentModel.Component.ToString
        name: ToString
        nameWithType: Component.ToString
        qualifiedName: System.ComponentModel.Component.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ComponentModel.Component
    commentId: M:System.ComponentModel.Component.ToString
  System.ComponentModel.Component.CanRaiseEvents:
    name:
      CSharp:
      - id: System.ComponentModel.Component.CanRaiseEvents
        name: CanRaiseEvents
        nameWithType: Component.CanRaiseEvents
        qualifiedName: System.ComponentModel.Component.CanRaiseEvents
        isExternal: true
      VB:
      - id: System.ComponentModel.Component.CanRaiseEvents
        name: CanRaiseEvents
        nameWithType: Component.CanRaiseEvents
        qualifiedName: System.ComponentModel.Component.CanRaiseEvents
        isExternal: true
    isDefinition: true
    parent: System.ComponentModel.Component
    commentId: P:System.ComponentModel.Component.CanRaiseEvents
  System.ComponentModel.Component.Container:
    name:
      CSharp:
      - id: System.ComponentModel.Component.Container
        name: Container
        nameWithType: Component.Container
        qualifiedName: System.ComponentModel.Component.Container
        isExternal: true
      VB:
      - id: System.ComponentModel.Component.Container
        name: Container
        nameWithType: Component.Container
        qualifiedName: System.ComponentModel.Component.Container
        isExternal: true
    isDefinition: true
    parent: System.ComponentModel.Component
    commentId: P:System.ComponentModel.Component.Container
  System.ComponentModel.Component.DesignMode:
    name:
      CSharp:
      - id: System.ComponentModel.Component.DesignMode
        name: DesignMode
        nameWithType: Component.DesignMode
        qualifiedName: System.ComponentModel.Component.DesignMode
        isExternal: true
      VB:
      - id: System.ComponentModel.Component.DesignMode
        name: DesignMode
        nameWithType: Component.DesignMode
        qualifiedName: System.ComponentModel.Component.DesignMode
        isExternal: true
    isDefinition: true
    parent: System.ComponentModel.Component
    commentId: P:System.ComponentModel.Component.DesignMode
  System.ComponentModel.Component.Events:
    name:
      CSharp:
      - id: System.ComponentModel.Component.Events
        name: Events
        nameWithType: Component.Events
        qualifiedName: System.ComponentModel.Component.Events
        isExternal: true
      VB:
      - id: System.ComponentModel.Component.Events
        name: Events
        nameWithType: Component.Events
        qualifiedName: System.ComponentModel.Component.Events
        isExternal: true
    isDefinition: true
    parent: System.ComponentModel.Component
    commentId: P:System.ComponentModel.Component.Events
  System.ComponentModel.Component.Site:
    name:
      CSharp:
      - id: System.ComponentModel.Component.Site
        name: Site
        nameWithType: Component.Site
        qualifiedName: System.ComponentModel.Component.Site
        isExternal: true
      VB:
      - id: System.ComponentModel.Component.Site
        name: Site
        nameWithType: Component.Site
        qualifiedName: System.ComponentModel.Component.Site
        isExternal: true
    isDefinition: true
    parent: System.ComponentModel.Component
    commentId: P:System.ComponentModel.Component.Site
  System.ComponentModel.Component.Disposed:
    name:
      CSharp:
      - id: System.ComponentModel.Component.Disposed
        name: Disposed
        nameWithType: Component.Disposed
        qualifiedName: System.ComponentModel.Component.Disposed
        isExternal: true
      VB:
      - id: System.ComponentModel.Component.Disposed
        name: Disposed
        nameWithType: Component.Disposed
        qualifiedName: System.ComponentModel.Component.Disposed
        isExternal: true
    isDefinition: true
    parent: System.ComponentModel.Component
    commentId: E:System.ComponentModel.Component.Disposed
  System.MarshalByRefObject:
    name:
      CSharp:
      - id: System.MarshalByRefObject
        name: MarshalByRefObject
        nameWithType: MarshalByRefObject
        qualifiedName: System.MarshalByRefObject
        isExternal: true
      VB:
      - id: System.MarshalByRefObject
        name: MarshalByRefObject
        nameWithType: MarshalByRefObject
        qualifiedName: System.MarshalByRefObject
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.MarshalByRefObject
  System.MarshalByRefObject.GetLifetimeService:
    name:
      CSharp:
      - id: System.MarshalByRefObject.GetLifetimeService
        name: GetLifetimeService
        nameWithType: MarshalByRefObject.GetLifetimeService
        qualifiedName: System.MarshalByRefObject.GetLifetimeService
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.MarshalByRefObject.GetLifetimeService
        name: GetLifetimeService
        nameWithType: MarshalByRefObject.GetLifetimeService
        qualifiedName: System.MarshalByRefObject.GetLifetimeService
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.MarshalByRefObject
    commentId: M:System.MarshalByRefObject.GetLifetimeService
  System.MarshalByRefObject.InitializeLifetimeService:
    name:
      CSharp:
      - id: System.MarshalByRefObject.InitializeLifetimeService
        name: InitializeLifetimeService
        nameWithType: MarshalByRefObject.InitializeLifetimeService
        qualifiedName: System.MarshalByRefObject.InitializeLifetimeService
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.MarshalByRefObject.InitializeLifetimeService
        name: InitializeLifetimeService
        nameWithType: MarshalByRefObject.InitializeLifetimeService
        qualifiedName: System.MarshalByRefObject.InitializeLifetimeService
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.MarshalByRefObject
    commentId: M:System.MarshalByRefObject.InitializeLifetimeService
  System.MarshalByRefObject.MemberwiseClone(System.Boolean):
    name:
      CSharp:
      - id: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
        name: MemberwiseClone
        nameWithType: MarshalByRefObject.MemberwiseClone
        qualifiedName: System.MarshalByRefObject.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
        name: MemberwiseClone
        nameWithType: MarshalByRefObject.MemberwiseClone
        qualifiedName: System.MarshalByRefObject.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.MarshalByRefObject
    commentId: M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  System.ComponentModel.IComponent:
    name:
      CSharp:
      - id: System.ComponentModel.IComponent
        name: IComponent
        nameWithType: IComponent
        qualifiedName: System.ComponentModel.IComponent
        isExternal: true
      VB:
      - id: System.ComponentModel.IComponent
        name: IComponent
        nameWithType: IComponent
        qualifiedName: System.ComponentModel.IComponent
        isExternal: true
    isDefinition: true
    parent: System.ComponentModel
    commentId: T:System.ComponentModel.IComponent
  System.IDisposable:
    name:
      CSharp:
      - id: System.IDisposable
        name: IDisposable
        nameWithType: IDisposable
        qualifiedName: System.IDisposable
        isExternal: true
      VB:
      - id: System.IDisposable
        name: IDisposable
        nameWithType: IDisposable
        qualifiedName: System.IDisposable
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.IDisposable
  IMS_Library.IMS:
    name:
      CSharp:
      - id: IMS_Library.IMS
        name: IMS
        nameWithType: IMS
        qualifiedName: IMS_Library.IMS
      VB:
      - id: IMS_Library.IMS
        name: IMS
        nameWithType: IMS
        qualifiedName: IMS_Library.IMS
    isDefinition: true
    parent: IMS_Library
    commentId: T:IMS_Library.IMS
  IMS_Library.IMS.Instance*:
    name:
      CSharp:
      - id: IMS_Library.IMS.Instance*
        name: Instance
        nameWithType: IMS.Instance
        qualifiedName: IMS_Library.IMS.Instance
      VB:
      - id: IMS_Library.IMS.Instance*
        name: Instance
        nameWithType: IMS.Instance
        qualifiedName: IMS_Library.IMS.Instance
    isDefinition: true
    commentId: Overload:IMS_Library.IMS.Instance
  IMS_Library.IMS.ChangeSettings(IMS_Library.IMSSettings):
    commentId: M:IMS_Library.IMS.ChangeSettings(IMS_Library.IMSSettings)
  IMS_Library.IMSSettings:
    name:
      CSharp:
      - id: IMS_Library.IMSSettings
        name: IMSSettings
        nameWithType: IMSSettings
        qualifiedName: IMS_Library.IMSSettings
      VB:
      - id: IMS_Library.IMSSettings
        name: IMSSettings
        nameWithType: IMSSettings
        qualifiedName: IMS_Library.IMSSettings
    isDefinition: true
    parent: IMS_Library
    commentId: T:IMS_Library.IMSSettings
  IMS_Library.IMS.CurrentSettings*:
    name:
      CSharp:
      - id: IMS_Library.IMS.CurrentSettings*
        name: CurrentSettings
        nameWithType: IMS.CurrentSettings
        qualifiedName: IMS_Library.IMS.CurrentSettings
      VB:
      - id: IMS_Library.IMS.CurrentSettings*
        name: CurrentSettings
        nameWithType: IMS.CurrentSettings
        qualifiedName: IMS_Library.IMS.CurrentSettings
    isDefinition: true
    commentId: Overload:IMS_Library.IMS.CurrentSettings
  IMS_Library.IMS.PortManager*:
    name:
      CSharp:
      - id: IMS_Library.IMS.PortManager*
        name: PortManager
        nameWithType: IMS.PortManager
        qualifiedName: IMS_Library.IMS.PortManager
      VB:
      - id: IMS_Library.IMS.PortManager*
        name: PortManager
        nameWithType: IMS.PortManager
        qualifiedName: IMS_Library.IMS.PortManager
    isDefinition: true
    commentId: Overload:IMS_Library.IMS.PortManager
  IMS_Library.IMS.FirewallManager*:
    name:
      CSharp:
      - id: IMS_Library.IMS.FirewallManager*
        name: FirewallManager
        nameWithType: IMS.FirewallManager
        qualifiedName: IMS_Library.IMS.FirewallManager
      VB:
      - id: IMS_Library.IMS.FirewallManager*
        name: FirewallManager
        nameWithType: IMS.FirewallManager
        qualifiedName: IMS_Library.IMS.FirewallManager
    isDefinition: true
    commentId: Overload:IMS_Library.IMS.FirewallManager
  IMS_Library.WorldController:
    name:
      CSharp:
      - id: IMS_Library.WorldController
        name: WorldController
        nameWithType: WorldController
        qualifiedName: IMS_Library.WorldController
      VB:
      - id: IMS_Library.WorldController
        name: WorldController
        nameWithType: WorldController
        qualifiedName: IMS_Library.WorldController
    isDefinition: true
    parent: IMS_Library
    commentId: T:IMS_Library.WorldController
  IMS_Library.IMS.WorldManager*:
    name:
      CSharp:
      - id: IMS_Library.IMS.WorldManager*
        name: WorldManager
        nameWithType: IMS.WorldManager
        qualifiedName: IMS_Library.IMS.WorldManager
      VB:
      - id: IMS_Library.IMS.WorldManager*
        name: WorldManager
        nameWithType: IMS.WorldManager
        qualifiedName: IMS_Library.IMS.WorldManager
    isDefinition: true
    commentId: Overload:IMS_Library.IMS.WorldManager
  IMS_Library.WebInterface:
    name:
      CSharp:
      - id: IMS_Library.WebInterface
        name: WebInterface
        nameWithType: WebInterface
        qualifiedName: IMS_Library.WebInterface
      VB:
      - id: IMS_Library.WebInterface
        name: WebInterface
        nameWithType: WebInterface
        qualifiedName: IMS_Library.WebInterface
    isDefinition: true
    parent: IMS_Library
    commentId: T:IMS_Library.WebInterface
  IMS_Library.IMS.WebServer*:
    name:
      CSharp:
      - id: IMS_Library.IMS.WebServer*
        name: WebServer
        nameWithType: IMS.WebServer
        qualifiedName: IMS_Library.IMS.WebServer
      VB:
      - id: IMS_Library.IMS.WebServer*
        name: WebServer
        nameWithType: IMS.WebServer
        qualifiedName: IMS_Library.IMS.WebServer
    isDefinition: true
    commentId: Overload:IMS_Library.IMS.WebServer
  IMS_Library.ServerController:
    name:
      CSharp:
      - id: IMS_Library.ServerController
        name: ServerController
        nameWithType: ServerController
        qualifiedName: IMS_Library.ServerController
      VB:
      - id: IMS_Library.ServerController
        name: ServerController
        nameWithType: ServerController
        qualifiedName: IMS_Library.ServerController
    isDefinition: true
    parent: IMS_Library
    commentId: T:IMS_Library.ServerController
  IMS_Library.IMS.ServerManager*:
    name:
      CSharp:
      - id: IMS_Library.IMS.ServerManager*
        name: ServerManager
        nameWithType: IMS.ServerManager
        qualifiedName: IMS_Library.IMS.ServerManager
      VB:
      - id: IMS_Library.IMS.ServerManager*
        name: ServerManager
        nameWithType: IMS.ServerManager
        qualifiedName: IMS_Library.IMS.ServerManager
    isDefinition: true
    commentId: Overload:IMS_Library.IMS.ServerManager
  IMS_Library.PluginController:
    name:
      CSharp:
      - id: IMS_Library.PluginController
        name: PluginController
        nameWithType: PluginController
        qualifiedName: IMS_Library.PluginController
      VB:
      - id: IMS_Library.PluginController
        name: PluginController
        nameWithType: PluginController
        qualifiedName: IMS_Library.PluginController
    isDefinition: true
    parent: IMS_Library
    commentId: T:IMS_Library.PluginController
  IMS_Library.IMS.PluginManager*:
    name:
      CSharp:
      - id: IMS_Library.IMS.PluginManager*
        name: PluginManager
        nameWithType: IMS.PluginManager
        qualifiedName: IMS_Library.IMS.PluginManager
      VB:
      - id: IMS_Library.IMS.PluginManager*
        name: PluginManager
        nameWithType: IMS.PluginManager
        qualifiedName: IMS_Library.IMS.PluginManager
    isDefinition: true
    commentId: Overload:IMS_Library.IMS.PluginManager
  IMS_Library.MinecraftVersionProvider:
    name:
      CSharp:
      - id: IMS_Library.MinecraftVersionProvider
        name: MinecraftVersionProvider
        nameWithType: MinecraftVersionProvider
        qualifiedName: IMS_Library.MinecraftVersionProvider
      VB:
      - id: IMS_Library.MinecraftVersionProvider
        name: MinecraftVersionProvider
        nameWithType: MinecraftVersionProvider
        qualifiedName: IMS_Library.MinecraftVersionProvider
    isDefinition: true
    parent: IMS_Library
    commentId: T:IMS_Library.MinecraftVersionProvider
  IMS_Library.IMS.VersionManager*:
    name:
      CSharp:
      - id: IMS_Library.IMS.VersionManager*
        name: VersionManager
        nameWithType: IMS.VersionManager
        qualifiedName: IMS_Library.IMS.VersionManager
      VB:
      - id: IMS_Library.IMS.VersionManager*
        name: VersionManager
        nameWithType: IMS.VersionManager
        qualifiedName: IMS_Library.IMS.VersionManager
    isDefinition: true
    commentId: Overload:IMS_Library.IMS.VersionManager
  IMS_Library.IMS.#ctor*:
    name:
      CSharp:
      - id: IMS_Library.IMS.#ctor*
        name: IMS
        nameWithType: IMS.IMS
        qualifiedName: IMS_Library.IMS.IMS
      VB:
      - id: IMS_Library.IMS.#ctor*
        name: IMS
        nameWithType: IMS.IMS
        qualifiedName: IMS_Library.IMS.IMS
    isDefinition: true
    commentId: Overload:IMS_Library.IMS.#ctor
  IMS_Library.IMS.SimulateService*:
    name:
      CSharp:
      - id: IMS_Library.IMS.SimulateService*
        name: SimulateService
        nameWithType: IMS.SimulateService
        qualifiedName: IMS_Library.IMS.SimulateService
      VB:
      - id: IMS_Library.IMS.SimulateService*
        name: SimulateService
        nameWithType: IMS.SimulateService
        qualifiedName: IMS_Library.IMS.SimulateService
    isDefinition: true
    commentId: Overload:IMS_Library.IMS.SimulateService
  IMS_Library.IMS.Restart*:
    name:
      CSharp:
      - id: IMS_Library.IMS.Restart*
        name: Restart
        nameWithType: IMS.Restart
        qualifiedName: IMS_Library.IMS.Restart
      VB:
      - id: IMS_Library.IMS.Restart*
        name: Restart
        nameWithType: IMS.Restart
        qualifiedName: IMS_Library.IMS.Restart
    isDefinition: true
    commentId: Overload:IMS_Library.IMS.Restart
  IMS_Library.IMS.Stop*:
    name:
      CSharp:
      - id: IMS_Library.IMS.Stop*
        name: Stop
        nameWithType: IMS.Stop
        qualifiedName: IMS_Library.IMS.Stop
      VB:
      - id: IMS_Library.IMS.Stop*
        name: Stop
        nameWithType: IMS.Stop
        qualifiedName: IMS_Library.IMS.Stop
    isDefinition: true
    commentId: Overload:IMS_Library.IMS.Stop
  System.String[]:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  System.ServiceProcess.ServiceBase.OnStart(System.String[]):
    name:
      CSharp:
      - id: System.ServiceProcess.ServiceBase.OnStart(System.String[])
        name: OnStart
        nameWithType: ServiceBase.OnStart
        qualifiedName: System.ServiceProcess.ServiceBase.OnStart
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ServiceProcess.ServiceBase.OnStart(System.String[])
        name: OnStart
        nameWithType: ServiceBase.OnStart
        qualifiedName: System.ServiceProcess.ServiceBase.OnStart
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ServiceProcess.ServiceBase
    commentId: M:System.ServiceProcess.ServiceBase.OnStart(System.String[])
  IMS_Library.IMS.OnStart*:
    name:
      CSharp:
      - id: IMS_Library.IMS.OnStart*
        name: OnStart
        nameWithType: IMS.OnStart
        qualifiedName: IMS_Library.IMS.OnStart
      VB:
      - id: IMS_Library.IMS.OnStart*
        name: OnStart
        nameWithType: IMS.OnStart
        qualifiedName: IMS_Library.IMS.OnStart
    isDefinition: true
    commentId: Overload:IMS_Library.IMS.OnStart
  System.ServiceProcess.ServiceBase.OnStop:
    name:
      CSharp:
      - id: System.ServiceProcess.ServiceBase.OnStop
        name: OnStop
        nameWithType: ServiceBase.OnStop
        qualifiedName: System.ServiceProcess.ServiceBase.OnStop
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ServiceProcess.ServiceBase.OnStop
        name: OnStop
        nameWithType: ServiceBase.OnStop
        qualifiedName: System.ServiceProcess.ServiceBase.OnStop
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ServiceProcess.ServiceBase
    commentId: M:System.ServiceProcess.ServiceBase.OnStop
  IMS_Library.IMS.OnStop*:
    name:
      CSharp:
      - id: IMS_Library.IMS.OnStop*
        name: OnStop
        nameWithType: IMS.OnStop
        qualifiedName: IMS_Library.IMS.OnStop
      VB:
      - id: IMS_Library.IMS.OnStop*
        name: OnStop
        nameWithType: IMS.OnStop
        qualifiedName: IMS_Library.IMS.OnStop
    isDefinition: true
    commentId: Overload:IMS_Library.IMS.OnStop
  IMS_Library.IMS.CurrentSettings:
    commentId: P:IMS_Library.IMS.CurrentSettings
  IMS_Library.IMS.ChangeSettings*:
    name:
      CSharp:
      - id: IMS_Library.IMS.ChangeSettings*
        name: ChangeSettings
        nameWithType: IMS.ChangeSettings
        qualifiedName: IMS_Library.IMS.ChangeSettings
      VB:
      - id: IMS_Library.IMS.ChangeSettings*
        name: ChangeSettings
        nameWithType: IMS.ChangeSettings
        qualifiedName: IMS_Library.IMS.ChangeSettings
    isDefinition: true
    commentId: Overload:IMS_Library.IMS.ChangeSettings
  RoyalXML:
    commentId: N:RoyalXML
  System.ICloneable:
    name:
      CSharp:
      - id: System.ICloneable
        name: ICloneable
        nameWithType: ICloneable
        qualifiedName: System.ICloneable
        isExternal: true
      VB:
      - id: System.ICloneable
        name: ICloneable
        nameWithType: ICloneable
        qualifiedName: System.ICloneable
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.ICloneable
  IMS_Library.IMSConfigurationUtility.FromConfiguration``1(``0):
    name:
      CSharp:
      - id: IMS_Library.IMSConfigurationUtility.FromConfiguration``1(``0)
        name: FromConfiguration<T>
        nameWithType: IMSConfigurationUtility.FromConfiguration<T>
        qualifiedName: IMS_Library.IMSConfigurationUtility.FromConfiguration<T>
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.IMSConfigurationUtility.FromConfiguration``1(``0)
        name: FromConfiguration(Of T)
        nameWithType: IMSConfigurationUtility.FromConfiguration(Of T)
        qualifiedName: IMS_Library.IMSConfigurationUtility.FromConfiguration(Of T)
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:IMS_Library.IMSConfigurationUtility.FromConfiguration``1(``0)
  IMS_Library.IMSConfigurationUtility:
    name:
      CSharp:
      - id: IMS_Library.IMSConfigurationUtility
        name: IMSConfigurationUtility
        nameWithType: IMSConfigurationUtility
        qualifiedName: IMS_Library.IMSConfigurationUtility
      VB:
      - id: IMS_Library.IMSConfigurationUtility
        name: IMSConfigurationUtility
        nameWithType: IMSConfigurationUtility
        qualifiedName: IMS_Library.IMSConfigurationUtility
    isDefinition: true
    parent: IMS_Library
    commentId: T:IMS_Library.IMSConfigurationUtility
  IMS_Library.IMSConfiguration.IMS_Library.IMSConfigurationUtility.FromConfiguration``1:
    name:
      CSharp:
      - id: IMS_Library.IMSConfigurationUtility.FromConfiguration``1
        name: FromConfiguration<IMSConfiguration>
        nameWithType: IMSConfigurationUtility.FromConfiguration<IMSConfiguration>
        qualifiedName: IMS_Library.IMSConfigurationUtility.FromConfiguration<IMS_Library.IMSConfiguration>
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.IMSConfigurationUtility.FromConfiguration``1
        name: FromConfiguration(Of IMSConfiguration)
        nameWithType: IMSConfigurationUtility.FromConfiguration(Of IMSConfiguration)
        qualifiedName: IMS_Library.IMSConfigurationUtility.FromConfiguration(Of IMS_Library.IMSConfiguration)
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: IMS_Library.IMSConfigurationUtility.FromConfiguration``1(``0)
    parent: IMS_Library.IMSConfigurationUtility
    commentId: M:IMS_Library.IMSConfigurationUtility.FromConfiguration``1(``0)
  IMS_Library.IMSConfigurationUtility.SaveConfiguration``1(``0):
    name:
      CSharp:
      - id: IMS_Library.IMSConfigurationUtility.SaveConfiguration``1(``0)
        name: SaveConfiguration<T>
        nameWithType: IMSConfigurationUtility.SaveConfiguration<T>
        qualifiedName: IMS_Library.IMSConfigurationUtility.SaveConfiguration<T>
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.IMSConfigurationUtility.SaveConfiguration``1(``0)
        name: SaveConfiguration(Of T)
        nameWithType: IMSConfigurationUtility.SaveConfiguration(Of T)
        qualifiedName: IMS_Library.IMSConfigurationUtility.SaveConfiguration(Of T)
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:IMS_Library.IMSConfigurationUtility.SaveConfiguration``1(``0)
  IMS_Library.IMSConfiguration.IMS_Library.IMSConfigurationUtility.SaveConfiguration``1:
    name:
      CSharp:
      - id: IMS_Library.IMSConfigurationUtility.SaveConfiguration``1
        name: SaveConfiguration<IMSConfiguration>
        nameWithType: IMSConfigurationUtility.SaveConfiguration<IMSConfiguration>
        qualifiedName: IMS_Library.IMSConfigurationUtility.SaveConfiguration<IMS_Library.IMSConfiguration>
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.IMSConfigurationUtility.SaveConfiguration``1
        name: SaveConfiguration(Of IMSConfiguration)
        nameWithType: IMSConfigurationUtility.SaveConfiguration(Of IMSConfiguration)
        qualifiedName: IMS_Library.IMSConfigurationUtility.SaveConfiguration(Of IMS_Library.IMSConfiguration)
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: IMS_Library.IMSConfigurationUtility.SaveConfiguration``1(``0)
    parent: IMS_Library.IMSConfigurationUtility
    commentId: M:IMS_Library.IMSConfigurationUtility.SaveConfiguration``1(``0)
  IMS_Library.IMSConfiguration:
    name:
      CSharp:
      - id: IMS_Library.IMSConfiguration
        name: IMSConfiguration
        nameWithType: IMSConfiguration
        qualifiedName: IMS_Library.IMSConfiguration
      VB:
      - id: IMS_Library.IMSConfiguration
        name: IMSConfiguration
        nameWithType: IMSConfiguration
        qualifiedName: IMS_Library.IMSConfiguration
    isDefinition: true
    parent: IMS_Library
    commentId: T:IMS_Library.IMSConfiguration
  IMS_Library.IMSConfiguration.#ctor*:
    name:
      CSharp:
      - id: IMS_Library.IMSConfiguration.#ctor*
        name: IMSConfiguration
        nameWithType: IMSConfiguration.IMSConfiguration
        qualifiedName: IMS_Library.IMSConfiguration.IMSConfiguration
      VB:
      - id: IMS_Library.IMSConfiguration.#ctor*
        name: IMSConfiguration
        nameWithType: IMSConfiguration.IMSConfiguration
        qualifiedName: IMS_Library.IMSConfiguration.IMSConfiguration
    isDefinition: true
    commentId: Overload:IMS_Library.IMSConfiguration.#ctor
  IMS_Library.IMSConfiguration.Clone*:
    name:
      CSharp:
      - id: IMS_Library.IMSConfiguration.Clone*
        name: Clone
        nameWithType: IMSConfiguration.Clone
        qualifiedName: IMS_Library.IMSConfiguration.Clone
      VB:
      - id: IMS_Library.IMSConfiguration.Clone*
        name: Clone
        nameWithType: IMSConfiguration.Clone
        qualifiedName: IMS_Library.IMSConfiguration.Clone
    isDefinition: true
    commentId: Overload:IMS_Library.IMSConfiguration.Clone
  System.ICloneable.Clone:
    name:
      CSharp:
      - id: System.ICloneable.Clone
        name: Clone
        nameWithType: ICloneable.Clone
        qualifiedName: System.ICloneable.Clone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ICloneable.Clone
        name: Clone
        nameWithType: ICloneable.Clone
        qualifiedName: System.ICloneable.Clone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ICloneable
    commentId: M:System.ICloneable.Clone
  IMS_Library.IMSConfiguration.GetDefaultFilePath*:
    name:
      CSharp:
      - id: IMS_Library.IMSConfiguration.GetDefaultFilePath*
        name: GetDefaultFilePath
        nameWithType: IMSConfiguration.GetDefaultFilePath
        qualifiedName: IMS_Library.IMSConfiguration.GetDefaultFilePath
      VB:
      - id: IMS_Library.IMSConfiguration.GetDefaultFilePath*
        name: GetDefaultFilePath
        nameWithType: IMSConfiguration.GetDefaultFilePath
        qualifiedName: IMS_Library.IMSConfiguration.GetDefaultFilePath
    isDefinition: true
    commentId: Overload:IMS_Library.IMSConfiguration.GetDefaultFilePath
  System.SerializableAttribute:
    name:
      CSharp:
      - id: System.SerializableAttribute
        name: SerializableAttribute
        nameWithType: SerializableAttribute
        qualifiedName: System.SerializableAttribute
        isExternal: true
      VB:
      - id: System.SerializableAttribute
        name: SerializableAttribute
        nameWithType: SerializableAttribute
        qualifiedName: System.SerializableAttribute
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.SerializableAttribute
  System.SerializableAttribute.#ctor:
    name:
      CSharp:
      - id: System.SerializableAttribute.#ctor
        name: SerializableAttribute
        nameWithType: SerializableAttribute.SerializableAttribute
        qualifiedName: System.SerializableAttribute.SerializableAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.SerializableAttribute.#ctor
        name: SerializableAttribute
        nameWithType: SerializableAttribute.SerializableAttribute
        qualifiedName: System.SerializableAttribute.SerializableAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.SerializableAttribute
    commentId: M:System.SerializableAttribute.#ctor
  T:
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: true
  '{T}':
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: false
    definition: T
    commentId: '!:T'
  IMS_Library.IMSConfigurationUtility.FromConfiguration*:
    name:
      CSharp:
      - id: IMS_Library.IMSConfigurationUtility.FromConfiguration*
        name: FromConfiguration
        nameWithType: IMSConfigurationUtility.FromConfiguration
        qualifiedName: IMS_Library.IMSConfigurationUtility.FromConfiguration
      VB:
      - id: IMS_Library.IMSConfigurationUtility.FromConfiguration*
        name: FromConfiguration
        nameWithType: IMSConfigurationUtility.FromConfiguration
        qualifiedName: IMS_Library.IMSConfigurationUtility.FromConfiguration
    isDefinition: true
    commentId: Overload:IMS_Library.IMSConfigurationUtility.FromConfiguration
  IMS_Library.IMSConfigurationUtility.SaveConfiguration*:
    name:
      CSharp:
      - id: IMS_Library.IMSConfigurationUtility.SaveConfiguration*
        name: SaveConfiguration
        nameWithType: IMSConfigurationUtility.SaveConfiguration
        qualifiedName: IMS_Library.IMSConfigurationUtility.SaveConfiguration
      VB:
      - id: IMS_Library.IMSConfigurationUtility.SaveConfiguration*
        name: SaveConfiguration
        nameWithType: IMSConfigurationUtility.SaveConfiguration
        qualifiedName: IMS_Library.IMSConfigurationUtility.SaveConfiguration
    isDefinition: true
    commentId: Overload:IMS_Library.IMSConfigurationUtility.SaveConfiguration
  IMS_Library.IMSConfiguration.Clone:
    name:
      CSharp:
      - id: IMS_Library.IMSConfiguration.Clone
        name: Clone
        nameWithType: IMSConfiguration.Clone
        qualifiedName: IMS_Library.IMSConfiguration.Clone
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.IMSConfiguration.Clone
        name: Clone
        nameWithType: IMSConfiguration.Clone
        qualifiedName: IMS_Library.IMSConfiguration.Clone
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IMS_Library.IMSConfiguration
    commentId: M:IMS_Library.IMSConfiguration.Clone
  IMS_Library.IMSSettings.IMS_Library.IMSConfigurationUtility.FromConfiguration``1:
    name:
      CSharp:
      - id: IMS_Library.IMSConfigurationUtility.FromConfiguration``1
        name: FromConfiguration<IMSSettings>
        nameWithType: IMSConfigurationUtility.FromConfiguration<IMSSettings>
        qualifiedName: IMS_Library.IMSConfigurationUtility.FromConfiguration<IMS_Library.IMSSettings>
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.IMSConfigurationUtility.FromConfiguration``1
        name: FromConfiguration(Of IMSSettings)
        nameWithType: IMSConfigurationUtility.FromConfiguration(Of IMSSettings)
        qualifiedName: IMS_Library.IMSConfigurationUtility.FromConfiguration(Of IMS_Library.IMSSettings)
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: IMS_Library.IMSConfigurationUtility.FromConfiguration``1(``0)
    parent: IMS_Library.IMSConfigurationUtility
    commentId: M:IMS_Library.IMSConfigurationUtility.FromConfiguration``1(``0)
  IMS_Library.IMSSettings.IMS_Library.IMSConfigurationUtility.SaveConfiguration``1:
    name:
      CSharp:
      - id: IMS_Library.IMSConfigurationUtility.SaveConfiguration``1
        name: SaveConfiguration<IMSSettings>
        nameWithType: IMSConfigurationUtility.SaveConfiguration<IMSSettings>
        qualifiedName: IMS_Library.IMSConfigurationUtility.SaveConfiguration<IMS_Library.IMSSettings>
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.IMSConfigurationUtility.SaveConfiguration``1
        name: SaveConfiguration(Of IMSSettings)
        nameWithType: IMSConfigurationUtility.SaveConfiguration(Of IMSSettings)
        qualifiedName: IMS_Library.IMSConfigurationUtility.SaveConfiguration(Of IMS_Library.IMSSettings)
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: IMS_Library.IMSConfigurationUtility.SaveConfiguration``1(``0)
    parent: IMS_Library.IMSConfigurationUtility
    commentId: M:IMS_Library.IMSConfigurationUtility.SaveConfiguration``1(``0)
  IMS_Library.WebPort:
    name:
      CSharp:
      - id: IMS_Library.WebPort
        name: WebPort
        nameWithType: WebPort
        qualifiedName: IMS_Library.WebPort
      VB:
      - id: IMS_Library.WebPort
        name: WebPort
        nameWithType: WebPort
        qualifiedName: IMS_Library.WebPort
    isDefinition: true
    parent: IMS_Library
    commentId: T:IMS_Library.WebPort
  System.Collections.Generic.List`1:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.List`1
  System.Collections.Generic.List{System.String}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.String}
  IMS_Library.IMSSettings.ManagementPort:
    commentId: F:IMS_Library.IMSSettings.ManagementPort
  IMS_Library.IMSSettings.#ctor*:
    name:
      CSharp:
      - id: IMS_Library.IMSSettings.#ctor*
        name: IMSSettings
        nameWithType: IMSSettings.IMSSettings
        qualifiedName: IMS_Library.IMSSettings.IMSSettings
      VB:
      - id: IMS_Library.IMSSettings.#ctor*
        name: IMSSettings
        nameWithType: IMSSettings.IMSSettings
        qualifiedName: IMS_Library.IMSSettings.IMSSettings
    isDefinition: true
    commentId: Overload:IMS_Library.IMSSettings.#ctor
  IMS_Library.IMSConfiguration.GetDefaultFilePath:
    name:
      CSharp:
      - id: IMS_Library.IMSConfiguration.GetDefaultFilePath
        name: GetDefaultFilePath
        nameWithType: IMSConfiguration.GetDefaultFilePath
        qualifiedName: IMS_Library.IMSConfiguration.GetDefaultFilePath
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.IMSConfiguration.GetDefaultFilePath
        name: GetDefaultFilePath
        nameWithType: IMSConfiguration.GetDefaultFilePath
        qualifiedName: IMS_Library.IMSConfiguration.GetDefaultFilePath
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IMS_Library.IMSConfiguration
    commentId: M:IMS_Library.IMSConfiguration.GetDefaultFilePath
  IMS_Library.IMSSettings.GetDefaultFilePath*:
    name:
      CSharp:
      - id: IMS_Library.IMSSettings.GetDefaultFilePath*
        name: GetDefaultFilePath
        nameWithType: IMSSettings.GetDefaultFilePath
        qualifiedName: IMS_Library.IMSSettings.GetDefaultFilePath
      VB:
      - id: IMS_Library.IMSSettings.GetDefaultFilePath*
        name: GetDefaultFilePath
        nameWithType: IMSSettings.GetDefaultFilePath
        qualifiedName: IMS_Library.IMSSettings.GetDefaultFilePath
    isDefinition: true
    commentId: Overload:IMS_Library.IMSSettings.GetDefaultFilePath
  IMS_Library.JunctionPoint.CreateHardLink*:
    name:
      CSharp:
      - id: IMS_Library.JunctionPoint.CreateHardLink*
        name: CreateHardLink
        nameWithType: JunctionPoint.CreateHardLink
        qualifiedName: IMS_Library.JunctionPoint.CreateHardLink
      VB:
      - id: IMS_Library.JunctionPoint.CreateHardLink*
        name: CreateHardLink
        nameWithType: JunctionPoint.CreateHardLink
        qualifiedName: IMS_Library.JunctionPoint.CreateHardLink
    isDefinition: true
    commentId: Overload:IMS_Library.JunctionPoint.CreateHardLink
  System.IO.IOException:
    commentId: T:System.IO.IOException
  IMS_Library.JunctionPoint.Create*:
    name:
      CSharp:
      - id: IMS_Library.JunctionPoint.Create*
        name: Create
        nameWithType: JunctionPoint.Create
        qualifiedName: IMS_Library.JunctionPoint.Create
      VB:
      - id: IMS_Library.JunctionPoint.Create*
        name: Create
        nameWithType: JunctionPoint.Create
        qualifiedName: IMS_Library.JunctionPoint.Create
    isDefinition: true
    commentId: Overload:IMS_Library.JunctionPoint.Create
  IMS_Library.JunctionPoint.Delete*:
    name:
      CSharp:
      - id: IMS_Library.JunctionPoint.Delete*
        name: Delete
        nameWithType: JunctionPoint.Delete
        qualifiedName: IMS_Library.JunctionPoint.Delete
      VB:
      - id: IMS_Library.JunctionPoint.Delete*
        name: Delete
        nameWithType: JunctionPoint.Delete
        qualifiedName: IMS_Library.JunctionPoint.Delete
    isDefinition: true
    commentId: Overload:IMS_Library.JunctionPoint.Delete
  IMS_Library.JunctionPoint.Exists*:
    name:
      CSharp:
      - id: IMS_Library.JunctionPoint.Exists*
        name: Exists
        nameWithType: JunctionPoint.Exists
        qualifiedName: IMS_Library.JunctionPoint.Exists
      VB:
      - id: IMS_Library.JunctionPoint.Exists*
        name: Exists
        nameWithType: JunctionPoint.Exists
        qualifiedName: IMS_Library.JunctionPoint.Exists
    isDefinition: true
    commentId: Overload:IMS_Library.JunctionPoint.Exists
  IMS_Library.JunctionPoint.GetTarget*:
    name:
      CSharp:
      - id: IMS_Library.JunctionPoint.GetTarget*
        name: GetTarget
        nameWithType: JunctionPoint.GetTarget
        qualifiedName: IMS_Library.JunctionPoint.GetTarget
      VB:
      - id: IMS_Library.JunctionPoint.GetTarget*
        name: GetTarget
        nameWithType: JunctionPoint.GetTarget
        qualifiedName: IMS_Library.JunctionPoint.GetTarget
    isDefinition: true
    commentId: Overload:IMS_Library.JunctionPoint.GetTarget
  IMS_Library.JunctionPoint:
    name:
      CSharp:
      - id: IMS_Library.JunctionPoint
        name: JunctionPoint
        nameWithType: JunctionPoint
        qualifiedName: IMS_Library.JunctionPoint
      VB:
      - id: IMS_Library.JunctionPoint
        name: JunctionPoint
        nameWithType: JunctionPoint
        qualifiedName: IMS_Library.JunctionPoint
    isDefinition: true
    commentId: T:IMS_Library.JunctionPoint
  IMS_Library.Logger.WriteInfo*:
    name:
      CSharp:
      - id: IMS_Library.Logger.WriteInfo*
        name: WriteInfo
        nameWithType: Logger.WriteInfo
        qualifiedName: IMS_Library.Logger.WriteInfo
      VB:
      - id: IMS_Library.Logger.WriteInfo*
        name: WriteInfo
        nameWithType: Logger.WriteInfo
        qualifiedName: IMS_Library.Logger.WriteInfo
    isDefinition: true
    commentId: Overload:IMS_Library.Logger.WriteInfo
  IMS_Library.Logger.WriteWarning*:
    name:
      CSharp:
      - id: IMS_Library.Logger.WriteWarning*
        name: WriteWarning
        nameWithType: Logger.WriteWarning
        qualifiedName: IMS_Library.Logger.WriteWarning
      VB:
      - id: IMS_Library.Logger.WriteWarning*
        name: WriteWarning
        nameWithType: Logger.WriteWarning
        qualifiedName: IMS_Library.Logger.WriteWarning
    isDefinition: true
    commentId: Overload:IMS_Library.Logger.WriteWarning
  IMS_Library.Logger.WriteError*:
    name:
      CSharp:
      - id: IMS_Library.Logger.WriteError*
        name: WriteError
        nameWithType: Logger.WriteError
        qualifiedName: IMS_Library.Logger.WriteError
      VB:
      - id: IMS_Library.Logger.WriteError*
        name: WriteError
        nameWithType: Logger.WriteError
        qualifiedName: IMS_Library.Logger.WriteError
    isDefinition: true
    commentId: Overload:IMS_Library.Logger.WriteError
  IMS_Library.Logger.FinishLog*:
    name:
      CSharp:
      - id: IMS_Library.Logger.FinishLog*
        name: FinishLog
        nameWithType: Logger.FinishLog
        qualifiedName: IMS_Library.Logger.FinishLog
      VB:
      - id: IMS_Library.Logger.FinishLog*
        name: FinishLog
        nameWithType: Logger.FinishLog
        qualifiedName: IMS_Library.Logger.FinishLog
    isDefinition: true
    commentId: Overload:IMS_Library.Logger.FinishLog
  IMS_Library.Logger:
    name:
      CSharp:
      - id: IMS_Library.Logger
        name: Logger
        nameWithType: Logger
        qualifiedName: IMS_Library.Logger
      VB:
      - id: IMS_Library.Logger
        name: Logger
        nameWithType: Logger
        qualifiedName: IMS_Library.Logger
    isDefinition: true
    commentId: T:IMS_Library.Logger
  IMS_Library.MinecraftEdition:
    name:
      CSharp:
      - id: IMS_Library.MinecraftEdition
        name: MinecraftEdition
        nameWithType: MinecraftEdition
        qualifiedName: IMS_Library.MinecraftEdition
      VB:
      - id: IMS_Library.MinecraftEdition
        name: MinecraftEdition
        nameWithType: MinecraftEdition
        qualifiedName: IMS_Library.MinecraftEdition
    isDefinition: true
    parent: IMS_Library
    commentId: T:IMS_Library.MinecraftEdition
  IMS_Library.IMSPluginBase.Service*:
    name:
      CSharp:
      - id: IMS_Library.IMSPluginBase.Service*
        name: Service
        nameWithType: IMSPluginBase.Service
        qualifiedName: IMS_Library.IMSPluginBase.Service
      VB:
      - id: IMS_Library.IMSPluginBase.Service*
        name: Service
        nameWithType: IMSPluginBase.Service
        qualifiedName: IMS_Library.IMSPluginBase.Service
    isDefinition: true
    commentId: Overload:IMS_Library.IMSPluginBase.Service
  IMS_Library.IMSPluginBase.Name*:
    name:
      CSharp:
      - id: IMS_Library.IMSPluginBase.Name*
        name: Name
        nameWithType: IMSPluginBase.Name
        qualifiedName: IMS_Library.IMSPluginBase.Name
      VB:
      - id: IMS_Library.IMSPluginBase.Name*
        name: Name
        nameWithType: IMSPluginBase.Name
        qualifiedName: IMS_Library.IMSPluginBase.Name
    isDefinition: true
    commentId: Overload:IMS_Library.IMSPluginBase.Name
  System.Version:
    name:
      CSharp:
      - id: System.Version
        name: Version
        nameWithType: Version
        qualifiedName: System.Version
        isExternal: true
      VB:
      - id: System.Version
        name: Version
        nameWithType: Version
        qualifiedName: System.Version
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Version
  IMS_Library.IMSPluginBase.CurrentVersion*:
    name:
      CSharp:
      - id: IMS_Library.IMSPluginBase.CurrentVersion*
        name: CurrentVersion
        nameWithType: IMSPluginBase.CurrentVersion
        qualifiedName: IMS_Library.IMSPluginBase.CurrentVersion
      VB:
      - id: IMS_Library.IMSPluginBase.CurrentVersion*
        name: CurrentVersion
        nameWithType: IMSPluginBase.CurrentVersion
        qualifiedName: IMS_Library.IMSPluginBase.CurrentVersion
    isDefinition: true
    commentId: Overload:IMS_Library.IMSPluginBase.CurrentVersion
  IMS_Library.IMSPluginBase.Description*:
    name:
      CSharp:
      - id: IMS_Library.IMSPluginBase.Description*
        name: Description
        nameWithType: IMSPluginBase.Description
        qualifiedName: IMS_Library.IMSPluginBase.Description
      VB:
      - id: IMS_Library.IMSPluginBase.Description*
        name: Description
        nameWithType: IMSPluginBase.Description
        qualifiedName: IMS_Library.IMSPluginBase.Description
    isDefinition: true
    commentId: Overload:IMS_Library.IMSPluginBase.Description
  IMS_Library.IMSPluginBase.Start*:
    name:
      CSharp:
      - id: IMS_Library.IMSPluginBase.Start*
        name: Start
        nameWithType: IMSPluginBase.Start
        qualifiedName: IMS_Library.IMSPluginBase.Start
      VB:
      - id: IMS_Library.IMSPluginBase.Start*
        name: Start
        nameWithType: IMSPluginBase.Start
        qualifiedName: IMS_Library.IMSPluginBase.Start
    isDefinition: true
    commentId: Overload:IMS_Library.IMSPluginBase.Start
  IMS_Library.IMSPluginBase.Stop*:
    name:
      CSharp:
      - id: IMS_Library.IMSPluginBase.Stop*
        name: Stop
        nameWithType: IMSPluginBase.Stop
        qualifiedName: IMS_Library.IMSPluginBase.Stop
      VB:
      - id: IMS_Library.IMSPluginBase.Stop*
        name: Stop
        nameWithType: IMSPluginBase.Stop
        qualifiedName: IMS_Library.IMSPluginBase.Stop
    isDefinition: true
    commentId: Overload:IMS_Library.IMSPluginBase.Stop
  IMS_Library.IMSPluginBase:
    name:
      CSharp:
      - id: IMS_Library.IMSPluginBase
        name: IMSPluginBase
        nameWithType: IMSPluginBase
        qualifiedName: IMS_Library.IMSPluginBase
      VB:
      - id: IMS_Library.IMSPluginBase
        name: IMSPluginBase
        nameWithType: IMSPluginBase
        qualifiedName: IMS_Library.IMSPluginBase
    isDefinition: true
    parent: IMS_Library
    commentId: T:IMS_Library.IMSPluginBase
  System.Collections.Generic.IList`1:
    name:
      CSharp:
      - id: System.Collections.Generic.IList`1
        name: IList
        nameWithType: IList
        qualifiedName: System.Collections.Generic.IList
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IList`1
        name: IList
        nameWithType: IList
        qualifiedName: System.Collections.Generic.IList
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.IList`1
  System.Collections.Generic.IList{IMS_Library.IMSPluginBase}:
    name:
      CSharp:
      - id: System.Collections.Generic.IList`1
        name: IList
        nameWithType: IList
        qualifiedName: System.Collections.Generic.IList
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: IMS_Library.IMSPluginBase
        name: IMSPluginBase
        nameWithType: IMSPluginBase
        qualifiedName: IMS_Library.IMSPluginBase
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IList`1
        name: IList
        nameWithType: IList
        qualifiedName: System.Collections.Generic.IList
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: IMS_Library.IMSPluginBase
        name: IMSPluginBase
        nameWithType: IMSPluginBase
        qualifiedName: IMS_Library.IMSPluginBase
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IList`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IList{IMS_Library.IMSPluginBase}
  IMS_Library.PluginController.LoadedPlugins*:
    name:
      CSharp:
      - id: IMS_Library.PluginController.LoadedPlugins*
        name: LoadedPlugins
        nameWithType: PluginController.LoadedPlugins
        qualifiedName: IMS_Library.PluginController.LoadedPlugins
      VB:
      - id: IMS_Library.PluginController.LoadedPlugins*
        name: LoadedPlugins
        nameWithType: PluginController.LoadedPlugins
        qualifiedName: IMS_Library.PluginController.LoadedPlugins
    isDefinition: true
    commentId: Overload:IMS_Library.PluginController.LoadedPlugins
  IMS_Library.PluginController.Initialize*:
    name:
      CSharp:
      - id: IMS_Library.PluginController.Initialize*
        name: Initialize
        nameWithType: PluginController.Initialize
        qualifiedName: IMS_Library.PluginController.Initialize
      VB:
      - id: IMS_Library.PluginController.Initialize*
        name: Initialize
        nameWithType: PluginController.Initialize
        qualifiedName: IMS_Library.PluginController.Initialize
    isDefinition: true
    commentId: Overload:IMS_Library.PluginController.Initialize
  IMS_Library.PluginController.Start*:
    name:
      CSharp:
      - id: IMS_Library.PluginController.Start*
        name: Start
        nameWithType: PluginController.Start
        qualifiedName: IMS_Library.PluginController.Start
      VB:
      - id: IMS_Library.PluginController.Start*
        name: Start
        nameWithType: PluginController.Start
        qualifiedName: IMS_Library.PluginController.Start
    isDefinition: true
    commentId: Overload:IMS_Library.PluginController.Start
  IMS_Library.PluginController.UnloadPlugin*:
    name:
      CSharp:
      - id: IMS_Library.PluginController.UnloadPlugin*
        name: UnloadPlugin
        nameWithType: PluginController.UnloadPlugin
        qualifiedName: IMS_Library.PluginController.UnloadPlugin
      VB:
      - id: IMS_Library.PluginController.UnloadPlugin*
        name: UnloadPlugin
        nameWithType: PluginController.UnloadPlugin
        qualifiedName: IMS_Library.PluginController.UnloadPlugin
    isDefinition: true
    commentId: Overload:IMS_Library.PluginController.UnloadPlugin
  IMS_Library.PluginController.LoadPlugin*:
    name:
      CSharp:
      - id: IMS_Library.PluginController.LoadPlugin*
        name: LoadPlugin
        nameWithType: PluginController.LoadPlugin
        qualifiedName: IMS_Library.PluginController.LoadPlugin
      VB:
      - id: IMS_Library.PluginController.LoadPlugin*
        name: LoadPlugin
        nameWithType: PluginController.LoadPlugin
        qualifiedName: IMS_Library.PluginController.LoadPlugin
    isDefinition: true
    commentId: Overload:IMS_Library.PluginController.LoadPlugin
  IMS_Library.PluginController.Stop*:
    name:
      CSharp:
      - id: IMS_Library.PluginController.Stop*
        name: Stop
        nameWithType: PluginController.Stop
        qualifiedName: IMS_Library.PluginController.Stop
      VB:
      - id: IMS_Library.PluginController.Stop*
        name: Stop
        nameWithType: PluginController.Stop
        qualifiedName: IMS_Library.PluginController.Stop
    isDefinition: true
    commentId: Overload:IMS_Library.PluginController.Stop
  IMS_Library.PortForwarder.ConnectedToPortForwardableDevice*:
    name:
      CSharp:
      - id: IMS_Library.PortForwarder.ConnectedToPortForwardableDevice*
        name: ConnectedToPortForwardableDevice
        nameWithType: PortForwarder.ConnectedToPortForwardableDevice
        qualifiedName: IMS_Library.PortForwarder.ConnectedToPortForwardableDevice
      VB:
      - id: IMS_Library.PortForwarder.ConnectedToPortForwardableDevice*
        name: ConnectedToPortForwardableDevice
        nameWithType: PortForwarder.ConnectedToPortForwardableDevice
        qualifiedName: IMS_Library.PortForwarder.ConnectedToPortForwardableDevice
    isDefinition: true
    commentId: Overload:IMS_Library.PortForwarder.ConnectedToPortForwardableDevice
  IMS_Library.PortForwarder.#ctor*:
    name:
      CSharp:
      - id: IMS_Library.PortForwarder.#ctor*
        name: PortForwarder
        nameWithType: PortForwarder.PortForwarder
        qualifiedName: IMS_Library.PortForwarder.PortForwarder
      VB:
      - id: IMS_Library.PortForwarder.#ctor*
        name: PortForwarder
        nameWithType: PortForwarder.PortForwarder
        qualifiedName: IMS_Library.PortForwarder.PortForwarder
    isDefinition: true
    commentId: Overload:IMS_Library.PortForwarder.#ctor
  IMS_Library.PortForwarder.Start*:
    name:
      CSharp:
      - id: IMS_Library.PortForwarder.Start*
        name: Start
        nameWithType: PortForwarder.Start
        qualifiedName: IMS_Library.PortForwarder.Start
      VB:
      - id: IMS_Library.PortForwarder.Start*
        name: Start
        nameWithType: PortForwarder.Start
        qualifiedName: IMS_Library.PortForwarder.Start
    isDefinition: true
    commentId: Overload:IMS_Library.PortForwarder.Start
  IMS_Library.PortForwarder.ForwardPort*:
    name:
      CSharp:
      - id: IMS_Library.PortForwarder.ForwardPort*
        name: ForwardPort
        nameWithType: PortForwarder.ForwardPort
        qualifiedName: IMS_Library.PortForwarder.ForwardPort
      VB:
      - id: IMS_Library.PortForwarder.ForwardPort*
        name: ForwardPort
        nameWithType: PortForwarder.ForwardPort
        qualifiedName: IMS_Library.PortForwarder.ForwardPort
    isDefinition: true
    commentId: Overload:IMS_Library.PortForwarder.ForwardPort
  IMS_Library.PortForwarder.RemovePort*:
    name:
      CSharp:
      - id: IMS_Library.PortForwarder.RemovePort*
        name: RemovePort
        nameWithType: PortForwarder.RemovePort
        qualifiedName: IMS_Library.PortForwarder.RemovePort
      VB:
      - id: IMS_Library.PortForwarder.RemovePort*
        name: RemovePort
        nameWithType: PortForwarder.RemovePort
        qualifiedName: IMS_Library.PortForwarder.RemovePort
    isDefinition: true
    commentId: Overload:IMS_Library.PortForwarder.RemovePort
  IMS_Library.PortForwarder.Stop*:
    name:
      CSharp:
      - id: IMS_Library.PortForwarder.Stop*
        name: Stop
        nameWithType: PortForwarder.Stop
        qualifiedName: IMS_Library.PortForwarder.Stop
      VB:
      - id: IMS_Library.PortForwarder.Stop*
        name: Stop
        nameWithType: PortForwarder.Stop
        qualifiedName: IMS_Library.PortForwarder.Stop
    isDefinition: true
    commentId: Overload:IMS_Library.PortForwarder.Stop
  System.Collections.Generic.IList{IMS_Library.ServerProxy}:
    name:
      CSharp:
      - id: System.Collections.Generic.IList`1
        name: IList
        nameWithType: IList
        qualifiedName: System.Collections.Generic.IList
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: IMS_Library.ServerProxy
        name: ServerProxy
        nameWithType: ServerProxy
        qualifiedName: IMS_Library.ServerProxy
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IList`1
        name: IList
        nameWithType: IList
        qualifiedName: System.Collections.Generic.IList
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: IMS_Library.ServerProxy
        name: ServerProxy
        nameWithType: ServerProxy
        qualifiedName: IMS_Library.ServerProxy
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IList`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IList{IMS_Library.ServerProxy}
  IMS_Library.ServerController.Servers*:
    name:
      CSharp:
      - id: IMS_Library.ServerController.Servers*
        name: Servers
        nameWithType: ServerController.Servers
        qualifiedName: IMS_Library.ServerController.Servers
      VB:
      - id: IMS_Library.ServerController.Servers*
        name: Servers
        nameWithType: ServerController.Servers
        qualifiedName: IMS_Library.ServerController.Servers
    isDefinition: true
    commentId: Overload:IMS_Library.ServerController.Servers
  IMS_Library.ServerController.Start*:
    name:
      CSharp:
      - id: IMS_Library.ServerController.Start*
        name: Start
        nameWithType: ServerController.Start
        qualifiedName: IMS_Library.ServerController.Start
      VB:
      - id: IMS_Library.ServerController.Start*
        name: Start
        nameWithType: ServerController.Start
        qualifiedName: IMS_Library.ServerController.Start
    isDefinition: true
    commentId: Overload:IMS_Library.ServerController.Start
  IMS_Library.ServerController.Stop*:
    name:
      CSharp:
      - id: IMS_Library.ServerController.Stop*
        name: Stop
        nameWithType: ServerController.Stop
        qualifiedName: IMS_Library.ServerController.Stop
      VB:
      - id: IMS_Library.ServerController.Stop*
        name: Stop
        nameWithType: ServerController.Stop
        qualifiedName: IMS_Library.ServerController.Stop
    isDefinition: true
    commentId: Overload:IMS_Library.ServerController.Stop
  IMS_Library.ServerProxy:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy
        name: ServerProxy
        nameWithType: ServerProxy
        qualifiedName: IMS_Library.ServerProxy
      VB:
      - id: IMS_Library.ServerProxy
        name: ServerProxy
        nameWithType: ServerProxy
        qualifiedName: IMS_Library.ServerProxy
    isDefinition: true
    parent: IMS_Library
    commentId: T:IMS_Library.ServerProxy
  IMS_Library.ServerController.GetServer*:
    name:
      CSharp:
      - id: IMS_Library.ServerController.GetServer*
        name: GetServer
        nameWithType: ServerController.GetServer
        qualifiedName: IMS_Library.ServerController.GetServer
      VB:
      - id: IMS_Library.ServerController.GetServer*
        name: GetServer
        nameWithType: ServerController.GetServer
        qualifiedName: IMS_Library.ServerController.GetServer
    isDefinition: true
    commentId: Overload:IMS_Library.ServerController.GetServer
  IMS_Library.MinecraftPlayer:
    name:
      CSharp:
      - id: IMS_Library.MinecraftPlayer
        name: MinecraftPlayer
        nameWithType: MinecraftPlayer
        qualifiedName: IMS_Library.MinecraftPlayer
      VB:
      - id: IMS_Library.MinecraftPlayer
        name: MinecraftPlayer
        nameWithType: MinecraftPlayer
        qualifiedName: IMS_Library.MinecraftPlayer
    isDefinition: true
    parent: IMS_Library
    commentId: T:IMS_Library.MinecraftPlayer
  IMS_Library.BanInformation:
    name:
      CSharp:
      - id: IMS_Library.BanInformation
        name: BanInformation
        nameWithType: BanInformation
        qualifiedName: IMS_Library.BanInformation
      VB:
      - id: IMS_Library.BanInformation
        name: BanInformation
        nameWithType: BanInformation
        qualifiedName: IMS_Library.BanInformation
    isDefinition: true
    commentId: T:IMS_Library.BanInformation
  IMS_Library.ServerProxy.ID:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.ID
        name: ID
        nameWithType: ServerProxy.ID
        qualifiedName: IMS_Library.ServerProxy.ID
      VB:
      - id: IMS_Library.ServerProxy.ID
        name: ID
        nameWithType: ServerProxy.ID
        qualifiedName: IMS_Library.ServerProxy.ID
    isDefinition: true
    parent: IMS_Library.ServerProxy
    commentId: P:IMS_Library.ServerProxy.ID
  IMS_Library.ServerProxy.State:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.State
        name: State
        nameWithType: ServerProxy.State
        qualifiedName: IMS_Library.ServerProxy.State
      VB:
      - id: IMS_Library.ServerProxy.State
        name: State
        nameWithType: ServerProxy.State
        qualifiedName: IMS_Library.ServerProxy.State
    isDefinition: true
    parent: IMS_Library.ServerProxy
    commentId: P:IMS_Library.ServerProxy.State
  IMS_Library.ServerProxy.GetDefaultServerConfiguration:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.GetDefaultServerConfiguration
        name: GetDefaultServerConfiguration
        nameWithType: ServerProxy.GetDefaultServerConfiguration
        qualifiedName: IMS_Library.ServerProxy.GetDefaultServerConfiguration
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.ServerProxy.GetDefaultServerConfiguration
        name: GetDefaultServerConfiguration
        nameWithType: ServerProxy.GetDefaultServerConfiguration
        qualifiedName: IMS_Library.ServerProxy.GetDefaultServerConfiguration
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IMS_Library.ServerProxy
    commentId: M:IMS_Library.ServerProxy.GetDefaultServerConfiguration
  IMS_Library.ServerConfiguration:
    name:
      CSharp:
      - id: IMS_Library.ServerConfiguration
        name: ServerConfiguration
        nameWithType: ServerConfiguration
        qualifiedName: IMS_Library.ServerConfiguration
      VB:
      - id: IMS_Library.ServerConfiguration
        name: ServerConfiguration
        nameWithType: ServerConfiguration
        qualifiedName: IMS_Library.ServerConfiguration
    isDefinition: true
    parent: IMS_Library
    commentId: T:IMS_Library.ServerConfiguration
  IMS_Library.ServerProxy.CurrentConfiguration:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.CurrentConfiguration
        name: CurrentConfiguration
        nameWithType: ServerProxy.CurrentConfiguration
        qualifiedName: IMS_Library.ServerProxy.CurrentConfiguration
      VB:
      - id: IMS_Library.ServerProxy.CurrentConfiguration
        name: CurrentConfiguration
        nameWithType: ServerProxy.CurrentConfiguration
        qualifiedName: IMS_Library.ServerProxy.CurrentConfiguration
    isDefinition: true
    parent: IMS_Library.ServerProxy
    commentId: P:IMS_Library.ServerProxy.CurrentConfiguration
  IMS_Library.BedrockServer.CurrentConfiguration*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.CurrentConfiguration*
        name: CurrentConfiguration
        nameWithType: BedrockServer.CurrentConfiguration
        qualifiedName: IMS_Library.BedrockServer.CurrentConfiguration
      VB:
      - id: IMS_Library.BedrockServer.CurrentConfiguration*
        name: CurrentConfiguration
        nameWithType: BedrockServer.CurrentConfiguration
        qualifiedName: IMS_Library.BedrockServer.CurrentConfiguration
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.CurrentConfiguration
  IMS_Library.ServerProxy.SupportsWhitelist:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.SupportsWhitelist
        name: SupportsWhitelist
        nameWithType: ServerProxy.SupportsWhitelist
        qualifiedName: IMS_Library.ServerProxy.SupportsWhitelist
      VB:
      - id: IMS_Library.ServerProxy.SupportsWhitelist
        name: SupportsWhitelist
        nameWithType: ServerProxy.SupportsWhitelist
        qualifiedName: IMS_Library.ServerProxy.SupportsWhitelist
    isDefinition: true
    parent: IMS_Library.ServerProxy
    commentId: P:IMS_Library.ServerProxy.SupportsWhitelist
  IMS_Library.BedrockServer.SupportsWhitelist*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.SupportsWhitelist*
        name: SupportsWhitelist
        nameWithType: BedrockServer.SupportsWhitelist
        qualifiedName: IMS_Library.BedrockServer.SupportsWhitelist
      VB:
      - id: IMS_Library.BedrockServer.SupportsWhitelist*
        name: SupportsWhitelist
        nameWithType: BedrockServer.SupportsWhitelist
        qualifiedName: IMS_Library.BedrockServer.SupportsWhitelist
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.SupportsWhitelist
  IMS_Library.ServerProxy.WhitelistEnabled:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.WhitelistEnabled
        name: WhitelistEnabled
        nameWithType: ServerProxy.WhitelistEnabled
        qualifiedName: IMS_Library.ServerProxy.WhitelistEnabled
      VB:
      - id: IMS_Library.ServerProxy.WhitelistEnabled
        name: WhitelistEnabled
        nameWithType: ServerProxy.WhitelistEnabled
        qualifiedName: IMS_Library.ServerProxy.WhitelistEnabled
    isDefinition: true
    parent: IMS_Library.ServerProxy
    commentId: P:IMS_Library.ServerProxy.WhitelistEnabled
  IMS_Library.BedrockServer.WhitelistEnabled*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.WhitelistEnabled*
        name: WhitelistEnabled
        nameWithType: BedrockServer.WhitelistEnabled
        qualifiedName: IMS_Library.BedrockServer.WhitelistEnabled
      VB:
      - id: IMS_Library.BedrockServer.WhitelistEnabled*
        name: WhitelistEnabled
        nameWithType: BedrockServer.WhitelistEnabled
        qualifiedName: IMS_Library.BedrockServer.WhitelistEnabled
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.WhitelistEnabled
  IMS_Library.ServerProxy.SupportsBanning:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.SupportsBanning
        name: SupportsBanning
        nameWithType: ServerProxy.SupportsBanning
        qualifiedName: IMS_Library.ServerProxy.SupportsBanning
      VB:
      - id: IMS_Library.ServerProxy.SupportsBanning
        name: SupportsBanning
        nameWithType: ServerProxy.SupportsBanning
        qualifiedName: IMS_Library.ServerProxy.SupportsBanning
    isDefinition: true
    parent: IMS_Library.ServerProxy
    commentId: P:IMS_Library.ServerProxy.SupportsBanning
  IMS_Library.BedrockServer.SupportsBanning*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.SupportsBanning*
        name: SupportsBanning
        nameWithType: BedrockServer.SupportsBanning
        qualifiedName: IMS_Library.BedrockServer.SupportsBanning
      VB:
      - id: IMS_Library.BedrockServer.SupportsBanning*
        name: SupportsBanning
        nameWithType: BedrockServer.SupportsBanning
        qualifiedName: IMS_Library.BedrockServer.SupportsBanning
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.SupportsBanning
  IMS_Library.ServerProxy.SupportsBanningIPs:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.SupportsBanningIPs
        name: SupportsBanningIPs
        nameWithType: ServerProxy.SupportsBanningIPs
        qualifiedName: IMS_Library.ServerProxy.SupportsBanningIPs
      VB:
      - id: IMS_Library.ServerProxy.SupportsBanningIPs
        name: SupportsBanningIPs
        nameWithType: ServerProxy.SupportsBanningIPs
        qualifiedName: IMS_Library.ServerProxy.SupportsBanningIPs
    isDefinition: true
    parent: IMS_Library.ServerProxy
    commentId: P:IMS_Library.ServerProxy.SupportsBanningIPs
  IMS_Library.BedrockServer.SupportsBanningIPs*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.SupportsBanningIPs*
        name: SupportsBanningIPs
        nameWithType: BedrockServer.SupportsBanningIPs
        qualifiedName: IMS_Library.BedrockServer.SupportsBanningIPs
      VB:
      - id: IMS_Library.BedrockServer.SupportsBanningIPs*
        name: SupportsBanningIPs
        nameWithType: BedrockServer.SupportsBanningIPs
        qualifiedName: IMS_Library.BedrockServer.SupportsBanningIPs
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.SupportsBanningIPs
  IMS_Library.ServerProxy.SupportsOps:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.SupportsOps
        name: SupportsOps
        nameWithType: ServerProxy.SupportsOps
        qualifiedName: IMS_Library.ServerProxy.SupportsOps
      VB:
      - id: IMS_Library.ServerProxy.SupportsOps
        name: SupportsOps
        nameWithType: ServerProxy.SupportsOps
        qualifiedName: IMS_Library.ServerProxy.SupportsOps
    isDefinition: true
    parent: IMS_Library.ServerProxy
    commentId: P:IMS_Library.ServerProxy.SupportsOps
  IMS_Library.BedrockServer.SupportsOps*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.SupportsOps*
        name: SupportsOps
        nameWithType: BedrockServer.SupportsOps
        qualifiedName: IMS_Library.BedrockServer.SupportsOps
      VB:
      - id: IMS_Library.BedrockServer.SupportsOps*
        name: SupportsOps
        nameWithType: BedrockServer.SupportsOps
        qualifiedName: IMS_Library.BedrockServer.SupportsOps
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.SupportsOps
  IMS_Library.ServerProxy.SupportsIPs:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.SupportsIPs
        name: SupportsIPs
        nameWithType: ServerProxy.SupportsIPs
        qualifiedName: IMS_Library.ServerProxy.SupportsIPs
      VB:
      - id: IMS_Library.ServerProxy.SupportsIPs
        name: SupportsIPs
        nameWithType: ServerProxy.SupportsIPs
        qualifiedName: IMS_Library.ServerProxy.SupportsIPs
    isDefinition: true
    parent: IMS_Library.ServerProxy
    commentId: P:IMS_Library.ServerProxy.SupportsIPs
  IMS_Library.BedrockServer.SupportsIPs*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.SupportsIPs*
        name: SupportsIPs
        nameWithType: BedrockServer.SupportsIPs
        qualifiedName: IMS_Library.BedrockServer.SupportsIPs
      VB:
      - id: IMS_Library.BedrockServer.SupportsIPs*
        name: SupportsIPs
        nameWithType: BedrockServer.SupportsIPs
        qualifiedName: IMS_Library.BedrockServer.SupportsIPs
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.SupportsIPs
  IMS_Library.ServerProxy.SupportsKicking:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.SupportsKicking
        name: SupportsKicking
        nameWithType: ServerProxy.SupportsKicking
        qualifiedName: IMS_Library.ServerProxy.SupportsKicking
      VB:
      - id: IMS_Library.ServerProxy.SupportsKicking
        name: SupportsKicking
        nameWithType: ServerProxy.SupportsKicking
        qualifiedName: IMS_Library.ServerProxy.SupportsKicking
    isDefinition: true
    parent: IMS_Library.ServerProxy
    commentId: P:IMS_Library.ServerProxy.SupportsKicking
  IMS_Library.BedrockServer.SupportsKicking*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.SupportsKicking*
        name: SupportsKicking
        nameWithType: BedrockServer.SupportsKicking
        qualifiedName: IMS_Library.BedrockServer.SupportsKicking
      VB:
      - id: IMS_Library.BedrockServer.SupportsKicking*
        name: SupportsKicking
        nameWithType: BedrockServer.SupportsKicking
        qualifiedName: IMS_Library.BedrockServer.SupportsKicking
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.SupportsKicking
  IMS_Library.ServerProxy.SupportedEdition:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.SupportedEdition
        name: SupportedEdition
        nameWithType: ServerProxy.SupportedEdition
        qualifiedName: IMS_Library.ServerProxy.SupportedEdition
      VB:
      - id: IMS_Library.ServerProxy.SupportedEdition
        name: SupportedEdition
        nameWithType: ServerProxy.SupportedEdition
        qualifiedName: IMS_Library.ServerProxy.SupportedEdition
    isDefinition: true
    parent: IMS_Library.ServerProxy
    commentId: P:IMS_Library.ServerProxy.SupportedEdition
  IMS_Library.BedrockServer.SupportedEdition*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.SupportedEdition*
        name: SupportedEdition
        nameWithType: BedrockServer.SupportedEdition
        qualifiedName: IMS_Library.BedrockServer.SupportedEdition
      VB:
      - id: IMS_Library.BedrockServer.SupportedEdition*
        name: SupportedEdition
        nameWithType: BedrockServer.SupportedEdition
        qualifiedName: IMS_Library.BedrockServer.SupportedEdition
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.SupportedEdition
  IMS_Library.BedrockServer.ServerLocation*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.ServerLocation*
        name: ServerLocation
        nameWithType: BedrockServer.ServerLocation
        qualifiedName: IMS_Library.BedrockServer.ServerLocation
      VB:
      - id: IMS_Library.BedrockServer.ServerLocation*
        name: ServerLocation
        nameWithType: BedrockServer.ServerLocation
        qualifiedName: IMS_Library.BedrockServer.ServerLocation
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.ServerLocation
  IMS_Library.BedrockServer.LogFolderLocation*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.LogFolderLocation*
        name: LogFolderLocation
        nameWithType: BedrockServer.LogFolderLocation
        qualifiedName: IMS_Library.BedrockServer.LogFolderLocation
      VB:
      - id: IMS_Library.BedrockServer.LogFolderLocation*
        name: LogFolderLocation
        nameWithType: BedrockServer.LogFolderLocation
        qualifiedName: IMS_Library.BedrockServer.LogFolderLocation
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.LogFolderLocation
  IMS_Library.BedrockServer.WorldLocation*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.WorldLocation*
        name: WorldLocation
        nameWithType: BedrockServer.WorldLocation
        qualifiedName: IMS_Library.BedrockServer.WorldLocation
      VB:
      - id: IMS_Library.BedrockServer.WorldLocation*
        name: WorldLocation
        nameWithType: BedrockServer.WorldLocation
        qualifiedName: IMS_Library.BedrockServer.WorldLocation
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.WorldLocation
  System.Collections.Generic.Dictionary{System.String,IMS_Library.MinecraftPlayer}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: IMS_Library.MinecraftPlayer
        name: MinecraftPlayer
        nameWithType: MinecraftPlayer
        qualifiedName: IMS_Library.MinecraftPlayer
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: IMS_Library.MinecraftPlayer
        name: MinecraftPlayer
        nameWithType: MinecraftPlayer
        qualifiedName: IMS_Library.MinecraftPlayer
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{System.String,IMS_Library.MinecraftPlayer}
  IMS_Library.BedrockServerConfiguration:
    name:
      CSharp:
      - id: IMS_Library.BedrockServerConfiguration
        name: BedrockServerConfiguration
        nameWithType: BedrockServerConfiguration
        qualifiedName: IMS_Library.BedrockServerConfiguration
      VB:
      - id: IMS_Library.BedrockServerConfiguration
        name: BedrockServerConfiguration
        nameWithType: BedrockServerConfiguration
        qualifiedName: IMS_Library.BedrockServerConfiguration
    isDefinition: true
    parent: IMS_Library
    commentId: T:IMS_Library.BedrockServerConfiguration
  System.IO.FileSystemWatcher:
    name:
      CSharp:
      - id: System.IO.FileSystemWatcher
        name: FileSystemWatcher
        nameWithType: FileSystemWatcher
        qualifiedName: System.IO.FileSystemWatcher
        isExternal: true
      VB:
      - id: System.IO.FileSystemWatcher
        name: FileSystemWatcher
        nameWithType: FileSystemWatcher
        qualifiedName: System.IO.FileSystemWatcher
        isExternal: true
    isDefinition: true
    parent: System.IO
    commentId: T:System.IO.FileSystemWatcher
  System.IO.StreamWriter:
    name:
      CSharp:
      - id: System.IO.StreamWriter
        name: StreamWriter
        nameWithType: StreamWriter
        qualifiedName: System.IO.StreamWriter
        isExternal: true
      VB:
      - id: System.IO.StreamWriter
        name: StreamWriter
        nameWithType: StreamWriter
        qualifiedName: System.IO.StreamWriter
        isExternal: true
    isDefinition: true
    parent: System.IO
    commentId: T:System.IO.StreamWriter
  IMS_Library.BedrockServer.BackupState:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.BackupState
        name: BedrockServer.BackupState
        nameWithType: BedrockServer.BackupState
        qualifiedName: IMS_Library.BedrockServer.BackupState
      VB:
      - id: IMS_Library.BedrockServer.BackupState
        name: BedrockServer.BackupState
        nameWithType: BedrockServer.BackupState
        qualifiedName: IMS_Library.BedrockServer.BackupState
    isDefinition: true
    parent: IMS_Library
    commentId: T:IMS_Library.BedrockServer.BackupState
  IMS_Library.BedrockServer.#ctor*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.#ctor*
        name: BedrockServer
        nameWithType: BedrockServer.BedrockServer
        qualifiedName: IMS_Library.BedrockServer.BedrockServer
      VB:
      - id: IMS_Library.BedrockServer.#ctor*
        name: BedrockServer
        nameWithType: BedrockServer.BedrockServer
        qualifiedName: IMS_Library.BedrockServer.BedrockServer
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.#ctor
  System.Threading.Tasks:
    name:
      CSharp:
      - name: System.Threading.Tasks
        nameWithType: System.Threading.Tasks
        qualifiedName: System.Threading.Tasks
        isExternal: true
      VB:
      - name: System.Threading.Tasks
        nameWithType: System.Threading.Tasks
        qualifiedName: System.Threading.Tasks
    isDefinition: true
    commentId: N:System.Threading.Tasks
  System.Threading.Tasks.Task:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      VB:
      - id: System.Threading.Tasks.Task
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
    isDefinition: true
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task
  IMS_Library.ServerProxy.BackupToLocationAsync(System.String):
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.BackupToLocationAsync(System.String)
        name: BackupToLocationAsync
        nameWithType: ServerProxy.BackupToLocationAsync
        qualifiedName: IMS_Library.ServerProxy.BackupToLocationAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.ServerProxy.BackupToLocationAsync(System.String)
        name: BackupToLocationAsync
        nameWithType: ServerProxy.BackupToLocationAsync
        qualifiedName: IMS_Library.ServerProxy.BackupToLocationAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IMS_Library.ServerProxy
    commentId: M:IMS_Library.ServerProxy.BackupToLocationAsync(System.String)
  IMS_Library.BedrockServer.BackupToLocationAsync*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.BackupToLocationAsync*
        name: BackupToLocationAsync
        nameWithType: BedrockServer.BackupToLocationAsync
        qualifiedName: IMS_Library.BedrockServer.BackupToLocationAsync
      VB:
      - id: IMS_Library.BedrockServer.BackupToLocationAsync*
        name: BackupToLocationAsync
        nameWithType: BedrockServer.BackupToLocationAsync
        qualifiedName: IMS_Library.BedrockServer.BackupToLocationAsync
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.BackupToLocationAsync
  IMS_Library.ServerProxy.BackupToZipFileAsync(System.String):
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.BackupToZipFileAsync(System.String)
        name: BackupToZipFileAsync
        nameWithType: ServerProxy.BackupToZipFileAsync
        qualifiedName: IMS_Library.ServerProxy.BackupToZipFileAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.ServerProxy.BackupToZipFileAsync(System.String)
        name: BackupToZipFileAsync
        nameWithType: ServerProxy.BackupToZipFileAsync
        qualifiedName: IMS_Library.ServerProxy.BackupToZipFileAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IMS_Library.ServerProxy
    commentId: M:IMS_Library.ServerProxy.BackupToZipFileAsync(System.String)
  IMS_Library.BedrockServer.BackupToZipFileAsync*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.BackupToZipFileAsync*
        name: BackupToZipFileAsync
        nameWithType: BedrockServer.BackupToZipFileAsync
        qualifiedName: IMS_Library.BedrockServer.BackupToZipFileAsync
      VB:
      - id: IMS_Library.BedrockServer.BackupToZipFileAsync*
        name: BackupToZipFileAsync
        nameWithType: BedrockServer.BackupToZipFileAsync
        qualifiedName: IMS_Library.BedrockServer.BackupToZipFileAsync
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.BackupToZipFileAsync
  IMS_Library.ServerProxy.BanIP(System.String,System.String):
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.BanIP(System.String,System.String)
        name: BanIP
        nameWithType: ServerProxy.BanIP
        qualifiedName: IMS_Library.ServerProxy.BanIP
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.ServerProxy.BanIP(System.String,System.String)
        name: BanIP
        nameWithType: ServerProxy.BanIP
        qualifiedName: IMS_Library.ServerProxy.BanIP
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IMS_Library.ServerProxy
    commentId: M:IMS_Library.ServerProxy.BanIP(System.String,System.String)
  IMS_Library.BedrockServer.BanIP*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.BanIP*
        name: BanIP
        nameWithType: BedrockServer.BanIP
        qualifiedName: IMS_Library.BedrockServer.BanIP
      VB:
      - id: IMS_Library.BedrockServer.BanIP*
        name: BanIP
        nameWithType: BedrockServer.BanIP
        qualifiedName: IMS_Library.BedrockServer.BanIP
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.BanIP
  IMS_Library.ServerProxy.BanPlayer(System.String,System.String):
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.BanPlayer(System.String,System.String)
        name: BanPlayer
        nameWithType: ServerProxy.BanPlayer
        qualifiedName: IMS_Library.ServerProxy.BanPlayer
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.ServerProxy.BanPlayer(System.String,System.String)
        name: BanPlayer
        nameWithType: ServerProxy.BanPlayer
        qualifiedName: IMS_Library.ServerProxy.BanPlayer
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IMS_Library.ServerProxy
    commentId: M:IMS_Library.ServerProxy.BanPlayer(System.String,System.String)
  IMS_Library.BedrockServer.BanPlayer*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.BanPlayer*
        name: BanPlayer
        nameWithType: BedrockServer.BanPlayer
        qualifiedName: IMS_Library.BedrockServer.BanPlayer
      VB:
      - id: IMS_Library.BedrockServer.BanPlayer*
        name: BanPlayer
        nameWithType: BedrockServer.BanPlayer
        qualifiedName: IMS_Library.BedrockServer.BanPlayer
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.BanPlayer
  IMS_Library.ServerProxy.DeopPlayer(System.String):
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.DeopPlayer(System.String)
        name: DeopPlayer
        nameWithType: ServerProxy.DeopPlayer
        qualifiedName: IMS_Library.ServerProxy.DeopPlayer
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.ServerProxy.DeopPlayer(System.String)
        name: DeopPlayer
        nameWithType: ServerProxy.DeopPlayer
        qualifiedName: IMS_Library.ServerProxy.DeopPlayer
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IMS_Library.ServerProxy
    commentId: M:IMS_Library.ServerProxy.DeopPlayer(System.String)
  IMS_Library.BedrockServer.DeopPlayer*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.DeopPlayer*
        name: DeopPlayer
        nameWithType: BedrockServer.DeopPlayer
        qualifiedName: IMS_Library.BedrockServer.DeopPlayer
      VB:
      - id: IMS_Library.BedrockServer.DeopPlayer*
        name: DeopPlayer
        nameWithType: BedrockServer.DeopPlayer
        qualifiedName: IMS_Library.BedrockServer.DeopPlayer
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.DeopPlayer
  System.Collections.Generic.List{IMS_Library.BanIPTag}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: IMS_Library.BanIPTag
        name: BanIPTag
        nameWithType: BanIPTag
        qualifiedName: IMS_Library.BanIPTag
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: IMS_Library.BanIPTag
        name: BanIPTag
        nameWithType: BanIPTag
        qualifiedName: IMS_Library.BanIPTag
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{IMS_Library.BanIPTag}
  IMS_Library.ServerProxy.GetAllBannedIPs:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.GetAllBannedIPs
        name: GetAllBannedIPs
        nameWithType: ServerProxy.GetAllBannedIPs
        qualifiedName: IMS_Library.ServerProxy.GetAllBannedIPs
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.ServerProxy.GetAllBannedIPs
        name: GetAllBannedIPs
        nameWithType: ServerProxy.GetAllBannedIPs
        qualifiedName: IMS_Library.ServerProxy.GetAllBannedIPs
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IMS_Library.ServerProxy
    commentId: M:IMS_Library.ServerProxy.GetAllBannedIPs
  IMS_Library.BedrockServer.GetAllBannedIPs*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.GetAllBannedIPs*
        name: GetAllBannedIPs
        nameWithType: BedrockServer.GetAllBannedIPs
        qualifiedName: IMS_Library.BedrockServer.GetAllBannedIPs
      VB:
      - id: IMS_Library.BedrockServer.GetAllBannedIPs*
        name: GetAllBannedIPs
        nameWithType: BedrockServer.GetAllBannedIPs
        qualifiedName: IMS_Library.BedrockServer.GetAllBannedIPs
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.GetAllBannedIPs
  System.Collections.Generic.List{IMS_Library.BanInformation}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: IMS_Library.BanInformation
        name: BanInformation
        nameWithType: BanInformation
        qualifiedName: IMS_Library.BanInformation
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: IMS_Library.BanInformation
        name: BanInformation
        nameWithType: BanInformation
        qualifiedName: IMS_Library.BanInformation
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{IMS_Library.BanInformation}
  IMS_Library.ServerProxy.GetAllBans:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.GetAllBans
        name: GetAllBans
        nameWithType: ServerProxy.GetAllBans
        qualifiedName: IMS_Library.ServerProxy.GetAllBans
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.ServerProxy.GetAllBans
        name: GetAllBans
        nameWithType: ServerProxy.GetAllBans
        qualifiedName: IMS_Library.ServerProxy.GetAllBans
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IMS_Library.ServerProxy
    commentId: M:IMS_Library.ServerProxy.GetAllBans
  IMS_Library.BedrockServer.GetAllBans*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.GetAllBans*
        name: GetAllBans
        nameWithType: BedrockServer.GetAllBans
        qualifiedName: IMS_Library.BedrockServer.GetAllBans
      VB:
      - id: IMS_Library.BedrockServer.GetAllBans*
        name: GetAllBans
        nameWithType: BedrockServer.GetAllBans
        qualifiedName: IMS_Library.BedrockServer.GetAllBans
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.GetAllBans
  System.Collections.Generic.IEnumerable`1:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.IEnumerable`1
  System.Collections.Generic.IEnumerable{IMS_Library.MinecraftPlayer}:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: IMS_Library.MinecraftPlayer
        name: MinecraftPlayer
        nameWithType: MinecraftPlayer
        qualifiedName: IMS_Library.MinecraftPlayer
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: IMS_Library.MinecraftPlayer
        name: MinecraftPlayer
        nameWithType: MinecraftPlayer
        qualifiedName: IMS_Library.MinecraftPlayer
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IEnumerable`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IEnumerable{IMS_Library.MinecraftPlayer}
  IMS_Library.ServerProxy.GetAllOps:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.GetAllOps
        name: GetAllOps
        nameWithType: ServerProxy.GetAllOps
        qualifiedName: IMS_Library.ServerProxy.GetAllOps
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.ServerProxy.GetAllOps
        name: GetAllOps
        nameWithType: ServerProxy.GetAllOps
        qualifiedName: IMS_Library.ServerProxy.GetAllOps
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IMS_Library.ServerProxy
    commentId: M:IMS_Library.ServerProxy.GetAllOps
  IMS_Library.BedrockServer.GetAllOps*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.GetAllOps*
        name: GetAllOps
        nameWithType: BedrockServer.GetAllOps
        qualifiedName: IMS_Library.BedrockServer.GetAllOps
      VB:
      - id: IMS_Library.BedrockServer.GetAllOps*
        name: GetAllOps
        nameWithType: BedrockServer.GetAllOps
        qualifiedName: IMS_Library.BedrockServer.GetAllOps
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.GetAllOps
  IMS_Library.ServerProxy.GetAllPlayers:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.GetAllPlayers
        name: GetAllPlayers
        nameWithType: ServerProxy.GetAllPlayers
        qualifiedName: IMS_Library.ServerProxy.GetAllPlayers
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.ServerProxy.GetAllPlayers
        name: GetAllPlayers
        nameWithType: ServerProxy.GetAllPlayers
        qualifiedName: IMS_Library.ServerProxy.GetAllPlayers
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IMS_Library.ServerProxy
    commentId: M:IMS_Library.ServerProxy.GetAllPlayers
  IMS_Library.BedrockServer.GetAllPlayers*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.GetAllPlayers*
        name: GetAllPlayers
        nameWithType: BedrockServer.GetAllPlayers
        qualifiedName: IMS_Library.BedrockServer.GetAllPlayers
      VB:
      - id: IMS_Library.BedrockServer.GetAllPlayers*
        name: GetAllPlayers
        nameWithType: BedrockServer.GetAllPlayers
        qualifiedName: IMS_Library.BedrockServer.GetAllPlayers
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.GetAllPlayers
  IMS_Library.ServerProxy.GetAllWhitelistedPlayers:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.GetAllWhitelistedPlayers
        name: GetAllWhitelistedPlayers
        nameWithType: ServerProxy.GetAllWhitelistedPlayers
        qualifiedName: IMS_Library.ServerProxy.GetAllWhitelistedPlayers
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.ServerProxy.GetAllWhitelistedPlayers
        name: GetAllWhitelistedPlayers
        nameWithType: ServerProxy.GetAllWhitelistedPlayers
        qualifiedName: IMS_Library.ServerProxy.GetAllWhitelistedPlayers
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IMS_Library.ServerProxy
    commentId: M:IMS_Library.ServerProxy.GetAllWhitelistedPlayers
  IMS_Library.BedrockServer.GetAllWhitelistedPlayers*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.GetAllWhitelistedPlayers*
        name: GetAllWhitelistedPlayers
        nameWithType: BedrockServer.GetAllWhitelistedPlayers
        qualifiedName: IMS_Library.BedrockServer.GetAllWhitelistedPlayers
      VB:
      - id: IMS_Library.BedrockServer.GetAllWhitelistedPlayers*
        name: GetAllWhitelistedPlayers
        nameWithType: BedrockServer.GetAllWhitelistedPlayers
        qualifiedName: IMS_Library.BedrockServer.GetAllWhitelistedPlayers
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.GetAllWhitelistedPlayers
  IMS_Library.ServerProxy.GetConsoleText:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.GetConsoleText
        name: GetConsoleText
        nameWithType: ServerProxy.GetConsoleText
        qualifiedName: IMS_Library.ServerProxy.GetConsoleText
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.ServerProxy.GetConsoleText
        name: GetConsoleText
        nameWithType: ServerProxy.GetConsoleText
        qualifiedName: IMS_Library.ServerProxy.GetConsoleText
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IMS_Library.ServerProxy
    commentId: M:IMS_Library.ServerProxy.GetConsoleText
  IMS_Library.BedrockServer.GetConsoleText*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.GetConsoleText*
        name: GetConsoleText
        nameWithType: BedrockServer.GetConsoleText
        qualifiedName: IMS_Library.BedrockServer.GetConsoleText
      VB:
      - id: IMS_Library.BedrockServer.GetConsoleText*
        name: GetConsoleText
        nameWithType: BedrockServer.GetConsoleText
        qualifiedName: IMS_Library.BedrockServer.GetConsoleText
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.GetConsoleText
  IMS_Library.ServerProxy.GetLogFile(System.String):
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.GetLogFile(System.String)
        name: GetLogFile
        nameWithType: ServerProxy.GetLogFile
        qualifiedName: IMS_Library.ServerProxy.GetLogFile
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.ServerProxy.GetLogFile(System.String)
        name: GetLogFile
        nameWithType: ServerProxy.GetLogFile
        qualifiedName: IMS_Library.ServerProxy.GetLogFile
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IMS_Library.ServerProxy
    commentId: M:IMS_Library.ServerProxy.GetLogFile(System.String)
  IMS_Library.BedrockServer.GetLogFile*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.GetLogFile*
        name: GetLogFile
        nameWithType: BedrockServer.GetLogFile
        qualifiedName: IMS_Library.BedrockServer.GetLogFile
      VB:
      - id: IMS_Library.BedrockServer.GetLogFile*
        name: GetLogFile
        nameWithType: BedrockServer.GetLogFile
        qualifiedName: IMS_Library.BedrockServer.GetLogFile
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.GetLogFile
  System.Collections.Generic.List{IMS_Library.LogFileInformation}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: IMS_Library.LogFileInformation
        name: LogFileInformation
        nameWithType: LogFileInformation
        qualifiedName: IMS_Library.LogFileInformation
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: IMS_Library.LogFileInformation
        name: LogFileInformation
        nameWithType: LogFileInformation
        qualifiedName: IMS_Library.LogFileInformation
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{IMS_Library.LogFileInformation}
  IMS_Library.ServerProxy.GetLogFiles:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.GetLogFiles
        name: GetLogFiles
        nameWithType: ServerProxy.GetLogFiles
        qualifiedName: IMS_Library.ServerProxy.GetLogFiles
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.ServerProxy.GetLogFiles
        name: GetLogFiles
        nameWithType: ServerProxy.GetLogFiles
        qualifiedName: IMS_Library.ServerProxy.GetLogFiles
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IMS_Library.ServerProxy
    commentId: M:IMS_Library.ServerProxy.GetLogFiles
  IMS_Library.BedrockServer.GetLogFiles*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.GetLogFiles*
        name: GetLogFiles
        nameWithType: BedrockServer.GetLogFiles
        qualifiedName: IMS_Library.BedrockServer.GetLogFiles
      VB:
      - id: IMS_Library.BedrockServer.GetLogFiles*
        name: GetLogFiles
        nameWithType: BedrockServer.GetLogFiles
        qualifiedName: IMS_Library.BedrockServer.GetLogFiles
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.GetLogFiles
  IMS_Library.ServerProxy.GetOnlinePlayers:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.GetOnlinePlayers
        name: GetOnlinePlayers
        nameWithType: ServerProxy.GetOnlinePlayers
        qualifiedName: IMS_Library.ServerProxy.GetOnlinePlayers
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.ServerProxy.GetOnlinePlayers
        name: GetOnlinePlayers
        nameWithType: ServerProxy.GetOnlinePlayers
        qualifiedName: IMS_Library.ServerProxy.GetOnlinePlayers
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IMS_Library.ServerProxy
    commentId: M:IMS_Library.ServerProxy.GetOnlinePlayers
  IMS_Library.BedrockServer.GetOnlinePlayers*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.GetOnlinePlayers*
        name: GetOnlinePlayers
        nameWithType: BedrockServer.GetOnlinePlayers
        qualifiedName: IMS_Library.BedrockServer.GetOnlinePlayers
      VB:
      - id: IMS_Library.BedrockServer.GetOnlinePlayers*
        name: GetOnlinePlayers
        nameWithType: BedrockServer.GetOnlinePlayers
        qualifiedName: IMS_Library.BedrockServer.GetOnlinePlayers
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.GetOnlinePlayers
  IMS_Library.ServerProxy.GetPlayerInformationByUsername(System.String):
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.GetPlayerInformationByUsername(System.String)
        name: GetPlayerInformationByUsername
        nameWithType: ServerProxy.GetPlayerInformationByUsername
        qualifiedName: IMS_Library.ServerProxy.GetPlayerInformationByUsername
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.ServerProxy.GetPlayerInformationByUsername(System.String)
        name: GetPlayerInformationByUsername
        nameWithType: ServerProxy.GetPlayerInformationByUsername
        qualifiedName: IMS_Library.ServerProxy.GetPlayerInformationByUsername
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IMS_Library.ServerProxy
    commentId: M:IMS_Library.ServerProxy.GetPlayerInformationByUsername(System.String)
  IMS_Library.BedrockServer.GetPlayerInformationByUsername*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.GetPlayerInformationByUsername*
        name: GetPlayerInformationByUsername
        nameWithType: BedrockServer.GetPlayerInformationByUsername
        qualifiedName: IMS_Library.BedrockServer.GetPlayerInformationByUsername
      VB:
      - id: IMS_Library.BedrockServer.GetPlayerInformationByUsername*
        name: GetPlayerInformationByUsername
        nameWithType: BedrockServer.GetPlayerInformationByUsername
        qualifiedName: IMS_Library.BedrockServer.GetPlayerInformationByUsername
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.GetPlayerInformationByUsername
  IMS_Library.ServerProxy.GetPlayerInformationByUUID(System.String):
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.GetPlayerInformationByUUID(System.String)
        name: GetPlayerInformationByUUID
        nameWithType: ServerProxy.GetPlayerInformationByUUID
        qualifiedName: IMS_Library.ServerProxy.GetPlayerInformationByUUID
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.ServerProxy.GetPlayerInformationByUUID(System.String)
        name: GetPlayerInformationByUUID
        nameWithType: ServerProxy.GetPlayerInformationByUUID
        qualifiedName: IMS_Library.ServerProxy.GetPlayerInformationByUUID
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IMS_Library.ServerProxy
    commentId: M:IMS_Library.ServerProxy.GetPlayerInformationByUUID(System.String)
  IMS_Library.BedrockServer.GetPlayerInformationByUUID*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.GetPlayerInformationByUUID*
        name: GetPlayerInformationByUUID
        nameWithType: BedrockServer.GetPlayerInformationByUUID
        qualifiedName: IMS_Library.BedrockServer.GetPlayerInformationByUUID
      VB:
      - id: IMS_Library.BedrockServer.GetPlayerInformationByUUID*
        name: GetPlayerInformationByUUID
        nameWithType: BedrockServer.GetPlayerInformationByUUID
        qualifiedName: IMS_Library.BedrockServer.GetPlayerInformationByUUID
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.GetPlayerInformationByUUID
  IMS_Library.ServerProxy.KickPlayer(System.String,System.String):
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.KickPlayer(System.String,System.String)
        name: KickPlayer
        nameWithType: ServerProxy.KickPlayer
        qualifiedName: IMS_Library.ServerProxy.KickPlayer
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.ServerProxy.KickPlayer(System.String,System.String)
        name: KickPlayer
        nameWithType: ServerProxy.KickPlayer
        qualifiedName: IMS_Library.ServerProxy.KickPlayer
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IMS_Library.ServerProxy
    commentId: M:IMS_Library.ServerProxy.KickPlayer(System.String,System.String)
  IMS_Library.BedrockServer.KickPlayer*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.KickPlayer*
        name: KickPlayer
        nameWithType: BedrockServer.KickPlayer
        qualifiedName: IMS_Library.BedrockServer.KickPlayer
      VB:
      - id: IMS_Library.BedrockServer.KickPlayer*
        name: KickPlayer
        nameWithType: BedrockServer.KickPlayer
        qualifiedName: IMS_Library.BedrockServer.KickPlayer
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.KickPlayer
  IMS_Library.ServerProxy.OpPlayer(System.String):
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.OpPlayer(System.String)
        name: OpPlayer
        nameWithType: ServerProxy.OpPlayer
        qualifiedName: IMS_Library.ServerProxy.OpPlayer
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.ServerProxy.OpPlayer(System.String)
        name: OpPlayer
        nameWithType: ServerProxy.OpPlayer
        qualifiedName: IMS_Library.ServerProxy.OpPlayer
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IMS_Library.ServerProxy
    commentId: M:IMS_Library.ServerProxy.OpPlayer(System.String)
  IMS_Library.BedrockServer.OpPlayer*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.OpPlayer*
        name: OpPlayer
        nameWithType: BedrockServer.OpPlayer
        qualifiedName: IMS_Library.BedrockServer.OpPlayer
      VB:
      - id: IMS_Library.BedrockServer.OpPlayer*
        name: OpPlayer
        nameWithType: BedrockServer.OpPlayer
        qualifiedName: IMS_Library.BedrockServer.OpPlayer
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.OpPlayer
  IMS_Library.ServerProxy.ReloadServerPermissions:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.ReloadServerPermissions
        name: ReloadServerPermissions
        nameWithType: ServerProxy.ReloadServerPermissions
        qualifiedName: IMS_Library.ServerProxy.ReloadServerPermissions
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.ServerProxy.ReloadServerPermissions
        name: ReloadServerPermissions
        nameWithType: ServerProxy.ReloadServerPermissions
        qualifiedName: IMS_Library.ServerProxy.ReloadServerPermissions
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IMS_Library.ServerProxy
    commentId: M:IMS_Library.ServerProxy.ReloadServerPermissions
  IMS_Library.BedrockServer.ReloadServerPermissions*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.ReloadServerPermissions*
        name: ReloadServerPermissions
        nameWithType: BedrockServer.ReloadServerPermissions
        qualifiedName: IMS_Library.BedrockServer.ReloadServerPermissions
      VB:
      - id: IMS_Library.BedrockServer.ReloadServerPermissions*
        name: ReloadServerPermissions
        nameWithType: BedrockServer.ReloadServerPermissions
        qualifiedName: IMS_Library.BedrockServer.ReloadServerPermissions
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.ReloadServerPermissions
  IMS_Library.ServerProxy.ReloadServerWhitelist:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.ReloadServerWhitelist
        name: ReloadServerWhitelist
        nameWithType: ServerProxy.ReloadServerWhitelist
        qualifiedName: IMS_Library.ServerProxy.ReloadServerWhitelist
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.ServerProxy.ReloadServerWhitelist
        name: ReloadServerWhitelist
        nameWithType: ServerProxy.ReloadServerWhitelist
        qualifiedName: IMS_Library.ServerProxy.ReloadServerWhitelist
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IMS_Library.ServerProxy
    commentId: M:IMS_Library.ServerProxy.ReloadServerWhitelist
  IMS_Library.BedrockServer.ReloadServerWhitelist*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.ReloadServerWhitelist*
        name: ReloadServerWhitelist
        nameWithType: BedrockServer.ReloadServerWhitelist
        qualifiedName: IMS_Library.BedrockServer.ReloadServerWhitelist
      VB:
      - id: IMS_Library.BedrockServer.ReloadServerWhitelist*
        name: ReloadServerWhitelist
        nameWithType: BedrockServer.ReloadServerWhitelist
        qualifiedName: IMS_Library.BedrockServer.ReloadServerWhitelist
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.ReloadServerWhitelist
  IMS_Library.ServerProxy.RemoveWhitelistPlayer(System.String):
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.RemoveWhitelistPlayer(System.String)
        name: RemoveWhitelistPlayer
        nameWithType: ServerProxy.RemoveWhitelistPlayer
        qualifiedName: IMS_Library.ServerProxy.RemoveWhitelistPlayer
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.ServerProxy.RemoveWhitelistPlayer(System.String)
        name: RemoveWhitelistPlayer
        nameWithType: ServerProxy.RemoveWhitelistPlayer
        qualifiedName: IMS_Library.ServerProxy.RemoveWhitelistPlayer
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IMS_Library.ServerProxy
    commentId: M:IMS_Library.ServerProxy.RemoveWhitelistPlayer(System.String)
  IMS_Library.BedrockServer.RemoveWhitelistPlayer*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.RemoveWhitelistPlayer*
        name: RemoveWhitelistPlayer
        nameWithType: BedrockServer.RemoveWhitelistPlayer
        qualifiedName: IMS_Library.BedrockServer.RemoveWhitelistPlayer
      VB:
      - id: IMS_Library.BedrockServer.RemoveWhitelistPlayer*
        name: RemoveWhitelistPlayer
        nameWithType: BedrockServer.RemoveWhitelistPlayer
        qualifiedName: IMS_Library.BedrockServer.RemoveWhitelistPlayer
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.RemoveWhitelistPlayer
  IMS_Library.ServerProxy.RestartAsync:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.RestartAsync
        name: RestartAsync
        nameWithType: ServerProxy.RestartAsync
        qualifiedName: IMS_Library.ServerProxy.RestartAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.ServerProxy.RestartAsync
        name: RestartAsync
        nameWithType: ServerProxy.RestartAsync
        qualifiedName: IMS_Library.ServerProxy.RestartAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IMS_Library.ServerProxy
    commentId: M:IMS_Library.ServerProxy.RestartAsync
  IMS_Library.BedrockServer.RestartAsync*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.RestartAsync*
        name: RestartAsync
        nameWithType: BedrockServer.RestartAsync
        qualifiedName: IMS_Library.BedrockServer.RestartAsync
      VB:
      - id: IMS_Library.BedrockServer.RestartAsync*
        name: RestartAsync
        nameWithType: BedrockServer.RestartAsync
        qualifiedName: IMS_Library.BedrockServer.RestartAsync
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.RestartAsync
  IMS_Library.ServerProxy.SendConsoleCommand(System.String):
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.SendConsoleCommand(System.String)
        name: SendConsoleCommand
        nameWithType: ServerProxy.SendConsoleCommand
        qualifiedName: IMS_Library.ServerProxy.SendConsoleCommand
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.ServerProxy.SendConsoleCommand(System.String)
        name: SendConsoleCommand
        nameWithType: ServerProxy.SendConsoleCommand
        qualifiedName: IMS_Library.ServerProxy.SendConsoleCommand
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IMS_Library.ServerProxy
    commentId: M:IMS_Library.ServerProxy.SendConsoleCommand(System.String)
  IMS_Library.BedrockServer.SendConsoleCommand*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.SendConsoleCommand*
        name: SendConsoleCommand
        nameWithType: BedrockServer.SendConsoleCommand
        qualifiedName: IMS_Library.BedrockServer.SendConsoleCommand
      VB:
      - id: IMS_Library.BedrockServer.SendConsoleCommand*
        name: SendConsoleCommand
        nameWithType: BedrockServer.SendConsoleCommand
        qualifiedName: IMS_Library.BedrockServer.SendConsoleCommand
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.SendConsoleCommand
  IMS_Library.ServerProxy.StartAsync:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.StartAsync
        name: StartAsync
        nameWithType: ServerProxy.StartAsync
        qualifiedName: IMS_Library.ServerProxy.StartAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.ServerProxy.StartAsync
        name: StartAsync
        nameWithType: ServerProxy.StartAsync
        qualifiedName: IMS_Library.ServerProxy.StartAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IMS_Library.ServerProxy
    commentId: M:IMS_Library.ServerProxy.StartAsync
  IMS_Library.BedrockServer.StartAsync*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.StartAsync*
        name: StartAsync
        nameWithType: BedrockServer.StartAsync
        qualifiedName: IMS_Library.BedrockServer.StartAsync
      VB:
      - id: IMS_Library.BedrockServer.StartAsync*
        name: StartAsync
        nameWithType: BedrockServer.StartAsync
        qualifiedName: IMS_Library.BedrockServer.StartAsync
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.StartAsync
  IMS_Library.ServerProxy.StopAsync:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.StopAsync
        name: StopAsync
        nameWithType: ServerProxy.StopAsync
        qualifiedName: IMS_Library.ServerProxy.StopAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.ServerProxy.StopAsync
        name: StopAsync
        nameWithType: ServerProxy.StopAsync
        qualifiedName: IMS_Library.ServerProxy.StopAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IMS_Library.ServerProxy
    commentId: M:IMS_Library.ServerProxy.StopAsync
  IMS_Library.BedrockServer.StopAsync*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.StopAsync*
        name: StopAsync
        nameWithType: BedrockServer.StopAsync
        qualifiedName: IMS_Library.BedrockServer.StopAsync
      VB:
      - id: IMS_Library.BedrockServer.StopAsync*
        name: StopAsync
        nameWithType: BedrockServer.StopAsync
        qualifiedName: IMS_Library.BedrockServer.StopAsync
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.StopAsync
  IMS_Library.ServerProxy.UnbanIP(System.String):
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.UnbanIP(System.String)
        name: UnbanIP
        nameWithType: ServerProxy.UnbanIP
        qualifiedName: IMS_Library.ServerProxy.UnbanIP
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.ServerProxy.UnbanIP(System.String)
        name: UnbanIP
        nameWithType: ServerProxy.UnbanIP
        qualifiedName: IMS_Library.ServerProxy.UnbanIP
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IMS_Library.ServerProxy
    commentId: M:IMS_Library.ServerProxy.UnbanIP(System.String)
  IMS_Library.BedrockServer.UnbanIP*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.UnbanIP*
        name: UnbanIP
        nameWithType: BedrockServer.UnbanIP
        qualifiedName: IMS_Library.BedrockServer.UnbanIP
      VB:
      - id: IMS_Library.BedrockServer.UnbanIP*
        name: UnbanIP
        nameWithType: BedrockServer.UnbanIP
        qualifiedName: IMS_Library.BedrockServer.UnbanIP
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.UnbanIP
  IMS_Library.ServerProxy.UnbanPlayer(System.String):
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.UnbanPlayer(System.String)
        name: UnbanPlayer
        nameWithType: ServerProxy.UnbanPlayer
        qualifiedName: IMS_Library.ServerProxy.UnbanPlayer
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.ServerProxy.UnbanPlayer(System.String)
        name: UnbanPlayer
        nameWithType: ServerProxy.UnbanPlayer
        qualifiedName: IMS_Library.ServerProxy.UnbanPlayer
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IMS_Library.ServerProxy
    commentId: M:IMS_Library.ServerProxy.UnbanPlayer(System.String)
  IMS_Library.BedrockServer.UnbanPlayer*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.UnbanPlayer*
        name: UnbanPlayer
        nameWithType: BedrockServer.UnbanPlayer
        qualifiedName: IMS_Library.BedrockServer.UnbanPlayer
      VB:
      - id: IMS_Library.BedrockServer.UnbanPlayer*
        name: UnbanPlayer
        nameWithType: BedrockServer.UnbanPlayer
        qualifiedName: IMS_Library.BedrockServer.UnbanPlayer
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.UnbanPlayer
  IMS_Library.ServerProxy.WhitelistPlayer(System.String):
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.WhitelistPlayer(System.String)
        name: WhitelistPlayer
        nameWithType: ServerProxy.WhitelistPlayer
        qualifiedName: IMS_Library.ServerProxy.WhitelistPlayer
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.ServerProxy.WhitelistPlayer(System.String)
        name: WhitelistPlayer
        nameWithType: ServerProxy.WhitelistPlayer
        qualifiedName: IMS_Library.ServerProxy.WhitelistPlayer
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IMS_Library.ServerProxy
    commentId: M:IMS_Library.ServerProxy.WhitelistPlayer(System.String)
  IMS_Library.BedrockServer.WhitelistPlayer*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.WhitelistPlayer*
        name: WhitelistPlayer
        nameWithType: BedrockServer.WhitelistPlayer
        qualifiedName: IMS_Library.BedrockServer.WhitelistPlayer
      VB:
      - id: IMS_Library.BedrockServer.WhitelistPlayer*
        name: WhitelistPlayer
        nameWithType: BedrockServer.WhitelistPlayer
        qualifiedName: IMS_Library.BedrockServer.WhitelistPlayer
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.WhitelistPlayer
  IMS_Library.BedrockServer.ReloadWhitelistJSON*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.ReloadWhitelistJSON*
        name: ReloadWhitelistJSON
        nameWithType: BedrockServer.ReloadWhitelistJSON
        qualifiedName: IMS_Library.BedrockServer.ReloadWhitelistJSON
      VB:
      - id: IMS_Library.BedrockServer.ReloadWhitelistJSON*
        name: ReloadWhitelistJSON
        nameWithType: BedrockServer.ReloadWhitelistJSON
        qualifiedName: IMS_Library.BedrockServer.ReloadWhitelistJSON
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.ReloadWhitelistJSON
  IMS_Library.BedrockServer.ReloadOpJSON*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.ReloadOpJSON*
        name: ReloadOpJSON
        nameWithType: BedrockServer.ReloadOpJSON
        qualifiedName: IMS_Library.BedrockServer.ReloadOpJSON
      VB:
      - id: IMS_Library.BedrockServer.ReloadOpJSON*
        name: ReloadOpJSON
        nameWithType: BedrockServer.ReloadOpJSON
        qualifiedName: IMS_Library.BedrockServer.ReloadOpJSON
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.ReloadOpJSON
  System.Diagnostics.DataReceivedEventArgs:
    name:
      CSharp:
      - id: System.Diagnostics.DataReceivedEventArgs
        name: DataReceivedEventArgs
        nameWithType: DataReceivedEventArgs
        qualifiedName: System.Diagnostics.DataReceivedEventArgs
        isExternal: true
      VB:
      - id: System.Diagnostics.DataReceivedEventArgs
        name: DataReceivedEventArgs
        nameWithType: DataReceivedEventArgs
        qualifiedName: System.Diagnostics.DataReceivedEventArgs
        isExternal: true
    isDefinition: true
    parent: System.Diagnostics
    commentId: T:System.Diagnostics.DataReceivedEventArgs
  IMS_Library.BedrockServer.OnServerConsoleDataReceived*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.OnServerConsoleDataReceived*
        name: OnServerConsoleDataReceived
        nameWithType: BedrockServer.OnServerConsoleDataReceived
        qualifiedName: IMS_Library.BedrockServer.OnServerConsoleDataReceived
      VB:
      - id: IMS_Library.BedrockServer.OnServerConsoleDataReceived*
        name: OnServerConsoleDataReceived
        nameWithType: BedrockServer.OnServerConsoleDataReceived
        qualifiedName: IMS_Library.BedrockServer.OnServerConsoleDataReceived
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.OnServerConsoleDataReceived
  System.Text.RegularExpressions:
    name:
      CSharp:
      - name: System.Text.RegularExpressions
        nameWithType: System.Text.RegularExpressions
        qualifiedName: System.Text.RegularExpressions
        isExternal: true
      VB:
      - name: System.Text.RegularExpressions
        nameWithType: System.Text.RegularExpressions
        qualifiedName: System.Text.RegularExpressions
    isDefinition: true
    commentId: N:System.Text.RegularExpressions
  System.Text.RegularExpressions.Match:
    name:
      CSharp:
      - id: System.Text.RegularExpressions.Match
        name: Match
        nameWithType: Match
        qualifiedName: System.Text.RegularExpressions.Match
        isExternal: true
      VB:
      - id: System.Text.RegularExpressions.Match
        name: Match
        nameWithType: Match
        qualifiedName: System.Text.RegularExpressions.Match
        isExternal: true
    isDefinition: true
    parent: System.Text.RegularExpressions
    commentId: T:System.Text.RegularExpressions.Match
  IMS_Library.BedrockServer.MatchRegex*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.MatchRegex*
        name: MatchRegex
        nameWithType: BedrockServer.MatchRegex
        qualifiedName: IMS_Library.BedrockServer.MatchRegex
      VB:
      - id: IMS_Library.BedrockServer.MatchRegex*
        name: MatchRegex
        nameWithType: BedrockServer.MatchRegex
        qualifiedName: IMS_Library.BedrockServer.MatchRegex
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.MatchRegex
  IMS_Library.BedrockServer.OnServerProcessDie*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.OnServerProcessDie*
        name: OnServerProcessDie
        nameWithType: BedrockServer.OnServerProcessDie
        qualifiedName: IMS_Library.BedrockServer.OnServerProcessDie
      VB:
      - id: IMS_Library.BedrockServer.OnServerProcessDie*
        name: OnServerProcessDie
        nameWithType: BedrockServer.OnServerProcessDie
        qualifiedName: IMS_Library.BedrockServer.OnServerProcessDie
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.OnServerProcessDie
  IMS_Library.BedrockServer.SendUncheckedConsoleCommand*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer.SendUncheckedConsoleCommand*
        name: SendUncheckedConsoleCommand
        nameWithType: BedrockServer.SendUncheckedConsoleCommand
        qualifiedName: IMS_Library.BedrockServer.SendUncheckedConsoleCommand
      VB:
      - id: IMS_Library.BedrockServer.SendUncheckedConsoleCommand*
        name: SendUncheckedConsoleCommand
        nameWithType: BedrockServer.SendUncheckedConsoleCommand
        qualifiedName: IMS_Library.BedrockServer.SendUncheckedConsoleCommand
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServer.SendUncheckedConsoleCommand
  IMS_Library.BedrockServer:
    name:
      CSharp:
      - id: IMS_Library.BedrockServer
        name: BedrockServer
        nameWithType: BedrockServer
        qualifiedName: IMS_Library.BedrockServer
      VB:
      - id: IMS_Library.BedrockServer
        name: BedrockServer
        nameWithType: BedrockServer
        qualifiedName: IMS_Library.BedrockServer
    isDefinition: true
    commentId: T:IMS_Library.BedrockServer
  IMS_Library.ServerConfiguration.ID:
    name:
      CSharp:
      - id: IMS_Library.ServerConfiguration.ID
        name: ID
        nameWithType: ServerConfiguration.ID
        qualifiedName: IMS_Library.ServerConfiguration.ID
      VB:
      - id: IMS_Library.ServerConfiguration.ID
        name: ID
        nameWithType: ServerConfiguration.ID
        qualifiedName: IMS_Library.ServerConfiguration.ID
    isDefinition: true
    parent: IMS_Library.ServerConfiguration
    commentId: F:IMS_Library.ServerConfiguration.ID
  IMS_Library.ServerConfiguration.ServerName:
    name:
      CSharp:
      - id: IMS_Library.ServerConfiguration.ServerName
        name: ServerName
        nameWithType: ServerConfiguration.ServerName
        qualifiedName: IMS_Library.ServerConfiguration.ServerName
      VB:
      - id: IMS_Library.ServerConfiguration.ServerName
        name: ServerName
        nameWithType: ServerConfiguration.ServerName
        qualifiedName: IMS_Library.ServerConfiguration.ServerName
    isDefinition: true
    parent: IMS_Library.ServerConfiguration
    commentId: F:IMS_Library.ServerConfiguration.ServerName
  IMS_Library.ServerConfiguration.Edition:
    name:
      CSharp:
      - id: IMS_Library.ServerConfiguration.Edition
        name: Edition
        nameWithType: ServerConfiguration.Edition
        qualifiedName: IMS_Library.ServerConfiguration.Edition
      VB:
      - id: IMS_Library.ServerConfiguration.Edition
        name: Edition
        nameWithType: ServerConfiguration.Edition
        qualifiedName: IMS_Library.ServerConfiguration.Edition
    isDefinition: true
    parent: IMS_Library.ServerConfiguration
    commentId: F:IMS_Library.ServerConfiguration.Edition
  IMS_Library.ServerConfiguration.IsEnabled:
    name:
      CSharp:
      - id: IMS_Library.ServerConfiguration.IsEnabled
        name: IsEnabled
        nameWithType: ServerConfiguration.IsEnabled
        qualifiedName: IMS_Library.ServerConfiguration.IsEnabled
      VB:
      - id: IMS_Library.ServerConfiguration.IsEnabled
        name: IsEnabled
        nameWithType: ServerConfiguration.IsEnabled
        qualifiedName: IMS_Library.ServerConfiguration.IsEnabled
    isDefinition: true
    parent: IMS_Library.ServerConfiguration
    commentId: F:IMS_Library.ServerConfiguration.IsEnabled
  IMS_Library.ServerConfiguration.WorldID:
    name:
      CSharp:
      - id: IMS_Library.ServerConfiguration.WorldID
        name: WorldID
        nameWithType: ServerConfiguration.WorldID
        qualifiedName: IMS_Library.ServerConfiguration.WorldID
      VB:
      - id: IMS_Library.ServerConfiguration.WorldID
        name: WorldID
        nameWithType: ServerConfiguration.WorldID
        qualifiedName: IMS_Library.ServerConfiguration.WorldID
    isDefinition: true
    parent: IMS_Library.ServerConfiguration
    commentId: F:IMS_Library.ServerConfiguration.WorldID
  IMS_Library.ServerConfiguration.GetServerFolderLocation:
    name:
      CSharp:
      - id: IMS_Library.ServerConfiguration.GetServerFolderLocation
        name: GetServerFolderLocation
        nameWithType: ServerConfiguration.GetServerFolderLocation
        qualifiedName: IMS_Library.ServerConfiguration.GetServerFolderLocation
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.ServerConfiguration.GetServerFolderLocation
        name: GetServerFolderLocation
        nameWithType: ServerConfiguration.GetServerFolderLocation
        qualifiedName: IMS_Library.ServerConfiguration.GetServerFolderLocation
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IMS_Library.ServerConfiguration
    commentId: M:IMS_Library.ServerConfiguration.GetServerFolderLocation
  IMS_Library.ServerConfiguration.GetDefaultFilePath:
    name:
      CSharp:
      - id: IMS_Library.ServerConfiguration.GetDefaultFilePath
        name: GetDefaultFilePath
        nameWithType: ServerConfiguration.GetDefaultFilePath
        qualifiedName: IMS_Library.ServerConfiguration.GetDefaultFilePath
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.ServerConfiguration.GetDefaultFilePath
        name: GetDefaultFilePath
        nameWithType: ServerConfiguration.GetDefaultFilePath
        qualifiedName: IMS_Library.ServerConfiguration.GetDefaultFilePath
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IMS_Library.ServerConfiguration
    commentId: M:IMS_Library.ServerConfiguration.GetDefaultFilePath
  IMS_Library.BedrockServerConfiguration.IMS_Library.IMSConfigurationUtility.FromConfiguration``1:
    name:
      CSharp:
      - id: IMS_Library.IMSConfigurationUtility.FromConfiguration``1
        name: FromConfiguration<BedrockServerConfiguration>
        nameWithType: IMSConfigurationUtility.FromConfiguration<BedrockServerConfiguration>
        qualifiedName: IMS_Library.IMSConfigurationUtility.FromConfiguration<IMS_Library.BedrockServerConfiguration>
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.IMSConfigurationUtility.FromConfiguration``1
        name: FromConfiguration(Of BedrockServerConfiguration)
        nameWithType: IMSConfigurationUtility.FromConfiguration(Of BedrockServerConfiguration)
        qualifiedName: IMS_Library.IMSConfigurationUtility.FromConfiguration(Of IMS_Library.BedrockServerConfiguration)
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: IMS_Library.IMSConfigurationUtility.FromConfiguration``1(``0)
    parent: IMS_Library.IMSConfigurationUtility
    commentId: M:IMS_Library.IMSConfigurationUtility.FromConfiguration``1(``0)
  IMS_Library.BedrockServerConfiguration.IMS_Library.IMSConfigurationUtility.SaveConfiguration``1:
    name:
      CSharp:
      - id: IMS_Library.IMSConfigurationUtility.SaveConfiguration``1
        name: SaveConfiguration<BedrockServerConfiguration>
        nameWithType: IMSConfigurationUtility.SaveConfiguration<BedrockServerConfiguration>
        qualifiedName: IMS_Library.IMSConfigurationUtility.SaveConfiguration<IMS_Library.BedrockServerConfiguration>
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.IMSConfigurationUtility.SaveConfiguration``1
        name: SaveConfiguration(Of BedrockServerConfiguration)
        nameWithType: IMSConfigurationUtility.SaveConfiguration(Of BedrockServerConfiguration)
        qualifiedName: IMS_Library.IMSConfigurationUtility.SaveConfiguration(Of IMS_Library.BedrockServerConfiguration)
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: IMS_Library.IMSConfigurationUtility.SaveConfiguration``1(``0)
    parent: IMS_Library.IMSConfigurationUtility
    commentId: M:IMS_Library.IMSConfigurationUtility.SaveConfiguration``1(``0)
  IMS_Library.ServerProperty:
    name:
      CSharp:
      - id: IMS_Library.ServerProperty
        name: ServerProperty
        nameWithType: ServerProperty
        qualifiedName: IMS_Library.ServerProperty
      VB:
      - id: IMS_Library.ServerProperty
        name: ServerProperty
        nameWithType: ServerProperty
        qualifiedName: IMS_Library.ServerProperty
    isDefinition: true
    parent: IMS_Library
    commentId: T:IMS_Library.ServerProperty
  IMS_Library.ServerProperty.#ctor(System.String):
    name:
      CSharp:
      - id: IMS_Library.ServerProperty.#ctor(System.String)
        name: ServerProperty
        nameWithType: ServerProperty.ServerProperty
        qualifiedName: IMS_Library.ServerProperty.ServerProperty
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.ServerProperty.#ctor(System.String)
        name: ServerProperty
        nameWithType: ServerProperty.ServerProperty
        qualifiedName: IMS_Library.ServerProperty.ServerProperty
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IMS_Library.ServerProperty
    commentId: M:IMS_Library.ServerProperty.#ctor(System.String)
  IMS_Library.BedrockServerConfiguration.#ctor*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServerConfiguration.#ctor*
        name: BedrockServerConfiguration
        nameWithType: BedrockServerConfiguration.BedrockServerConfiguration
        qualifiedName: IMS_Library.BedrockServerConfiguration.BedrockServerConfiguration
      VB:
      - id: IMS_Library.BedrockServerConfiguration.#ctor*
        name: BedrockServerConfiguration
        nameWithType: BedrockServerConfiguration.BedrockServerConfiguration
        qualifiedName: IMS_Library.BedrockServerConfiguration.BedrockServerConfiguration
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServerConfiguration.#ctor
  System.Int32[]:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  IMS_Library.ServerConfiguration.GetUsedPorts:
    name:
      CSharp:
      - id: IMS_Library.ServerConfiguration.GetUsedPorts
        name: GetUsedPorts
        nameWithType: ServerConfiguration.GetUsedPorts
        qualifiedName: IMS_Library.ServerConfiguration.GetUsedPorts
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.ServerConfiguration.GetUsedPorts
        name: GetUsedPorts
        nameWithType: ServerConfiguration.GetUsedPorts
        qualifiedName: IMS_Library.ServerConfiguration.GetUsedPorts
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IMS_Library.ServerConfiguration
    commentId: M:IMS_Library.ServerConfiguration.GetUsedPorts
  IMS_Library.BedrockServerConfiguration.GetUsedPorts*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServerConfiguration.GetUsedPorts*
        name: GetUsedPorts
        nameWithType: BedrockServerConfiguration.GetUsedPorts
        qualifiedName: IMS_Library.BedrockServerConfiguration.GetUsedPorts
      VB:
      - id: IMS_Library.BedrockServerConfiguration.GetUsedPorts*
        name: GetUsedPorts
        nameWithType: BedrockServerConfiguration.GetUsedPorts
        qualifiedName: IMS_Library.BedrockServerConfiguration.GetUsedPorts
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServerConfiguration.GetUsedPorts
  IMS_Library.ServerConfiguration.GetPortsToForward:
    name:
      CSharp:
      - id: IMS_Library.ServerConfiguration.GetPortsToForward
        name: GetPortsToForward
        nameWithType: ServerConfiguration.GetPortsToForward
        qualifiedName: IMS_Library.ServerConfiguration.GetPortsToForward
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.ServerConfiguration.GetPortsToForward
        name: GetPortsToForward
        nameWithType: ServerConfiguration.GetPortsToForward
        qualifiedName: IMS_Library.ServerConfiguration.GetPortsToForward
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IMS_Library.ServerConfiguration
    commentId: M:IMS_Library.ServerConfiguration.GetPortsToForward
  IMS_Library.BedrockServerConfiguration.GetPortsToForward*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServerConfiguration.GetPortsToForward*
        name: GetPortsToForward
        nameWithType: BedrockServerConfiguration.GetPortsToForward
        qualifiedName: IMS_Library.BedrockServerConfiguration.GetPortsToForward
      VB:
      - id: IMS_Library.BedrockServerConfiguration.GetPortsToForward*
        name: GetPortsToForward
        nameWithType: BedrockServerConfiguration.GetPortsToForward
        qualifiedName: IMS_Library.BedrockServerConfiguration.GetPortsToForward
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServerConfiguration.GetPortsToForward
  IMS_Library.ServerConfiguration.CreateServer:
    name:
      CSharp:
      - id: IMS_Library.ServerConfiguration.CreateServer
        name: CreateServer
        nameWithType: ServerConfiguration.CreateServer
        qualifiedName: IMS_Library.ServerConfiguration.CreateServer
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.ServerConfiguration.CreateServer
        name: CreateServer
        nameWithType: ServerConfiguration.CreateServer
        qualifiedName: IMS_Library.ServerConfiguration.CreateServer
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IMS_Library.ServerConfiguration
    commentId: M:IMS_Library.ServerConfiguration.CreateServer
  IMS_Library.BedrockServerConfiguration.CreateServer*:
    name:
      CSharp:
      - id: IMS_Library.BedrockServerConfiguration.CreateServer*
        name: CreateServer
        nameWithType: BedrockServerConfiguration.CreateServer
        qualifiedName: IMS_Library.BedrockServerConfiguration.CreateServer
      VB:
      - id: IMS_Library.BedrockServerConfiguration.CreateServer*
        name: CreateServer
        nameWithType: BedrockServerConfiguration.CreateServer
        qualifiedName: IMS_Library.BedrockServerConfiguration.CreateServer
    isDefinition: true
    commentId: Overload:IMS_Library.BedrockServerConfiguration.CreateServer
  IMS_Library.ServerProperty.PropertyName:
    name:
      CSharp:
      - id: IMS_Library.ServerProperty.PropertyName
        name: PropertyName
        nameWithType: ServerProperty.PropertyName
        qualifiedName: IMS_Library.ServerProperty.PropertyName
      VB:
      - id: IMS_Library.ServerProperty.PropertyName
        name: PropertyName
        nameWithType: ServerProperty.PropertyName
        qualifiedName: IMS_Library.ServerProperty.PropertyName
    isDefinition: true
    parent: IMS_Library.ServerProperty
    commentId: F:IMS_Library.ServerProperty.PropertyName
  System.Attribute:
    name:
      CSharp:
      - id: System.Attribute
        name: Attribute
        nameWithType: Attribute
        qualifiedName: System.Attribute
        isExternal: true
      VB:
      - id: System.Attribute
        name: Attribute
        nameWithType: Attribute
        qualifiedName: System.Attribute
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Attribute
  System.Attribute.Equals(System.Object):
    name:
      CSharp:
      - id: System.Attribute.Equals(System.Object)
        name: Equals
        nameWithType: Attribute.Equals
        qualifiedName: System.Attribute.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.Equals(System.Object)
        name: Equals
        nameWithType: Attribute.Equals
        qualifiedName: System.Attribute.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.Equals(System.Object)
  System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  System.Attribute.GetCustomAttributes(System.Reflection.Assembly):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  System.Attribute.GetCustomAttributes(System.Reflection.Module):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Module)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Module)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Module)
  System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  System.Attribute.GetHashCode:
    name:
      CSharp:
      - id: System.Attribute.GetHashCode
        name: GetHashCode
        nameWithType: Attribute.GetHashCode
        qualifiedName: System.Attribute.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetHashCode
        name: GetHashCode
        nameWithType: Attribute.GetHashCode
        qualifiedName: System.Attribute.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetHashCode
  System.Attribute.IsDefaultAttribute:
    name:
      CSharp:
      - id: System.Attribute.IsDefaultAttribute
        name: IsDefaultAttribute
        nameWithType: Attribute.IsDefaultAttribute
        qualifiedName: System.Attribute.IsDefaultAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.IsDefaultAttribute
        name: IsDefaultAttribute
        nameWithType: Attribute.IsDefaultAttribute
        qualifiedName: System.Attribute.IsDefaultAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.IsDefaultAttribute
  System.Attribute.IsDefined(System.Reflection.Assembly,System.Type):
    name:
      CSharp:
      - id: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type):
    name:
      CSharp:
      - id: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  System.Attribute.IsDefined(System.Reflection.Module,System.Type):
    name:
      CSharp:
      - id: System.Attribute.IsDefined(System.Reflection.Module,System.Type)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.IsDefined(System.Reflection.Module,System.Type)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type):
    name:
      CSharp:
      - id: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  System.Attribute.Match(System.Object):
    name:
      CSharp:
      - id: System.Attribute.Match(System.Object)
        name: Match
        nameWithType: Attribute.Match
        qualifiedName: System.Attribute.Match
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.Match(System.Object)
        name: Match
        nameWithType: Attribute.Match
        qualifiedName: System.Attribute.Match
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.Match(System.Object)
  System.Attribute.TypeId:
    name:
      CSharp:
      - id: System.Attribute.TypeId
        name: TypeId
        nameWithType: Attribute.TypeId
        qualifiedName: System.Attribute.TypeId
        isExternal: true
      VB:
      - id: System.Attribute.TypeId
        name: TypeId
        nameWithType: Attribute.TypeId
        qualifiedName: System.Attribute.TypeId
        isExternal: true
    isDefinition: true
    parent: System.Attribute
    commentId: P:System.Attribute.TypeId
  IMS_Library.MOTDServerProperty:
    name:
      CSharp:
      - id: IMS_Library.MOTDServerProperty
        name: MOTDServerProperty
        nameWithType: MOTDServerProperty
        qualifiedName: IMS_Library.MOTDServerProperty
      VB:
      - id: IMS_Library.MOTDServerProperty
        name: MOTDServerProperty
        nameWithType: MOTDServerProperty
        qualifiedName: IMS_Library.MOTDServerProperty
    isDefinition: true
    parent: IMS_Library
    commentId: T:IMS_Library.MOTDServerProperty
  IMS_Library.MOTDServerProperty.#ctor*:
    name:
      CSharp:
      - id: IMS_Library.MOTDServerProperty.#ctor*
        name: MOTDServerProperty
        nameWithType: MOTDServerProperty.MOTDServerProperty
        qualifiedName: IMS_Library.MOTDServerProperty.MOTDServerProperty
      VB:
      - id: IMS_Library.MOTDServerProperty.#ctor*
        name: MOTDServerProperty
        nameWithType: MOTDServerProperty.MOTDServerProperty
        qualifiedName: IMS_Library.MOTDServerProperty.MOTDServerProperty
    isDefinition: true
    commentId: Overload:IMS_Library.MOTDServerProperty.#ctor
  System.Reflection:
    name:
      CSharp:
      - name: System.Reflection
        nameWithType: System.Reflection
        qualifiedName: System.Reflection
        isExternal: true
      VB:
      - name: System.Reflection
        nameWithType: System.Reflection
        qualifiedName: System.Reflection
    isDefinition: true
    commentId: N:System.Reflection
  System.Reflection.FieldInfo:
    name:
      CSharp:
      - id: System.Reflection.FieldInfo
        name: FieldInfo
        nameWithType: FieldInfo
        qualifiedName: System.Reflection.FieldInfo
        isExternal: true
      VB:
      - id: System.Reflection.FieldInfo
        name: FieldInfo
        nameWithType: FieldInfo
        qualifiedName: System.Reflection.FieldInfo
        isExternal: true
    isDefinition: true
    parent: System.Reflection
    commentId: T:System.Reflection.FieldInfo
  IMS_Library.ServerProperty.GetData(IMS_Library.ServerConfiguration,System.Reflection.FieldInfo):
    name:
      CSharp:
      - id: IMS_Library.ServerProperty.GetData(IMS_Library.ServerConfiguration,System.Reflection.FieldInfo)
        name: GetData
        nameWithType: ServerProperty.GetData
        qualifiedName: IMS_Library.ServerProperty.GetData
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: IMS_Library.ServerConfiguration
        name: ServerConfiguration
        nameWithType: ServerConfiguration
        qualifiedName: IMS_Library.ServerConfiguration
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Reflection.FieldInfo
        name: FieldInfo
        nameWithType: FieldInfo
        qualifiedName: System.Reflection.FieldInfo
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.ServerProperty.GetData(IMS_Library.ServerConfiguration,System.Reflection.FieldInfo)
        name: GetData
        nameWithType: ServerProperty.GetData
        qualifiedName: IMS_Library.ServerProperty.GetData
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: IMS_Library.ServerConfiguration
        name: ServerConfiguration
        nameWithType: ServerConfiguration
        qualifiedName: IMS_Library.ServerConfiguration
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Reflection.FieldInfo
        name: FieldInfo
        nameWithType: FieldInfo
        qualifiedName: System.Reflection.FieldInfo
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IMS_Library.ServerProperty
    commentId: M:IMS_Library.ServerProperty.GetData(IMS_Library.ServerConfiguration,System.Reflection.FieldInfo)
  IMS_Library.MOTDServerProperty.GetData*:
    name:
      CSharp:
      - id: IMS_Library.MOTDServerProperty.GetData*
        name: GetData
        nameWithType: MOTDServerProperty.GetData
        qualifiedName: IMS_Library.MOTDServerProperty.GetData
      VB:
      - id: IMS_Library.MOTDServerProperty.GetData*
        name: GetData
        nameWithType: MOTDServerProperty.GetData
        qualifiedName: IMS_Library.MOTDServerProperty.GetData
    isDefinition: true
    commentId: Overload:IMS_Library.MOTDServerProperty.GetData
  System.AttributeUsageAttribute:
    name:
      CSharp:
      - id: System.AttributeUsageAttribute
        name: AttributeUsageAttribute
        nameWithType: AttributeUsageAttribute
        qualifiedName: System.AttributeUsageAttribute
        isExternal: true
      VB:
      - id: System.AttributeUsageAttribute
        name: AttributeUsageAttribute
        nameWithType: AttributeUsageAttribute
        qualifiedName: System.AttributeUsageAttribute
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.AttributeUsageAttribute
  System.AttributeUsageAttribute.#ctor(System.AttributeTargets):
    name:
      CSharp:
      - id: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
        name: AttributeUsageAttribute
        nameWithType: AttributeUsageAttribute.AttributeUsageAttribute
        qualifiedName: System.AttributeUsageAttribute.AttributeUsageAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.AttributeTargets
        name: AttributeTargets
        nameWithType: AttributeTargets
        qualifiedName: System.AttributeTargets
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
        name: AttributeUsageAttribute
        nameWithType: AttributeUsageAttribute.AttributeUsageAttribute
        qualifiedName: System.AttributeUsageAttribute.AttributeUsageAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.AttributeTargets
        name: AttributeTargets
        nameWithType: AttributeTargets
        qualifiedName: System.AttributeTargets
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.AttributeUsageAttribute
    commentId: M:System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
  System.AttributeTargets:
    name:
      CSharp:
      - id: System.AttributeTargets
        name: AttributeTargets
        nameWithType: AttributeTargets
        qualifiedName: System.AttributeTargets
        isExternal: true
      VB:
      - id: System.AttributeTargets
        name: AttributeTargets
        nameWithType: AttributeTargets
        qualifiedName: System.AttributeTargets
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.AttributeTargets
  IMS_Library.JavaServerConfiguration:
    name:
      CSharp:
      - id: IMS_Library.JavaServerConfiguration
        name: JavaServerConfiguration
        nameWithType: JavaServerConfiguration
        qualifiedName: IMS_Library.JavaServerConfiguration
      VB:
      - id: IMS_Library.JavaServerConfiguration
        name: JavaServerConfiguration
        nameWithType: JavaServerConfiguration
        qualifiedName: IMS_Library.JavaServerConfiguration
    isDefinition: true
    parent: IMS_Library
    commentId: T:IMS_Library.JavaServerConfiguration
  IMS_Library.JavaServer.CurrentConfiguration*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.CurrentConfiguration*
        name: CurrentConfiguration
        nameWithType: JavaServer.CurrentConfiguration
        qualifiedName: IMS_Library.JavaServer.CurrentConfiguration
      VB:
      - id: IMS_Library.JavaServer.CurrentConfiguration*
        name: CurrentConfiguration
        nameWithType: JavaServer.CurrentConfiguration
        qualifiedName: IMS_Library.JavaServer.CurrentConfiguration
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.CurrentConfiguration
  IMS_Library.JavaServer.SupportsWhitelist*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.SupportsWhitelist*
        name: SupportsWhitelist
        nameWithType: JavaServer.SupportsWhitelist
        qualifiedName: IMS_Library.JavaServer.SupportsWhitelist
      VB:
      - id: IMS_Library.JavaServer.SupportsWhitelist*
        name: SupportsWhitelist
        nameWithType: JavaServer.SupportsWhitelist
        qualifiedName: IMS_Library.JavaServer.SupportsWhitelist
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.SupportsWhitelist
  IMS_Library.JavaServer.WhitelistEnabled*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.WhitelistEnabled*
        name: WhitelistEnabled
        nameWithType: JavaServer.WhitelistEnabled
        qualifiedName: IMS_Library.JavaServer.WhitelistEnabled
      VB:
      - id: IMS_Library.JavaServer.WhitelistEnabled*
        name: WhitelistEnabled
        nameWithType: JavaServer.WhitelistEnabled
        qualifiedName: IMS_Library.JavaServer.WhitelistEnabled
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.WhitelistEnabled
  IMS_Library.JavaServer.SupportsBanning*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.SupportsBanning*
        name: SupportsBanning
        nameWithType: JavaServer.SupportsBanning
        qualifiedName: IMS_Library.JavaServer.SupportsBanning
      VB:
      - id: IMS_Library.JavaServer.SupportsBanning*
        name: SupportsBanning
        nameWithType: JavaServer.SupportsBanning
        qualifiedName: IMS_Library.JavaServer.SupportsBanning
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.SupportsBanning
  IMS_Library.JavaServer.SupportsBanningIPs*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.SupportsBanningIPs*
        name: SupportsBanningIPs
        nameWithType: JavaServer.SupportsBanningIPs
        qualifiedName: IMS_Library.JavaServer.SupportsBanningIPs
      VB:
      - id: IMS_Library.JavaServer.SupportsBanningIPs*
        name: SupportsBanningIPs
        nameWithType: JavaServer.SupportsBanningIPs
        qualifiedName: IMS_Library.JavaServer.SupportsBanningIPs
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.SupportsBanningIPs
  IMS_Library.JavaServer.SupportsOps*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.SupportsOps*
        name: SupportsOps
        nameWithType: JavaServer.SupportsOps
        qualifiedName: IMS_Library.JavaServer.SupportsOps
      VB:
      - id: IMS_Library.JavaServer.SupportsOps*
        name: SupportsOps
        nameWithType: JavaServer.SupportsOps
        qualifiedName: IMS_Library.JavaServer.SupportsOps
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.SupportsOps
  IMS_Library.JavaServer.SupportsIPs*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.SupportsIPs*
        name: SupportsIPs
        nameWithType: JavaServer.SupportsIPs
        qualifiedName: IMS_Library.JavaServer.SupportsIPs
      VB:
      - id: IMS_Library.JavaServer.SupportsIPs*
        name: SupportsIPs
        nameWithType: JavaServer.SupportsIPs
        qualifiedName: IMS_Library.JavaServer.SupportsIPs
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.SupportsIPs
  IMS_Library.JavaServer.SupportsKicking*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.SupportsKicking*
        name: SupportsKicking
        nameWithType: JavaServer.SupportsKicking
        qualifiedName: IMS_Library.JavaServer.SupportsKicking
      VB:
      - id: IMS_Library.JavaServer.SupportsKicking*
        name: SupportsKicking
        nameWithType: JavaServer.SupportsKicking
        qualifiedName: IMS_Library.JavaServer.SupportsKicking
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.SupportsKicking
  IMS_Library.JavaServer.SupportedEdition*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.SupportedEdition*
        name: SupportedEdition
        nameWithType: JavaServer.SupportedEdition
        qualifiedName: IMS_Library.JavaServer.SupportedEdition
      VB:
      - id: IMS_Library.JavaServer.SupportedEdition*
        name: SupportedEdition
        nameWithType: JavaServer.SupportedEdition
        qualifiedName: IMS_Library.JavaServer.SupportedEdition
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.SupportedEdition
  System.Collections.Generic.List{IMS_Library.OpTag}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: IMS_Library.OpTag
        name: OpTag
        nameWithType: OpTag
        qualifiedName: IMS_Library.OpTag
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: IMS_Library.OpTag
        name: OpTag
        nameWithType: OpTag
        qualifiedName: IMS_Library.OpTag
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{IMS_Library.OpTag}
  System.Collections.Generic.Dictionary{System.String,IMS_Library.BanIPTag}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: IMS_Library.BanIPTag
        name: BanIPTag
        nameWithType: BanIPTag
        qualifiedName: IMS_Library.BanIPTag
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: IMS_Library.BanIPTag
        name: BanIPTag
        nameWithType: BanIPTag
        qualifiedName: IMS_Library.BanIPTag
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{System.String,IMS_Library.BanIPTag}
  System.Collections.Generic.List{IMS_Library.WhitelistTag}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: IMS_Library.WhitelistTag
        name: WhitelistTag
        nameWithType: WhitelistTag
        qualifiedName: IMS_Library.WhitelistTag
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: IMS_Library.WhitelistTag
        name: WhitelistTag
        nameWithType: WhitelistTag
        qualifiedName: IMS_Library.WhitelistTag
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{IMS_Library.WhitelistTag}
  System.Runtime.Caching:
    name:
      CSharp:
      - name: System.Runtime.Caching
        nameWithType: System.Runtime.Caching
        qualifiedName: System.Runtime.Caching
        isExternal: true
      VB:
      - name: System.Runtime.Caching
        nameWithType: System.Runtime.Caching
        qualifiedName: System.Runtime.Caching
    isDefinition: true
    commentId: N:System.Runtime.Caching
  System.Runtime.Caching.MemoryCache:
    name:
      CSharp:
      - id: System.Runtime.Caching.MemoryCache
        name: MemoryCache
        nameWithType: MemoryCache
        qualifiedName: System.Runtime.Caching.MemoryCache
        isExternal: true
      VB:
      - id: System.Runtime.Caching.MemoryCache
        name: MemoryCache
        nameWithType: MemoryCache
        qualifiedName: System.Runtime.Caching.MemoryCache
        isExternal: true
    isDefinition: true
    parent: System.Runtime.Caching
    commentId: T:System.Runtime.Caching.MemoryCache
  IMS_Library.JavaServer.WorldLocation*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.WorldLocation*
        name: WorldLocation
        nameWithType: JavaServer.WorldLocation
        qualifiedName: IMS_Library.JavaServer.WorldLocation
      VB:
      - id: IMS_Library.JavaServer.WorldLocation*
        name: WorldLocation
        nameWithType: JavaServer.WorldLocation
        qualifiedName: IMS_Library.JavaServer.WorldLocation
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.WorldLocation
  IMS_Library.JavaServer.#ctor*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.#ctor*
        name: JavaServer
        nameWithType: JavaServer.JavaServer
        qualifiedName: IMS_Library.JavaServer.JavaServer
      VB:
      - id: IMS_Library.JavaServer.#ctor*
        name: JavaServer
        nameWithType: JavaServer.JavaServer
        qualifiedName: IMS_Library.JavaServer.JavaServer
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.#ctor
  IMS_Library.JavaServer.KickPlayer*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.KickPlayer*
        name: KickPlayer
        nameWithType: JavaServer.KickPlayer
        qualifiedName: IMS_Library.JavaServer.KickPlayer
      VB:
      - id: IMS_Library.JavaServer.KickPlayer*
        name: KickPlayer
        nameWithType: JavaServer.KickPlayer
        qualifiedName: IMS_Library.JavaServer.KickPlayer
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.KickPlayer
  IMS_Library.JavaServer.GetOnlinePlayers*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.GetOnlinePlayers*
        name: GetOnlinePlayers
        nameWithType: JavaServer.GetOnlinePlayers
        qualifiedName: IMS_Library.JavaServer.GetOnlinePlayers
      VB:
      - id: IMS_Library.JavaServer.GetOnlinePlayers*
        name: GetOnlinePlayers
        nameWithType: JavaServer.GetOnlinePlayers
        qualifiedName: IMS_Library.JavaServer.GetOnlinePlayers
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.GetOnlinePlayers
  IMS_Library.JavaServer.GetConsoleText*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.GetConsoleText*
        name: GetConsoleText
        nameWithType: JavaServer.GetConsoleText
        qualifiedName: IMS_Library.JavaServer.GetConsoleText
      VB:
      - id: IMS_Library.JavaServer.GetConsoleText*
        name: GetConsoleText
        nameWithType: JavaServer.GetConsoleText
        qualifiedName: IMS_Library.JavaServer.GetConsoleText
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.GetConsoleText
  IMS_Library.JavaServer.OnServerProcessDie*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.OnServerProcessDie*
        name: OnServerProcessDie
        nameWithType: JavaServer.OnServerProcessDie
        qualifiedName: IMS_Library.JavaServer.OnServerProcessDie
      VB:
      - id: IMS_Library.JavaServer.OnServerProcessDie*
        name: OnServerProcessDie
        nameWithType: JavaServer.OnServerProcessDie
        qualifiedName: IMS_Library.JavaServer.OnServerProcessDie
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.OnServerProcessDie
  IMS_Library.JavaServer.OpPlayer*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.OpPlayer*
        name: OpPlayer
        nameWithType: JavaServer.OpPlayer
        qualifiedName: IMS_Library.JavaServer.OpPlayer
      VB:
      - id: IMS_Library.JavaServer.OpPlayer*
        name: OpPlayer
        nameWithType: JavaServer.OpPlayer
        qualifiedName: IMS_Library.JavaServer.OpPlayer
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.OpPlayer
  IMS_Library.JavaServer.BackupToLocationAsync*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.BackupToLocationAsync*
        name: BackupToLocationAsync
        nameWithType: JavaServer.BackupToLocationAsync
        qualifiedName: IMS_Library.JavaServer.BackupToLocationAsync
      VB:
      - id: IMS_Library.JavaServer.BackupToLocationAsync*
        name: BackupToLocationAsync
        nameWithType: JavaServer.BackupToLocationAsync
        qualifiedName: IMS_Library.JavaServer.BackupToLocationAsync
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.BackupToLocationAsync
  IMS_Library.JavaServer.BackupToZipFileAsync*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.BackupToZipFileAsync*
        name: BackupToZipFileAsync
        nameWithType: JavaServer.BackupToZipFileAsync
        qualifiedName: IMS_Library.JavaServer.BackupToZipFileAsync
      VB:
      - id: IMS_Library.JavaServer.BackupToZipFileAsync*
        name: BackupToZipFileAsync
        nameWithType: JavaServer.BackupToZipFileAsync
        qualifiedName: IMS_Library.JavaServer.BackupToZipFileAsync
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.BackupToZipFileAsync
  IMS_Library.JavaServer.RestartAsync*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.RestartAsync*
        name: RestartAsync
        nameWithType: JavaServer.RestartAsync
        qualifiedName: IMS_Library.JavaServer.RestartAsync
      VB:
      - id: IMS_Library.JavaServer.RestartAsync*
        name: RestartAsync
        nameWithType: JavaServer.RestartAsync
        qualifiedName: IMS_Library.JavaServer.RestartAsync
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.RestartAsync
  IMS_Library.JavaServer.SendConsoleCommand*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.SendConsoleCommand*
        name: SendConsoleCommand
        nameWithType: JavaServer.SendConsoleCommand
        qualifiedName: IMS_Library.JavaServer.SendConsoleCommand
      VB:
      - id: IMS_Library.JavaServer.SendConsoleCommand*
        name: SendConsoleCommand
        nameWithType: JavaServer.SendConsoleCommand
        qualifiedName: IMS_Library.JavaServer.SendConsoleCommand
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.SendConsoleCommand
  IMS_Library.JavaServer.SendUncheckedConsoleCommand*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.SendUncheckedConsoleCommand*
        name: SendUncheckedConsoleCommand
        nameWithType: JavaServer.SendUncheckedConsoleCommand
        qualifiedName: IMS_Library.JavaServer.SendUncheckedConsoleCommand
      VB:
      - id: IMS_Library.JavaServer.SendUncheckedConsoleCommand*
        name: SendUncheckedConsoleCommand
        nameWithType: JavaServer.SendUncheckedConsoleCommand
        qualifiedName: IMS_Library.JavaServer.SendUncheckedConsoleCommand
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.SendUncheckedConsoleCommand
  IMS_Library.JavaServer.ReloadWhitelistJSON*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.ReloadWhitelistJSON*
        name: ReloadWhitelistJSON
        nameWithType: JavaServer.ReloadWhitelistJSON
        qualifiedName: IMS_Library.JavaServer.ReloadWhitelistJSON
      VB:
      - id: IMS_Library.JavaServer.ReloadWhitelistJSON*
        name: ReloadWhitelistJSON
        nameWithType: JavaServer.ReloadWhitelistJSON
        qualifiedName: IMS_Library.JavaServer.ReloadWhitelistJSON
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.ReloadWhitelistJSON
  IMS_Library.JavaServer.AddPlayerToAllPlayersList*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.AddPlayerToAllPlayersList*
        name: AddPlayerToAllPlayersList
        nameWithType: JavaServer.AddPlayerToAllPlayersList
        qualifiedName: IMS_Library.JavaServer.AddPlayerToAllPlayersList
      VB:
      - id: IMS_Library.JavaServer.AddPlayerToAllPlayersList*
        name: AddPlayerToAllPlayersList
        nameWithType: JavaServer.AddPlayerToAllPlayersList
        qualifiedName: IMS_Library.JavaServer.AddPlayerToAllPlayersList
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.AddPlayerToAllPlayersList
  IMS_Library.JavaServer.ReloadOpJSON*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.ReloadOpJSON*
        name: ReloadOpJSON
        nameWithType: JavaServer.ReloadOpJSON
        qualifiedName: IMS_Library.JavaServer.ReloadOpJSON
      VB:
      - id: IMS_Library.JavaServer.ReloadOpJSON*
        name: ReloadOpJSON
        nameWithType: JavaServer.ReloadOpJSON
        qualifiedName: IMS_Library.JavaServer.ReloadOpJSON
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.ReloadOpJSON
  IMS_Library.JavaServer.GetPlayerByIdentifier*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.GetPlayerByIdentifier*
        name: GetPlayerByIdentifier
        nameWithType: JavaServer.GetPlayerByIdentifier
        qualifiedName: IMS_Library.JavaServer.GetPlayerByIdentifier
      VB:
      - id: IMS_Library.JavaServer.GetPlayerByIdentifier*
        name: GetPlayerByIdentifier
        nameWithType: JavaServer.GetPlayerByIdentifier
        qualifiedName: IMS_Library.JavaServer.GetPlayerByIdentifier
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.GetPlayerByIdentifier
  IMS_Library.JavaServer.GetPlayerOrDefaultByIdentifier*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.GetPlayerOrDefaultByIdentifier*
        name: GetPlayerOrDefaultByIdentifier
        nameWithType: JavaServer.GetPlayerOrDefaultByIdentifier
        qualifiedName: IMS_Library.JavaServer.GetPlayerOrDefaultByIdentifier
      VB:
      - id: IMS_Library.JavaServer.GetPlayerOrDefaultByIdentifier*
        name: GetPlayerOrDefaultByIdentifier
        nameWithType: JavaServer.GetPlayerOrDefaultByIdentifier
        qualifiedName: IMS_Library.JavaServer.GetPlayerOrDefaultByIdentifier
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.GetPlayerOrDefaultByIdentifier
  IMS_Library.JavaServer.ReloadBanJSON*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.ReloadBanJSON*
        name: ReloadBanJSON
        nameWithType: JavaServer.ReloadBanJSON
        qualifiedName: IMS_Library.JavaServer.ReloadBanJSON
      VB:
      - id: IMS_Library.JavaServer.ReloadBanJSON*
        name: ReloadBanJSON
        nameWithType: JavaServer.ReloadBanJSON
        qualifiedName: IMS_Library.JavaServer.ReloadBanJSON
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.ReloadBanJSON
  IMS_Library.JavaServer.ReloadBanIPJSON*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.ReloadBanIPJSON*
        name: ReloadBanIPJSON
        nameWithType: JavaServer.ReloadBanIPJSON
        qualifiedName: IMS_Library.JavaServer.ReloadBanIPJSON
      VB:
      - id: IMS_Library.JavaServer.ReloadBanIPJSON*
        name: ReloadBanIPJSON
        nameWithType: JavaServer.ReloadBanIPJSON
        qualifiedName: IMS_Library.JavaServer.ReloadBanIPJSON
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.ReloadBanIPJSON
  IMS_Library.JavaServer.GetOperatorStatusOfPlayerByUUID*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.GetOperatorStatusOfPlayerByUUID*
        name: GetOperatorStatusOfPlayerByUUID
        nameWithType: JavaServer.GetOperatorStatusOfPlayerByUUID
        qualifiedName: IMS_Library.JavaServer.GetOperatorStatusOfPlayerByUUID
      VB:
      - id: IMS_Library.JavaServer.GetOperatorStatusOfPlayerByUUID*
        name: GetOperatorStatusOfPlayerByUUID
        nameWithType: JavaServer.GetOperatorStatusOfPlayerByUUID
        qualifiedName: IMS_Library.JavaServer.GetOperatorStatusOfPlayerByUUID
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.GetOperatorStatusOfPlayerByUUID
  IMS_Library.JavaServer.StartAsync*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.StartAsync*
        name: StartAsync
        nameWithType: JavaServer.StartAsync
        qualifiedName: IMS_Library.JavaServer.StartAsync
      VB:
      - id: IMS_Library.JavaServer.StartAsync*
        name: StartAsync
        nameWithType: JavaServer.StartAsync
        qualifiedName: IMS_Library.JavaServer.StartAsync
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.StartAsync
  IMS_Library.JavaServer.OnServerConsoleDataReceived*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.OnServerConsoleDataReceived*
        name: OnServerConsoleDataReceived
        nameWithType: JavaServer.OnServerConsoleDataReceived
        qualifiedName: IMS_Library.JavaServer.OnServerConsoleDataReceived
      VB:
      - id: IMS_Library.JavaServer.OnServerConsoleDataReceived*
        name: OnServerConsoleDataReceived
        nameWithType: JavaServer.OnServerConsoleDataReceived
        qualifiedName: IMS_Library.JavaServer.OnServerConsoleDataReceived
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.OnServerConsoleDataReceived
  IMS_Library.JavaServer.StopAsync*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.StopAsync*
        name: StopAsync
        nameWithType: JavaServer.StopAsync
        qualifiedName: IMS_Library.JavaServer.StopAsync
      VB:
      - id: IMS_Library.JavaServer.StopAsync*
        name: StopAsync
        nameWithType: JavaServer.StopAsync
        qualifiedName: IMS_Library.JavaServer.StopAsync
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.StopAsync
  IMS_Library.JavaServer.BanPlayer*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.BanPlayer*
        name: BanPlayer
        nameWithType: JavaServer.BanPlayer
        qualifiedName: IMS_Library.JavaServer.BanPlayer
      VB:
      - id: IMS_Library.JavaServer.BanPlayer*
        name: BanPlayer
        nameWithType: JavaServer.BanPlayer
        qualifiedName: IMS_Library.JavaServer.BanPlayer
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.BanPlayer
  IMS_Library.JavaServer.BanIP*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.BanIP*
        name: BanIP
        nameWithType: JavaServer.BanIP
        qualifiedName: IMS_Library.JavaServer.BanIP
      VB:
      - id: IMS_Library.JavaServer.BanIP*
        name: BanIP
        nameWithType: JavaServer.BanIP
        qualifiedName: IMS_Library.JavaServer.BanIP
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.BanIP
  IMS_Library.JavaServer.UnbanPlayer*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.UnbanPlayer*
        name: UnbanPlayer
        nameWithType: JavaServer.UnbanPlayer
        qualifiedName: IMS_Library.JavaServer.UnbanPlayer
      VB:
      - id: IMS_Library.JavaServer.UnbanPlayer*
        name: UnbanPlayer
        nameWithType: JavaServer.UnbanPlayer
        qualifiedName: IMS_Library.JavaServer.UnbanPlayer
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.UnbanPlayer
  IMS_Library.JavaServer.UnbanIP*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.UnbanIP*
        name: UnbanIP
        nameWithType: JavaServer.UnbanIP
        qualifiedName: IMS_Library.JavaServer.UnbanIP
      VB:
      - id: IMS_Library.JavaServer.UnbanIP*
        name: UnbanIP
        nameWithType: JavaServer.UnbanIP
        qualifiedName: IMS_Library.JavaServer.UnbanIP
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.UnbanIP
  IMS_Library.JavaServer.DeopPlayer*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.DeopPlayer*
        name: DeopPlayer
        nameWithType: JavaServer.DeopPlayer
        qualifiedName: IMS_Library.JavaServer.DeopPlayer
      VB:
      - id: IMS_Library.JavaServer.DeopPlayer*
        name: DeopPlayer
        nameWithType: JavaServer.DeopPlayer
        qualifiedName: IMS_Library.JavaServer.DeopPlayer
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.DeopPlayer
  IMS_Library.JavaServer.WhitelistPlayer*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.WhitelistPlayer*
        name: WhitelistPlayer
        nameWithType: JavaServer.WhitelistPlayer
        qualifiedName: IMS_Library.JavaServer.WhitelistPlayer
      VB:
      - id: IMS_Library.JavaServer.WhitelistPlayer*
        name: WhitelistPlayer
        nameWithType: JavaServer.WhitelistPlayer
        qualifiedName: IMS_Library.JavaServer.WhitelistPlayer
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.WhitelistPlayer
  IMS_Library.JavaServer.RemoveWhitelistPlayer*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.RemoveWhitelistPlayer*
        name: RemoveWhitelistPlayer
        nameWithType: JavaServer.RemoveWhitelistPlayer
        qualifiedName: IMS_Library.JavaServer.RemoveWhitelistPlayer
      VB:
      - id: IMS_Library.JavaServer.RemoveWhitelistPlayer*
        name: RemoveWhitelistPlayer
        nameWithType: JavaServer.RemoveWhitelistPlayer
        qualifiedName: IMS_Library.JavaServer.RemoveWhitelistPlayer
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.RemoveWhitelistPlayer
  IMS_Library.JavaServer.GetAllPlayers*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.GetAllPlayers*
        name: GetAllPlayers
        nameWithType: JavaServer.GetAllPlayers
        qualifiedName: IMS_Library.JavaServer.GetAllPlayers
      VB:
      - id: IMS_Library.JavaServer.GetAllPlayers*
        name: GetAllPlayers
        nameWithType: JavaServer.GetAllPlayers
        qualifiedName: IMS_Library.JavaServer.GetAllPlayers
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.GetAllPlayers
  IMS_Library.JavaServer.GetAllOps*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.GetAllOps*
        name: GetAllOps
        nameWithType: JavaServer.GetAllOps
        qualifiedName: IMS_Library.JavaServer.GetAllOps
      VB:
      - id: IMS_Library.JavaServer.GetAllOps*
        name: GetAllOps
        nameWithType: JavaServer.GetAllOps
        qualifiedName: IMS_Library.JavaServer.GetAllOps
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.GetAllOps
  IMS_Library.JavaServer.GetAllBans*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.GetAllBans*
        name: GetAllBans
        nameWithType: JavaServer.GetAllBans
        qualifiedName: IMS_Library.JavaServer.GetAllBans
      VB:
      - id: IMS_Library.JavaServer.GetAllBans*
        name: GetAllBans
        nameWithType: JavaServer.GetAllBans
        qualifiedName: IMS_Library.JavaServer.GetAllBans
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.GetAllBans
  IMS_Library.JavaServer.GetAllBannedIPs*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.GetAllBannedIPs*
        name: GetAllBannedIPs
        nameWithType: JavaServer.GetAllBannedIPs
        qualifiedName: IMS_Library.JavaServer.GetAllBannedIPs
      VB:
      - id: IMS_Library.JavaServer.GetAllBannedIPs*
        name: GetAllBannedIPs
        nameWithType: JavaServer.GetAllBannedIPs
        qualifiedName: IMS_Library.JavaServer.GetAllBannedIPs
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.GetAllBannedIPs
  IMS_Library.JavaServer.ReloadServerWhitelist*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.ReloadServerWhitelist*
        name: ReloadServerWhitelist
        nameWithType: JavaServer.ReloadServerWhitelist
        qualifiedName: IMS_Library.JavaServer.ReloadServerWhitelist
      VB:
      - id: IMS_Library.JavaServer.ReloadServerWhitelist*
        name: ReloadServerWhitelist
        nameWithType: JavaServer.ReloadServerWhitelist
        qualifiedName: IMS_Library.JavaServer.ReloadServerWhitelist
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.ReloadServerWhitelist
  IMS_Library.JavaServer.ReloadServerPermissions*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.ReloadServerPermissions*
        name: ReloadServerPermissions
        nameWithType: JavaServer.ReloadServerPermissions
        qualifiedName: IMS_Library.JavaServer.ReloadServerPermissions
      VB:
      - id: IMS_Library.JavaServer.ReloadServerPermissions*
        name: ReloadServerPermissions
        nameWithType: JavaServer.ReloadServerPermissions
        qualifiedName: IMS_Library.JavaServer.ReloadServerPermissions
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.ReloadServerPermissions
  IMS_Library.JavaServer.GetLogFiles*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.GetLogFiles*
        name: GetLogFiles
        nameWithType: JavaServer.GetLogFiles
        qualifiedName: IMS_Library.JavaServer.GetLogFiles
      VB:
      - id: IMS_Library.JavaServer.GetLogFiles*
        name: GetLogFiles
        nameWithType: JavaServer.GetLogFiles
        qualifiedName: IMS_Library.JavaServer.GetLogFiles
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.GetLogFiles
  IMS_Library.JavaServer.GetLogFile*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.GetLogFile*
        name: GetLogFile
        nameWithType: JavaServer.GetLogFile
        qualifiedName: IMS_Library.JavaServer.GetLogFile
      VB:
      - id: IMS_Library.JavaServer.GetLogFile*
        name: GetLogFile
        nameWithType: JavaServer.GetLogFile
        qualifiedName: IMS_Library.JavaServer.GetLogFile
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.GetLogFile
  IMS_Library.JavaServer.GetAllWhitelistedPlayers*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.GetAllWhitelistedPlayers*
        name: GetAllWhitelistedPlayers
        nameWithType: JavaServer.GetAllWhitelistedPlayers
        qualifiedName: IMS_Library.JavaServer.GetAllWhitelistedPlayers
      VB:
      - id: IMS_Library.JavaServer.GetAllWhitelistedPlayers*
        name: GetAllWhitelistedPlayers
        nameWithType: JavaServer.GetAllWhitelistedPlayers
        qualifiedName: IMS_Library.JavaServer.GetAllWhitelistedPlayers
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.GetAllWhitelistedPlayers
  IMS_Library.JavaServer.GetPlayerInformationByUsername*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.GetPlayerInformationByUsername*
        name: GetPlayerInformationByUsername
        nameWithType: JavaServer.GetPlayerInformationByUsername
        qualifiedName: IMS_Library.JavaServer.GetPlayerInformationByUsername
      VB:
      - id: IMS_Library.JavaServer.GetPlayerInformationByUsername*
        name: GetPlayerInformationByUsername
        nameWithType: JavaServer.GetPlayerInformationByUsername
        qualifiedName: IMS_Library.JavaServer.GetPlayerInformationByUsername
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.GetPlayerInformationByUsername
  IMS_Library.JavaServer.GetPlayerInformationByUUID*:
    name:
      CSharp:
      - id: IMS_Library.JavaServer.GetPlayerInformationByUUID*
        name: GetPlayerInformationByUUID
        nameWithType: JavaServer.GetPlayerInformationByUUID
        qualifiedName: IMS_Library.JavaServer.GetPlayerInformationByUUID
      VB:
      - id: IMS_Library.JavaServer.GetPlayerInformationByUUID*
        name: GetPlayerInformationByUUID
        nameWithType: JavaServer.GetPlayerInformationByUUID
        qualifiedName: IMS_Library.JavaServer.GetPlayerInformationByUUID
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServer.GetPlayerInformationByUUID
  IMS_Library.JavaServer:
    name:
      CSharp:
      - id: IMS_Library.JavaServer
        name: JavaServer
        nameWithType: JavaServer
        qualifiedName: IMS_Library.JavaServer
      VB:
      - id: IMS_Library.JavaServer
        name: JavaServer
        nameWithType: JavaServer
        qualifiedName: IMS_Library.JavaServer
    isDefinition: true
    commentId: T:IMS_Library.JavaServer
  IMS_Library.JavaServerConfiguration.IMS_Library.IMSConfigurationUtility.FromConfiguration``1:
    name:
      CSharp:
      - id: IMS_Library.IMSConfigurationUtility.FromConfiguration``1
        name: FromConfiguration<JavaServerConfiguration>
        nameWithType: IMSConfigurationUtility.FromConfiguration<JavaServerConfiguration>
        qualifiedName: IMS_Library.IMSConfigurationUtility.FromConfiguration<IMS_Library.JavaServerConfiguration>
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.IMSConfigurationUtility.FromConfiguration``1
        name: FromConfiguration(Of JavaServerConfiguration)
        nameWithType: IMSConfigurationUtility.FromConfiguration(Of JavaServerConfiguration)
        qualifiedName: IMS_Library.IMSConfigurationUtility.FromConfiguration(Of IMS_Library.JavaServerConfiguration)
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: IMS_Library.IMSConfigurationUtility.FromConfiguration``1(``0)
    parent: IMS_Library.IMSConfigurationUtility
    commentId: M:IMS_Library.IMSConfigurationUtility.FromConfiguration``1(``0)
  IMS_Library.JavaServerConfiguration.IMS_Library.IMSConfigurationUtility.SaveConfiguration``1:
    name:
      CSharp:
      - id: IMS_Library.IMSConfigurationUtility.SaveConfiguration``1
        name: SaveConfiguration<JavaServerConfiguration>
        nameWithType: IMSConfigurationUtility.SaveConfiguration<JavaServerConfiguration>
        qualifiedName: IMS_Library.IMSConfigurationUtility.SaveConfiguration<IMS_Library.JavaServerConfiguration>
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.IMSConfigurationUtility.SaveConfiguration``1
        name: SaveConfiguration(Of JavaServerConfiguration)
        nameWithType: IMSConfigurationUtility.SaveConfiguration(Of JavaServerConfiguration)
        qualifiedName: IMS_Library.IMSConfigurationUtility.SaveConfiguration(Of IMS_Library.JavaServerConfiguration)
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: IMS_Library.IMSConfigurationUtility.SaveConfiguration``1(``0)
    parent: IMS_Library.IMSConfigurationUtility
    commentId: M:IMS_Library.IMSConfigurationUtility.SaveConfiguration``1(``0)
  IMS_Library.MOTDServerProperty.#ctor(System.String):
    name:
      CSharp:
      - id: IMS_Library.MOTDServerProperty.#ctor(System.String)
        name: MOTDServerProperty
        nameWithType: MOTDServerProperty.MOTDServerProperty
        qualifiedName: IMS_Library.MOTDServerProperty.MOTDServerProperty
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.MOTDServerProperty.#ctor(System.String)
        name: MOTDServerProperty
        nameWithType: MOTDServerProperty.MOTDServerProperty
        qualifiedName: IMS_Library.MOTDServerProperty.MOTDServerProperty
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IMS_Library.MOTDServerProperty
    commentId: M:IMS_Library.MOTDServerProperty.#ctor(System.String)
  IMS_Library.JavaServerConfiguration.#ctor*:
    name:
      CSharp:
      - id: IMS_Library.JavaServerConfiguration.#ctor*
        name: JavaServerConfiguration
        nameWithType: JavaServerConfiguration.JavaServerConfiguration
        qualifiedName: IMS_Library.JavaServerConfiguration.JavaServerConfiguration
      VB:
      - id: IMS_Library.JavaServerConfiguration.#ctor*
        name: JavaServerConfiguration
        nameWithType: JavaServerConfiguration.JavaServerConfiguration
        qualifiedName: IMS_Library.JavaServerConfiguration.JavaServerConfiguration
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServerConfiguration.#ctor
  IMS_Library.JavaServerConfiguration.GetUsedPorts*:
    name:
      CSharp:
      - id: IMS_Library.JavaServerConfiguration.GetUsedPorts*
        name: GetUsedPorts
        nameWithType: JavaServerConfiguration.GetUsedPorts
        qualifiedName: IMS_Library.JavaServerConfiguration.GetUsedPorts
      VB:
      - id: IMS_Library.JavaServerConfiguration.GetUsedPorts*
        name: GetUsedPorts
        nameWithType: JavaServerConfiguration.GetUsedPorts
        qualifiedName: IMS_Library.JavaServerConfiguration.GetUsedPorts
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServerConfiguration.GetUsedPorts
  IMS_Library.JavaServerConfiguration.GetPortsToForward*:
    name:
      CSharp:
      - id: IMS_Library.JavaServerConfiguration.GetPortsToForward*
        name: GetPortsToForward
        nameWithType: JavaServerConfiguration.GetPortsToForward
        qualifiedName: IMS_Library.JavaServerConfiguration.GetPortsToForward
      VB:
      - id: IMS_Library.JavaServerConfiguration.GetPortsToForward*
        name: GetPortsToForward
        nameWithType: JavaServerConfiguration.GetPortsToForward
        qualifiedName: IMS_Library.JavaServerConfiguration.GetPortsToForward
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServerConfiguration.GetPortsToForward
  IMS_Library.JavaServerConfiguration.CreateServer*:
    name:
      CSharp:
      - id: IMS_Library.JavaServerConfiguration.CreateServer*
        name: CreateServer
        nameWithType: JavaServerConfiguration.CreateServer
        qualifiedName: IMS_Library.JavaServerConfiguration.CreateServer
      VB:
      - id: IMS_Library.JavaServerConfiguration.CreateServer*
        name: CreateServer
        nameWithType: JavaServerConfiguration.CreateServer
        qualifiedName: IMS_Library.JavaServerConfiguration.CreateServer
    isDefinition: true
    commentId: Overload:IMS_Library.JavaServerConfiguration.CreateServer
  IMS_Library.BanIPTag:
    name:
      CSharp:
      - id: IMS_Library.BanIPTag
        name: BanIPTag
        nameWithType: BanIPTag
        qualifiedName: IMS_Library.BanIPTag
      VB:
      - id: IMS_Library.BanIPTag
        name: BanIPTag
        nameWithType: BanIPTag
        qualifiedName: IMS_Library.BanIPTag
    isDefinition: true
    commentId: T:IMS_Library.BanIPTag
  IMS_Library.BanTag:
    name:
      CSharp:
      - id: IMS_Library.BanTag
        name: BanTag
        nameWithType: BanTag
        qualifiedName: IMS_Library.BanTag
      VB:
      - id: IMS_Library.BanTag
        name: BanTag
        nameWithType: BanTag
        qualifiedName: IMS_Library.BanTag
    isDefinition: true
    commentId: T:IMS_Library.BanTag
  IMS_Library.BedrockOpTag:
    name:
      CSharp:
      - id: IMS_Library.BedrockOpTag
        name: BedrockOpTag
        nameWithType: BedrockOpTag
        qualifiedName: IMS_Library.BedrockOpTag
      VB:
      - id: IMS_Library.BedrockOpTag
        name: BedrockOpTag
        nameWithType: BedrockOpTag
        qualifiedName: IMS_Library.BedrockOpTag
    isDefinition: true
    commentId: T:IMS_Library.BedrockOpTag
  IMS_Library.BedrockWhitelistTag:
    name:
      CSharp:
      - id: IMS_Library.BedrockWhitelistTag
        name: BedrockWhitelistTag
        nameWithType: BedrockWhitelistTag
        qualifiedName: IMS_Library.BedrockWhitelistTag
      VB:
      - id: IMS_Library.BedrockWhitelistTag
        name: BedrockWhitelistTag
        nameWithType: BedrockWhitelistTag
        qualifiedName: IMS_Library.BedrockWhitelistTag
    isDefinition: true
    commentId: T:IMS_Library.BedrockWhitelistTag
  IMS_Library.LastestVersionsTag:
    name:
      CSharp:
      - id: IMS_Library.LastestVersionsTag
        name: LastestVersionsTag
        nameWithType: LastestVersionsTag
        qualifiedName: IMS_Library.LastestVersionsTag
      VB:
      - id: IMS_Library.LastestVersionsTag
        name: LastestVersionsTag
        nameWithType: LastestVersionsTag
        qualifiedName: IMS_Library.LastestVersionsTag
    isDefinition: true
    parent: IMS_Library
    commentId: T:IMS_Library.LastestVersionsTag
  IMS_Library.NameTimelineTag:
    name:
      CSharp:
      - id: IMS_Library.NameTimelineTag
        name: NameTimelineTag
        nameWithType: NameTimelineTag
        qualifiedName: IMS_Library.NameTimelineTag
      VB:
      - id: IMS_Library.NameTimelineTag
        name: NameTimelineTag
        nameWithType: NameTimelineTag
        qualifiedName: IMS_Library.NameTimelineTag
    isDefinition: true
    commentId: T:IMS_Library.NameTimelineTag
  IMS_Library.OpTag:
    name:
      CSharp:
      - id: IMS_Library.OpTag
        name: OpTag
        nameWithType: OpTag
        qualifiedName: IMS_Library.OpTag
      VB:
      - id: IMS_Library.OpTag
        name: OpTag
        nameWithType: OpTag
        qualifiedName: IMS_Library.OpTag
    isDefinition: true
    commentId: T:IMS_Library.OpTag
  IMS_Library.PlayerIDPairTag:
    name:
      CSharp:
      - id: IMS_Library.PlayerIDPairTag
        name: PlayerIDPairTag
        nameWithType: PlayerIDPairTag
        qualifiedName: IMS_Library.PlayerIDPairTag
      VB:
      - id: IMS_Library.PlayerIDPairTag
        name: PlayerIDPairTag
        nameWithType: PlayerIDPairTag
        qualifiedName: IMS_Library.PlayerIDPairTag
    isDefinition: true
    commentId: T:IMS_Library.PlayerIDPairTag
  IMS_Library.PlayerProfileValueTag:
    name:
      CSharp:
      - id: IMS_Library.PlayerProfileValueTag
        name: PlayerProfileValueTag
        nameWithType: PlayerProfileValueTag
        qualifiedName: IMS_Library.PlayerProfileValueTag
      VB:
      - id: IMS_Library.PlayerProfileValueTag
        name: PlayerProfileValueTag
        nameWithType: PlayerProfileValueTag
        qualifiedName: IMS_Library.PlayerProfileValueTag
    isDefinition: true
    parent: IMS_Library
    commentId: T:IMS_Library.PlayerProfileValueTag
  IMS_Library.PlayerProfilePropertyTag.GetDecodedValueTag*:
    name:
      CSharp:
      - id: IMS_Library.PlayerProfilePropertyTag.GetDecodedValueTag*
        name: GetDecodedValueTag
        nameWithType: PlayerProfilePropertyTag.GetDecodedValueTag
        qualifiedName: IMS_Library.PlayerProfilePropertyTag.GetDecodedValueTag
      VB:
      - id: IMS_Library.PlayerProfilePropertyTag.GetDecodedValueTag*
        name: GetDecodedValueTag
        nameWithType: PlayerProfilePropertyTag.GetDecodedValueTag
        qualifiedName: IMS_Library.PlayerProfilePropertyTag.GetDecodedValueTag
    isDefinition: true
    commentId: Overload:IMS_Library.PlayerProfilePropertyTag.GetDecodedValueTag
  IMS_Library.PlayerProfilePropertyTag:
    name:
      CSharp:
      - id: IMS_Library.PlayerProfilePropertyTag
        name: PlayerProfilePropertyTag
        nameWithType: PlayerProfilePropertyTag
        qualifiedName: IMS_Library.PlayerProfilePropertyTag
      VB:
      - id: IMS_Library.PlayerProfilePropertyTag
        name: PlayerProfilePropertyTag
        nameWithType: PlayerProfilePropertyTag
        qualifiedName: IMS_Library.PlayerProfilePropertyTag
    isDefinition: true
    commentId: T:IMS_Library.PlayerProfilePropertyTag
  IMS_Library.PlayerProfilePropertyTag[]:
    name:
      CSharp:
      - id: IMS_Library.PlayerProfilePropertyTag
        name: PlayerProfilePropertyTag
        nameWithType: PlayerProfilePropertyTag
        qualifiedName: IMS_Library.PlayerProfilePropertyTag
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: IMS_Library.PlayerProfilePropertyTag
        name: PlayerProfilePropertyTag
        nameWithType: PlayerProfilePropertyTag
        qualifiedName: IMS_Library.PlayerProfilePropertyTag
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  IMS_Library.PlayerProfileTag:
    name:
      CSharp:
      - id: IMS_Library.PlayerProfileTag
        name: PlayerProfileTag
        nameWithType: PlayerProfileTag
        qualifiedName: IMS_Library.PlayerProfileTag
      VB:
      - id: IMS_Library.PlayerProfileTag
        name: PlayerProfileTag
        nameWithType: PlayerProfileTag
        qualifiedName: IMS_Library.PlayerProfileTag
    isDefinition: true
    commentId: T:IMS_Library.PlayerProfileTag
  IMS_Library.PlayerProfileURLTag:
    name:
      CSharp:
      - id: IMS_Library.PlayerProfileURLTag
        name: PlayerProfileURLTag
        nameWithType: PlayerProfileURLTag
        qualifiedName: IMS_Library.PlayerProfileURLTag
      VB:
      - id: IMS_Library.PlayerProfileURLTag
        name: PlayerProfileURLTag
        nameWithType: PlayerProfileURLTag
        qualifiedName: IMS_Library.PlayerProfileURLTag
    isDefinition: true
    parent: IMS_Library
    commentId: T:IMS_Library.PlayerProfileURLTag
  IMS_Library.PlayerProfileTextureDataTag:
    name:
      CSharp:
      - id: IMS_Library.PlayerProfileTextureDataTag
        name: PlayerProfileTextureDataTag
        nameWithType: PlayerProfileTextureDataTag
        qualifiedName: IMS_Library.PlayerProfileTextureDataTag
      VB:
      - id: IMS_Library.PlayerProfileTextureDataTag
        name: PlayerProfileTextureDataTag
        nameWithType: PlayerProfileTextureDataTag
        qualifiedName: IMS_Library.PlayerProfileTextureDataTag
    isDefinition: true
    parent: IMS_Library
    commentId: T:IMS_Library.PlayerProfileTextureDataTag
  IMS_Library.ServerDownloadTag:
    name:
      CSharp:
      - id: IMS_Library.ServerDownloadTag
        name: ServerDownloadTag
        nameWithType: ServerDownloadTag
        qualifiedName: IMS_Library.ServerDownloadTag
      VB:
      - id: IMS_Library.ServerDownloadTag
        name: ServerDownloadTag
        nameWithType: ServerDownloadTag
        qualifiedName: IMS_Library.ServerDownloadTag
    isDefinition: true
    parent: IMS_Library
    commentId: T:IMS_Library.ServerDownloadTag
  IMS_Library.VersionDownloadTag:
    name:
      CSharp:
      - id: IMS_Library.VersionDownloadTag
        name: VersionDownloadTag
        nameWithType: VersionDownloadTag
        qualifiedName: IMS_Library.VersionDownloadTag
      VB:
      - id: IMS_Library.VersionDownloadTag
        name: VersionDownloadTag
        nameWithType: VersionDownloadTag
        qualifiedName: IMS_Library.VersionDownloadTag
    isDefinition: true
    parent: IMS_Library
    commentId: T:IMS_Library.VersionDownloadTag
  IMS_Library.VersionDataTag:
    name:
      CSharp:
      - id: IMS_Library.VersionDataTag
        name: VersionDataTag
        nameWithType: VersionDataTag
        qualifiedName: IMS_Library.VersionDataTag
      VB:
      - id: IMS_Library.VersionDataTag
        name: VersionDataTag
        nameWithType: VersionDataTag
        qualifiedName: IMS_Library.VersionDataTag
    isDefinition: true
    commentId: T:IMS_Library.VersionDataTag
  IMS_Library.VersionMetadataTag[]:
    name:
      CSharp:
      - id: IMS_Library.VersionMetadataTag
        name: VersionMetadataTag
        nameWithType: VersionMetadataTag
        qualifiedName: IMS_Library.VersionMetadataTag
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: IMS_Library.VersionMetadataTag
        name: VersionMetadataTag
        nameWithType: VersionMetadataTag
        qualifiedName: IMS_Library.VersionMetadataTag
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  IMS_Library.VersionInformationTag:
    name:
      CSharp:
      - id: IMS_Library.VersionInformationTag
        name: VersionInformationTag
        nameWithType: VersionInformationTag
        qualifiedName: IMS_Library.VersionInformationTag
      VB:
      - id: IMS_Library.VersionInformationTag
        name: VersionInformationTag
        nameWithType: VersionInformationTag
        qualifiedName: IMS_Library.VersionInformationTag
    isDefinition: true
    commentId: T:IMS_Library.VersionInformationTag
  IMS_Library.VersionMetadataTag:
    name:
      CSharp:
      - id: IMS_Library.VersionMetadataTag
        name: VersionMetadataTag
        nameWithType: VersionMetadataTag
        qualifiedName: IMS_Library.VersionMetadataTag
      VB:
      - id: IMS_Library.VersionMetadataTag
        name: VersionMetadataTag
        nameWithType: VersionMetadataTag
        qualifiedName: IMS_Library.VersionMetadataTag
    isDefinition: true
    parent: IMS_Library
    commentId: T:IMS_Library.VersionMetadataTag
  IMS_Library.WhitelistTag:
    name:
      CSharp:
      - id: IMS_Library.WhitelistTag
        name: WhitelistTag
        nameWithType: WhitelistTag
        qualifiedName: IMS_Library.WhitelistTag
      VB:
      - id: IMS_Library.WhitelistTag
        name: WhitelistTag
        nameWithType: WhitelistTag
        qualifiedName: IMS_Library.WhitelistTag
    isDefinition: true
    commentId: T:IMS_Library.WhitelistTag
  IMS_Library.LogFileInformation:
    name:
      CSharp:
      - id: IMS_Library.LogFileInformation
        name: LogFileInformation
        nameWithType: LogFileInformation
        qualifiedName: IMS_Library.LogFileInformation
      VB:
      - id: IMS_Library.LogFileInformation
        name: LogFileInformation
        nameWithType: LogFileInformation
        qualifiedName: IMS_Library.LogFileInformation
    isDefinition: true
    commentId: T:IMS_Library.LogFileInformation
  IMS_Library.MinecraftConfigurationWriter.WriteServerPropertiesFile*:
    name:
      CSharp:
      - id: IMS_Library.MinecraftConfigurationWriter.WriteServerPropertiesFile*
        name: WriteServerPropertiesFile
        nameWithType: MinecraftConfigurationWriter.WriteServerPropertiesFile
        qualifiedName: IMS_Library.MinecraftConfigurationWriter.WriteServerPropertiesFile
      VB:
      - id: IMS_Library.MinecraftConfigurationWriter.WriteServerPropertiesFile*
        name: WriteServerPropertiesFile
        nameWithType: MinecraftConfigurationWriter.WriteServerPropertiesFile
        qualifiedName: IMS_Library.MinecraftConfigurationWriter.WriteServerPropertiesFile
    isDefinition: true
    commentId: Overload:IMS_Library.MinecraftConfigurationWriter.WriteServerPropertiesFile
  IMS_Library.MinecraftConfigurationWriter.WriteEULA*:
    name:
      CSharp:
      - id: IMS_Library.MinecraftConfigurationWriter.WriteEULA*
        name: WriteEULA
        nameWithType: MinecraftConfigurationWriter.WriteEULA
        qualifiedName: IMS_Library.MinecraftConfigurationWriter.WriteEULA
      VB:
      - id: IMS_Library.MinecraftConfigurationWriter.WriteEULA*
        name: WriteEULA
        nameWithType: MinecraftConfigurationWriter.WriteEULA
        qualifiedName: IMS_Library.MinecraftConfigurationWriter.WriteEULA
    isDefinition: true
    commentId: Overload:IMS_Library.MinecraftConfigurationWriter.WriteEULA
  IMS_Library.MinecraftConfigurationWriter:
    name:
      CSharp:
      - id: IMS_Library.MinecraftConfigurationWriter
        name: MinecraftConfigurationWriter
        nameWithType: MinecraftConfigurationWriter
        qualifiedName: IMS_Library.MinecraftConfigurationWriter
      VB:
      - id: IMS_Library.MinecraftConfigurationWriter
        name: MinecraftConfigurationWriter
        nameWithType: MinecraftConfigurationWriter
        qualifiedName: IMS_Library.MinecraftConfigurationWriter
    isDefinition: true
    commentId: T:IMS_Library.MinecraftConfigurationWriter
  IMS_Library.ServerProperty.#ctor*:
    name:
      CSharp:
      - id: IMS_Library.ServerProperty.#ctor*
        name: ServerProperty
        nameWithType: ServerProperty.ServerProperty
        qualifiedName: IMS_Library.ServerProperty.ServerProperty
      VB:
      - id: IMS_Library.ServerProperty.#ctor*
        name: ServerProperty
        nameWithType: ServerProperty.ServerProperty
        qualifiedName: IMS_Library.ServerProperty.ServerProperty
    isDefinition: true
    commentId: Overload:IMS_Library.ServerProperty.#ctor
  IMS_Library.ServerProperty.GetData*:
    name:
      CSharp:
      - id: IMS_Library.ServerProperty.GetData*
        name: GetData
        nameWithType: ServerProperty.GetData
        qualifiedName: IMS_Library.ServerProperty.GetData
      VB:
      - id: IMS_Library.ServerProperty.GetData*
        name: GetData
        nameWithType: ServerProperty.GetData
        qualifiedName: IMS_Library.ServerProperty.GetData
    isDefinition: true
    commentId: Overload:IMS_Library.ServerProperty.GetData
  System.DateTime:
    name:
      CSharp:
      - id: System.DateTime
        name: DateTime
        nameWithType: DateTime
        qualifiedName: System.DateTime
        isExternal: true
      VB:
      - id: System.DateTime
        name: DateTime
        nameWithType: DateTime
        qualifiedName: System.DateTime
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.DateTime
  IMS_Library.MinecraftVersionProvider.IMS_Library.IMSConfigurationUtility.FromConfiguration``1:
    name:
      CSharp:
      - id: IMS_Library.IMSConfigurationUtility.FromConfiguration``1
        name: FromConfiguration<MinecraftVersionProvider>
        nameWithType: IMSConfigurationUtility.FromConfiguration<MinecraftVersionProvider>
        qualifiedName: IMS_Library.IMSConfigurationUtility.FromConfiguration<IMS_Library.MinecraftVersionProvider>
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.IMSConfigurationUtility.FromConfiguration``1
        name: FromConfiguration(Of MinecraftVersionProvider)
        nameWithType: IMSConfigurationUtility.FromConfiguration(Of MinecraftVersionProvider)
        qualifiedName: IMS_Library.IMSConfigurationUtility.FromConfiguration(Of IMS_Library.MinecraftVersionProvider)
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: IMS_Library.IMSConfigurationUtility.FromConfiguration``1(``0)
    parent: IMS_Library.IMSConfigurationUtility
    commentId: M:IMS_Library.IMSConfigurationUtility.FromConfiguration``1(``0)
  IMS_Library.MinecraftVersionProvider.IMS_Library.IMSConfigurationUtility.SaveConfiguration``1:
    name:
      CSharp:
      - id: IMS_Library.IMSConfigurationUtility.SaveConfiguration``1
        name: SaveConfiguration<MinecraftVersionProvider>
        nameWithType: IMSConfigurationUtility.SaveConfiguration<MinecraftVersionProvider>
        qualifiedName: IMS_Library.IMSConfigurationUtility.SaveConfiguration<IMS_Library.MinecraftVersionProvider>
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.IMSConfigurationUtility.SaveConfiguration``1
        name: SaveConfiguration(Of MinecraftVersionProvider)
        nameWithType: IMSConfigurationUtility.SaveConfiguration(Of MinecraftVersionProvider)
        qualifiedName: IMS_Library.IMSConfigurationUtility.SaveConfiguration(Of IMS_Library.MinecraftVersionProvider)
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: IMS_Library.IMSConfigurationUtility.SaveConfiguration``1(``0)
    parent: IMS_Library.IMSConfigurationUtility
    commentId: M:IMS_Library.IMSConfigurationUtility.SaveConfiguration``1(``0)
  IMS_Library.ServerVersionInformation:
    name:
      CSharp:
      - id: IMS_Library.ServerVersionInformation
        name: ServerVersionInformation
        nameWithType: ServerVersionInformation
        qualifiedName: IMS_Library.ServerVersionInformation
      VB:
      - id: IMS_Library.ServerVersionInformation
        name: ServerVersionInformation
        nameWithType: ServerVersionInformation
        qualifiedName: IMS_Library.ServerVersionInformation
    isDefinition: true
    parent: IMS_Library
    commentId: T:IMS_Library.ServerVersionInformation
  IMS_Library.MinecraftVersionProvider.LatestRelease*:
    name:
      CSharp:
      - id: IMS_Library.MinecraftVersionProvider.LatestRelease*
        name: LatestRelease
        nameWithType: MinecraftVersionProvider.LatestRelease
        qualifiedName: IMS_Library.MinecraftVersionProvider.LatestRelease
      VB:
      - id: IMS_Library.MinecraftVersionProvider.LatestRelease*
        name: LatestRelease
        nameWithType: MinecraftVersionProvider.LatestRelease
        qualifiedName: IMS_Library.MinecraftVersionProvider.LatestRelease
    isDefinition: true
    commentId: Overload:IMS_Library.MinecraftVersionProvider.LatestRelease
  IMS_Library.MinecraftVersionProvider.LatestSnapshot*:
    name:
      CSharp:
      - id: IMS_Library.MinecraftVersionProvider.LatestSnapshot*
        name: LatestSnapshot
        nameWithType: MinecraftVersionProvider.LatestSnapshot
        qualifiedName: IMS_Library.MinecraftVersionProvider.LatestSnapshot
      VB:
      - id: IMS_Library.MinecraftVersionProvider.LatestSnapshot*
        name: LatestSnapshot
        nameWithType: MinecraftVersionProvider.LatestSnapshot
        qualifiedName: IMS_Library.MinecraftVersionProvider.LatestSnapshot
    isDefinition: true
    commentId: Overload:IMS_Library.MinecraftVersionProvider.LatestSnapshot
  System.Collections.Concurrent.ConcurrentDictionary{System.String,IMS_Library.ServerVersionInformation}:
    name:
      CSharp:
      - id: System.Collections.Concurrent.ConcurrentDictionary`2
        name: ConcurrentDictionary
        nameWithType: ConcurrentDictionary
        qualifiedName: System.Collections.Concurrent.ConcurrentDictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: IMS_Library.ServerVersionInformation
        name: ServerVersionInformation
        nameWithType: ServerVersionInformation
        qualifiedName: IMS_Library.ServerVersionInformation
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Concurrent.ConcurrentDictionary`2
        name: ConcurrentDictionary
        nameWithType: ConcurrentDictionary
        qualifiedName: System.Collections.Concurrent.ConcurrentDictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: IMS_Library.ServerVersionInformation
        name: ServerVersionInformation
        nameWithType: ServerVersionInformation
        qualifiedName: IMS_Library.ServerVersionInformation
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Concurrent.ConcurrentDictionary`2
    parent: System.Collections.Concurrent
    commentId: T:System.Collections.Concurrent.ConcurrentDictionary{System.String,IMS_Library.ServerVersionInformation}
  IMS_Library.MinecraftVersionProvider.Start*:
    name:
      CSharp:
      - id: IMS_Library.MinecraftVersionProvider.Start*
        name: Start
        nameWithType: MinecraftVersionProvider.Start
        qualifiedName: IMS_Library.MinecraftVersionProvider.Start
      VB:
      - id: IMS_Library.MinecraftVersionProvider.Start*
        name: Start
        nameWithType: MinecraftVersionProvider.Start
        qualifiedName: IMS_Library.MinecraftVersionProvider.Start
    isDefinition: true
    commentId: Overload:IMS_Library.MinecraftVersionProvider.Start
  IMS_Library.MinecraftVersionProvider.Stop*:
    name:
      CSharp:
      - id: IMS_Library.MinecraftVersionProvider.Stop*
        name: Stop
        nameWithType: MinecraftVersionProvider.Stop
        qualifiedName: IMS_Library.MinecraftVersionProvider.Stop
      VB:
      - id: IMS_Library.MinecraftVersionProvider.Stop*
        name: Stop
        nameWithType: MinecraftVersionProvider.Stop
        qualifiedName: IMS_Library.MinecraftVersionProvider.Stop
    isDefinition: true
    commentId: Overload:IMS_Library.MinecraftVersionProvider.Stop
  IMS_Library.MinecraftVersionProvider.GetVersionInformationFromID*:
    name:
      CSharp:
      - id: IMS_Library.MinecraftVersionProvider.GetVersionInformationFromID*
        name: GetVersionInformationFromID
        nameWithType: MinecraftVersionProvider.GetVersionInformationFromID
        qualifiedName: IMS_Library.MinecraftVersionProvider.GetVersionInformationFromID
      VB:
      - id: IMS_Library.MinecraftVersionProvider.GetVersionInformationFromID*
        name: GetVersionInformationFromID
        nameWithType: MinecraftVersionProvider.GetVersionInformationFromID
        qualifiedName: IMS_Library.MinecraftVersionProvider.GetVersionInformationFromID
    isDefinition: true
    commentId: Overload:IMS_Library.MinecraftVersionProvider.GetVersionInformationFromID
  IMS_Library.MinecraftVersionProvider.GetDefaultFilePath*:
    name:
      CSharp:
      - id: IMS_Library.MinecraftVersionProvider.GetDefaultFilePath*
        name: GetDefaultFilePath
        nameWithType: MinecraftVersionProvider.GetDefaultFilePath
        qualifiedName: IMS_Library.MinecraftVersionProvider.GetDefaultFilePath
      VB:
      - id: IMS_Library.MinecraftVersionProvider.GetDefaultFilePath*
        name: GetDefaultFilePath
        nameWithType: MinecraftVersionProvider.GetDefaultFilePath
        qualifiedName: IMS_Library.MinecraftVersionProvider.GetDefaultFilePath
    isDefinition: true
    commentId: Overload:IMS_Library.MinecraftVersionProvider.GetDefaultFilePath
  IMS_Library.MinecraftVersionProvider.UpdateAllServerVersionsAsync*:
    name:
      CSharp:
      - id: IMS_Library.MinecraftVersionProvider.UpdateAllServerVersionsAsync*
        name: UpdateAllServerVersionsAsync
        nameWithType: MinecraftVersionProvider.UpdateAllServerVersionsAsync
        qualifiedName: IMS_Library.MinecraftVersionProvider.UpdateAllServerVersionsAsync
      VB:
      - id: IMS_Library.MinecraftVersionProvider.UpdateAllServerVersionsAsync*
        name: UpdateAllServerVersionsAsync
        nameWithType: MinecraftVersionProvider.UpdateAllServerVersionsAsync
        qualifiedName: IMS_Library.MinecraftVersionProvider.UpdateAllServerVersionsAsync
    isDefinition: true
    commentId: Overload:IMS_Library.MinecraftVersionProvider.UpdateAllServerVersionsAsync
  System.Threading.Tasks.Task`1:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TResult
        nameWithType: TResult
        qualifiedName: TResult
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TResult
        nameWithType: TResult
        qualifiedName: TResult
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Threading.Tasks.Task`1
  System.Threading.Tasks.Task{IMS_Library.VersionInformationTag}:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: IMS_Library.VersionInformationTag
        name: VersionInformationTag
        nameWithType: VersionInformationTag
        qualifiedName: IMS_Library.VersionInformationTag
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: IMS_Library.VersionInformationTag
        name: VersionInformationTag
        nameWithType: VersionInformationTag
        qualifiedName: IMS_Library.VersionInformationTag
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{IMS_Library.VersionInformationTag}
  IMS_Library.MojangInteropUtility.GetAllJavaVersionInformation*:
    name:
      CSharp:
      - id: IMS_Library.MojangInteropUtility.GetAllJavaVersionInformation*
        name: GetAllJavaVersionInformation
        nameWithType: MojangInteropUtility.GetAllJavaVersionInformation
        qualifiedName: IMS_Library.MojangInteropUtility.GetAllJavaVersionInformation
      VB:
      - id: IMS_Library.MojangInteropUtility.GetAllJavaVersionInformation*
        name: GetAllJavaVersionInformation
        nameWithType: MojangInteropUtility.GetAllJavaVersionInformation
        qualifiedName: IMS_Library.MojangInteropUtility.GetAllJavaVersionInformation
    isDefinition: true
    commentId: Overload:IMS_Library.MojangInteropUtility.GetAllJavaVersionInformation
  System.Threading.Tasks.Task{IMS_Library.VersionDataTag}:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: IMS_Library.VersionDataTag
        name: VersionDataTag
        nameWithType: VersionDataTag
        qualifiedName: IMS_Library.VersionDataTag
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: IMS_Library.VersionDataTag
        name: VersionDataTag
        nameWithType: VersionDataTag
        qualifiedName: IMS_Library.VersionDataTag
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{IMS_Library.VersionDataTag}
  IMS_Library.MojangInteropUtility.GetVersionInformation*:
    name:
      CSharp:
      - id: IMS_Library.MojangInteropUtility.GetVersionInformation*
        name: GetVersionInformation
        nameWithType: MojangInteropUtility.GetVersionInformation
        qualifiedName: IMS_Library.MojangInteropUtility.GetVersionInformation
      VB:
      - id: IMS_Library.MojangInteropUtility.GetVersionInformation*
        name: GetVersionInformation
        nameWithType: MojangInteropUtility.GetVersionInformation
        qualifiedName: IMS_Library.MojangInteropUtility.GetVersionInformation
    isDefinition: true
    commentId: Overload:IMS_Library.MojangInteropUtility.GetVersionInformation
  IMS_Library.MojangInteropUtility.GetUUIDFromUsername*:
    name:
      CSharp:
      - id: IMS_Library.MojangInteropUtility.GetUUIDFromUsername*
        name: GetUUIDFromUsername
        nameWithType: MojangInteropUtility.GetUUIDFromUsername
        qualifiedName: IMS_Library.MojangInteropUtility.GetUUIDFromUsername
      VB:
      - id: IMS_Library.MojangInteropUtility.GetUUIDFromUsername*
        name: GetUUIDFromUsername
        nameWithType: MojangInteropUtility.GetUUIDFromUsername
        qualifiedName: IMS_Library.MojangInteropUtility.GetUUIDFromUsername
    isDefinition: true
    commentId: Overload:IMS_Library.MojangInteropUtility.GetUUIDFromUsername
  IMS_Library.MojangInteropUtility.GetUsernameFromUUID*:
    name:
      CSharp:
      - id: IMS_Library.MojangInteropUtility.GetUsernameFromUUID*
        name: GetUsernameFromUUID
        nameWithType: MojangInteropUtility.GetUsernameFromUUID
        qualifiedName: IMS_Library.MojangInteropUtility.GetUsernameFromUUID
      VB:
      - id: IMS_Library.MojangInteropUtility.GetUsernameFromUUID*
        name: GetUsernameFromUUID
        nameWithType: MojangInteropUtility.GetUsernameFromUUID
        qualifiedName: IMS_Library.MojangInteropUtility.GetUsernameFromUUID
    isDefinition: true
    commentId: Overload:IMS_Library.MojangInteropUtility.GetUsernameFromUUID
  IMS_Library.MojangInteropUtility.GetLinkToPlayerSkin*:
    name:
      CSharp:
      - id: IMS_Library.MojangInteropUtility.GetLinkToPlayerSkin*
        name: GetLinkToPlayerSkin
        nameWithType: MojangInteropUtility.GetLinkToPlayerSkin
        qualifiedName: IMS_Library.MojangInteropUtility.GetLinkToPlayerSkin
      VB:
      - id: IMS_Library.MojangInteropUtility.GetLinkToPlayerSkin*
        name: GetLinkToPlayerSkin
        nameWithType: MojangInteropUtility.GetLinkToPlayerSkin
        qualifiedName: IMS_Library.MojangInteropUtility.GetLinkToPlayerSkin
    isDefinition: true
    commentId: Overload:IMS_Library.MojangInteropUtility.GetLinkToPlayerSkin
  System.ObsoleteAttribute:
    name:
      CSharp:
      - id: System.ObsoleteAttribute
        name: ObsoleteAttribute
        nameWithType: ObsoleteAttribute
        qualifiedName: System.ObsoleteAttribute
        isExternal: true
      VB:
      - id: System.ObsoleteAttribute
        name: ObsoleteAttribute
        nameWithType: ObsoleteAttribute
        qualifiedName: System.ObsoleteAttribute
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.ObsoleteAttribute
  System.ObsoleteAttribute.#ctor(System.String):
    name:
      CSharp:
      - id: System.ObsoleteAttribute.#ctor(System.String)
        name: ObsoleteAttribute
        nameWithType: ObsoleteAttribute.ObsoleteAttribute
        qualifiedName: System.ObsoleteAttribute.ObsoleteAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ObsoleteAttribute.#ctor(System.String)
        name: ObsoleteAttribute
        nameWithType: ObsoleteAttribute.ObsoleteAttribute
        qualifiedName: System.ObsoleteAttribute.ObsoleteAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ObsoleteAttribute
    commentId: M:System.ObsoleteAttribute.#ctor(System.String)
  IMS_Library.MojangInteropUtility:
    name:
      CSharp:
      - id: IMS_Library.MojangInteropUtility
        name: MojangInteropUtility
        nameWithType: MojangInteropUtility
        qualifiedName: IMS_Library.MojangInteropUtility
      VB:
      - id: IMS_Library.MojangInteropUtility
        name: MojangInteropUtility
        nameWithType: MojangInteropUtility
        qualifiedName: IMS_Library.MojangInteropUtility
    isDefinition: true
    commentId: T:IMS_Library.MojangInteropUtility
  System.Net:
    name:
      CSharp:
      - name: System.Net
        nameWithType: System.Net
        qualifiedName: System.Net
        isExternal: true
      VB:
      - name: System.Net
        nameWithType: System.Net
        qualifiedName: System.Net
    isDefinition: true
    commentId: N:System.Net
  System.Net.WebClient:
    name:
      CSharp:
      - id: System.Net.WebClient
        name: WebClient
        nameWithType: WebClient
        qualifiedName: System.Net.WebClient
        isExternal: true
      VB:
      - id: System.Net.WebClient
        name: WebClient
        nameWithType: WebClient
        qualifiedName: System.Net.WebClient
        isExternal: true
    isDefinition: true
    parent: System.Net
    commentId: T:System.Net.WebClient
  System.Net.WebClient.CancelAsync:
    name:
      CSharp:
      - id: System.Net.WebClient.CancelAsync
        name: CancelAsync
        nameWithType: WebClient.CancelAsync
        qualifiedName: System.Net.WebClient.CancelAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.CancelAsync
        name: CancelAsync
        nameWithType: WebClient.CancelAsync
        qualifiedName: System.Net.WebClient.CancelAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.CancelAsync
  System.Net.WebClient.DownloadData(System.String):
    name:
      CSharp:
      - id: System.Net.WebClient.DownloadData(System.String)
        name: DownloadData
        nameWithType: WebClient.DownloadData
        qualifiedName: System.Net.WebClient.DownloadData
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.DownloadData(System.String)
        name: DownloadData
        nameWithType: WebClient.DownloadData
        qualifiedName: System.Net.WebClient.DownloadData
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.DownloadData(System.String)
  System.Net.WebClient.DownloadData(System.Uri):
    name:
      CSharp:
      - id: System.Net.WebClient.DownloadData(System.Uri)
        name: DownloadData
        nameWithType: WebClient.DownloadData
        qualifiedName: System.Net.WebClient.DownloadData
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.DownloadData(System.Uri)
        name: DownloadData
        nameWithType: WebClient.DownloadData
        qualifiedName: System.Net.WebClient.DownloadData
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.DownloadData(System.Uri)
  System.Net.WebClient.DownloadDataAsync(System.Uri):
    name:
      CSharp:
      - id: System.Net.WebClient.DownloadDataAsync(System.Uri)
        name: DownloadDataAsync
        nameWithType: WebClient.DownloadDataAsync
        qualifiedName: System.Net.WebClient.DownloadDataAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.DownloadDataAsync(System.Uri)
        name: DownloadDataAsync
        nameWithType: WebClient.DownloadDataAsync
        qualifiedName: System.Net.WebClient.DownloadDataAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.DownloadDataAsync(System.Uri)
  System.Net.WebClient.DownloadDataAsync(System.Uri,System.Object):
    name:
      CSharp:
      - id: System.Net.WebClient.DownloadDataAsync(System.Uri,System.Object)
        name: DownloadDataAsync
        nameWithType: WebClient.DownloadDataAsync
        qualifiedName: System.Net.WebClient.DownloadDataAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.DownloadDataAsync(System.Uri,System.Object)
        name: DownloadDataAsync
        nameWithType: WebClient.DownloadDataAsync
        qualifiedName: System.Net.WebClient.DownloadDataAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.DownloadDataAsync(System.Uri,System.Object)
  System.Net.WebClient.DownloadDataTaskAsync(System.String):
    name:
      CSharp:
      - id: System.Net.WebClient.DownloadDataTaskAsync(System.String)
        name: DownloadDataTaskAsync
        nameWithType: WebClient.DownloadDataTaskAsync
        qualifiedName: System.Net.WebClient.DownloadDataTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.DownloadDataTaskAsync(System.String)
        name: DownloadDataTaskAsync
        nameWithType: WebClient.DownloadDataTaskAsync
        qualifiedName: System.Net.WebClient.DownloadDataTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.DownloadDataTaskAsync(System.String)
  System.Net.WebClient.DownloadDataTaskAsync(System.Uri):
    name:
      CSharp:
      - id: System.Net.WebClient.DownloadDataTaskAsync(System.Uri)
        name: DownloadDataTaskAsync
        nameWithType: WebClient.DownloadDataTaskAsync
        qualifiedName: System.Net.WebClient.DownloadDataTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.DownloadDataTaskAsync(System.Uri)
        name: DownloadDataTaskAsync
        nameWithType: WebClient.DownloadDataTaskAsync
        qualifiedName: System.Net.WebClient.DownloadDataTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.DownloadDataTaskAsync(System.Uri)
  System.Net.WebClient.DownloadFile(System.String,System.String):
    name:
      CSharp:
      - id: System.Net.WebClient.DownloadFile(System.String,System.String)
        name: DownloadFile
        nameWithType: WebClient.DownloadFile
        qualifiedName: System.Net.WebClient.DownloadFile
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.DownloadFile(System.String,System.String)
        name: DownloadFile
        nameWithType: WebClient.DownloadFile
        qualifiedName: System.Net.WebClient.DownloadFile
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.DownloadFile(System.String,System.String)
  System.Net.WebClient.DownloadFile(System.Uri,System.String):
    name:
      CSharp:
      - id: System.Net.WebClient.DownloadFile(System.Uri,System.String)
        name: DownloadFile
        nameWithType: WebClient.DownloadFile
        qualifiedName: System.Net.WebClient.DownloadFile
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.DownloadFile(System.Uri,System.String)
        name: DownloadFile
        nameWithType: WebClient.DownloadFile
        qualifiedName: System.Net.WebClient.DownloadFile
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.DownloadFile(System.Uri,System.String)
  System.Net.WebClient.DownloadFileAsync(System.Uri,System.String):
    name:
      CSharp:
      - id: System.Net.WebClient.DownloadFileAsync(System.Uri,System.String)
        name: DownloadFileAsync
        nameWithType: WebClient.DownloadFileAsync
        qualifiedName: System.Net.WebClient.DownloadFileAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.DownloadFileAsync(System.Uri,System.String)
        name: DownloadFileAsync
        nameWithType: WebClient.DownloadFileAsync
        qualifiedName: System.Net.WebClient.DownloadFileAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.DownloadFileAsync(System.Uri,System.String)
  System.Net.WebClient.DownloadFileAsync(System.Uri,System.String,System.Object):
    name:
      CSharp:
      - id: System.Net.WebClient.DownloadFileAsync(System.Uri,System.String,System.Object)
        name: DownloadFileAsync
        nameWithType: WebClient.DownloadFileAsync
        qualifiedName: System.Net.WebClient.DownloadFileAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.DownloadFileAsync(System.Uri,System.String,System.Object)
        name: DownloadFileAsync
        nameWithType: WebClient.DownloadFileAsync
        qualifiedName: System.Net.WebClient.DownloadFileAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.DownloadFileAsync(System.Uri,System.String,System.Object)
  System.Net.WebClient.DownloadFileTaskAsync(System.String,System.String):
    name:
      CSharp:
      - id: System.Net.WebClient.DownloadFileTaskAsync(System.String,System.String)
        name: DownloadFileTaskAsync
        nameWithType: WebClient.DownloadFileTaskAsync
        qualifiedName: System.Net.WebClient.DownloadFileTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.DownloadFileTaskAsync(System.String,System.String)
        name: DownloadFileTaskAsync
        nameWithType: WebClient.DownloadFileTaskAsync
        qualifiedName: System.Net.WebClient.DownloadFileTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.DownloadFileTaskAsync(System.String,System.String)
  System.Net.WebClient.DownloadFileTaskAsync(System.Uri,System.String):
    name:
      CSharp:
      - id: System.Net.WebClient.DownloadFileTaskAsync(System.Uri,System.String)
        name: DownloadFileTaskAsync
        nameWithType: WebClient.DownloadFileTaskAsync
        qualifiedName: System.Net.WebClient.DownloadFileTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.DownloadFileTaskAsync(System.Uri,System.String)
        name: DownloadFileTaskAsync
        nameWithType: WebClient.DownloadFileTaskAsync
        qualifiedName: System.Net.WebClient.DownloadFileTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.DownloadFileTaskAsync(System.Uri,System.String)
  System.Net.WebClient.DownloadString(System.String):
    name:
      CSharp:
      - id: System.Net.WebClient.DownloadString(System.String)
        name: DownloadString
        nameWithType: WebClient.DownloadString
        qualifiedName: System.Net.WebClient.DownloadString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.DownloadString(System.String)
        name: DownloadString
        nameWithType: WebClient.DownloadString
        qualifiedName: System.Net.WebClient.DownloadString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.DownloadString(System.String)
  System.Net.WebClient.DownloadString(System.Uri):
    name:
      CSharp:
      - id: System.Net.WebClient.DownloadString(System.Uri)
        name: DownloadString
        nameWithType: WebClient.DownloadString
        qualifiedName: System.Net.WebClient.DownloadString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.DownloadString(System.Uri)
        name: DownloadString
        nameWithType: WebClient.DownloadString
        qualifiedName: System.Net.WebClient.DownloadString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.DownloadString(System.Uri)
  System.Net.WebClient.DownloadStringAsync(System.Uri):
    name:
      CSharp:
      - id: System.Net.WebClient.DownloadStringAsync(System.Uri)
        name: DownloadStringAsync
        nameWithType: WebClient.DownloadStringAsync
        qualifiedName: System.Net.WebClient.DownloadStringAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.DownloadStringAsync(System.Uri)
        name: DownloadStringAsync
        nameWithType: WebClient.DownloadStringAsync
        qualifiedName: System.Net.WebClient.DownloadStringAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.DownloadStringAsync(System.Uri)
  System.Net.WebClient.DownloadStringAsync(System.Uri,System.Object):
    name:
      CSharp:
      - id: System.Net.WebClient.DownloadStringAsync(System.Uri,System.Object)
        name: DownloadStringAsync
        nameWithType: WebClient.DownloadStringAsync
        qualifiedName: System.Net.WebClient.DownloadStringAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.DownloadStringAsync(System.Uri,System.Object)
        name: DownloadStringAsync
        nameWithType: WebClient.DownloadStringAsync
        qualifiedName: System.Net.WebClient.DownloadStringAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.DownloadStringAsync(System.Uri,System.Object)
  System.Net.WebClient.DownloadStringTaskAsync(System.String):
    name:
      CSharp:
      - id: System.Net.WebClient.DownloadStringTaskAsync(System.String)
        name: DownloadStringTaskAsync
        nameWithType: WebClient.DownloadStringTaskAsync
        qualifiedName: System.Net.WebClient.DownloadStringTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.DownloadStringTaskAsync(System.String)
        name: DownloadStringTaskAsync
        nameWithType: WebClient.DownloadStringTaskAsync
        qualifiedName: System.Net.WebClient.DownloadStringTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.DownloadStringTaskAsync(System.String)
  System.Net.WebClient.DownloadStringTaskAsync(System.Uri):
    name:
      CSharp:
      - id: System.Net.WebClient.DownloadStringTaskAsync(System.Uri)
        name: DownloadStringTaskAsync
        nameWithType: WebClient.DownloadStringTaskAsync
        qualifiedName: System.Net.WebClient.DownloadStringTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.DownloadStringTaskAsync(System.Uri)
        name: DownloadStringTaskAsync
        nameWithType: WebClient.DownloadStringTaskAsync
        qualifiedName: System.Net.WebClient.DownloadStringTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.DownloadStringTaskAsync(System.Uri)
  System.Net.WebClient.GetWebResponse(System.Net.WebRequest):
    name:
      CSharp:
      - id: System.Net.WebClient.GetWebResponse(System.Net.WebRequest)
        name: GetWebResponse
        nameWithType: WebClient.GetWebResponse
        qualifiedName: System.Net.WebClient.GetWebResponse
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Net.WebRequest
        name: WebRequest
        nameWithType: WebRequest
        qualifiedName: System.Net.WebRequest
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.GetWebResponse(System.Net.WebRequest)
        name: GetWebResponse
        nameWithType: WebClient.GetWebResponse
        qualifiedName: System.Net.WebClient.GetWebResponse
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Net.WebRequest
        name: WebRequest
        nameWithType: WebRequest
        qualifiedName: System.Net.WebRequest
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.GetWebResponse(System.Net.WebRequest)
  System.Net.WebClient.GetWebResponse(System.Net.WebRequest,System.IAsyncResult):
    name:
      CSharp:
      - id: System.Net.WebClient.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)
        name: GetWebResponse
        nameWithType: WebClient.GetWebResponse
        qualifiedName: System.Net.WebClient.GetWebResponse
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Net.WebRequest
        name: WebRequest
        nameWithType: WebRequest
        qualifiedName: System.Net.WebRequest
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IAsyncResult
        name: IAsyncResult
        nameWithType: IAsyncResult
        qualifiedName: System.IAsyncResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)
        name: GetWebResponse
        nameWithType: WebClient.GetWebResponse
        qualifiedName: System.Net.WebClient.GetWebResponse
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Net.WebRequest
        name: WebRequest
        nameWithType: WebRequest
        qualifiedName: System.Net.WebRequest
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IAsyncResult
        name: IAsyncResult
        nameWithType: IAsyncResult
        qualifiedName: System.IAsyncResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)
  System.Net.WebClient.OnDownloadDataCompleted(System.Net.DownloadDataCompletedEventArgs):
    name:
      CSharp:
      - id: System.Net.WebClient.OnDownloadDataCompleted(System.Net.DownloadDataCompletedEventArgs)
        name: OnDownloadDataCompleted
        nameWithType: WebClient.OnDownloadDataCompleted
        qualifiedName: System.Net.WebClient.OnDownloadDataCompleted
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Net.DownloadDataCompletedEventArgs
        name: DownloadDataCompletedEventArgs
        nameWithType: DownloadDataCompletedEventArgs
        qualifiedName: System.Net.DownloadDataCompletedEventArgs
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.OnDownloadDataCompleted(System.Net.DownloadDataCompletedEventArgs)
        name: OnDownloadDataCompleted
        nameWithType: WebClient.OnDownloadDataCompleted
        qualifiedName: System.Net.WebClient.OnDownloadDataCompleted
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Net.DownloadDataCompletedEventArgs
        name: DownloadDataCompletedEventArgs
        nameWithType: DownloadDataCompletedEventArgs
        qualifiedName: System.Net.DownloadDataCompletedEventArgs
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.OnDownloadDataCompleted(System.Net.DownloadDataCompletedEventArgs)
  System.Net.WebClient.OnDownloadFileCompleted(System.ComponentModel.AsyncCompletedEventArgs):
    name:
      CSharp:
      - id: System.Net.WebClient.OnDownloadFileCompleted(System.ComponentModel.AsyncCompletedEventArgs)
        name: OnDownloadFileCompleted
        nameWithType: WebClient.OnDownloadFileCompleted
        qualifiedName: System.Net.WebClient.OnDownloadFileCompleted
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.ComponentModel.AsyncCompletedEventArgs
        name: AsyncCompletedEventArgs
        nameWithType: AsyncCompletedEventArgs
        qualifiedName: System.ComponentModel.AsyncCompletedEventArgs
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.OnDownloadFileCompleted(System.ComponentModel.AsyncCompletedEventArgs)
        name: OnDownloadFileCompleted
        nameWithType: WebClient.OnDownloadFileCompleted
        qualifiedName: System.Net.WebClient.OnDownloadFileCompleted
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.ComponentModel.AsyncCompletedEventArgs
        name: AsyncCompletedEventArgs
        nameWithType: AsyncCompletedEventArgs
        qualifiedName: System.ComponentModel.AsyncCompletedEventArgs
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.OnDownloadFileCompleted(System.ComponentModel.AsyncCompletedEventArgs)
  System.Net.WebClient.OnDownloadProgressChanged(System.Net.DownloadProgressChangedEventArgs):
    name:
      CSharp:
      - id: System.Net.WebClient.OnDownloadProgressChanged(System.Net.DownloadProgressChangedEventArgs)
        name: OnDownloadProgressChanged
        nameWithType: WebClient.OnDownloadProgressChanged
        qualifiedName: System.Net.WebClient.OnDownloadProgressChanged
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Net.DownloadProgressChangedEventArgs
        name: DownloadProgressChangedEventArgs
        nameWithType: DownloadProgressChangedEventArgs
        qualifiedName: System.Net.DownloadProgressChangedEventArgs
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.OnDownloadProgressChanged(System.Net.DownloadProgressChangedEventArgs)
        name: OnDownloadProgressChanged
        nameWithType: WebClient.OnDownloadProgressChanged
        qualifiedName: System.Net.WebClient.OnDownloadProgressChanged
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Net.DownloadProgressChangedEventArgs
        name: DownloadProgressChangedEventArgs
        nameWithType: DownloadProgressChangedEventArgs
        qualifiedName: System.Net.DownloadProgressChangedEventArgs
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.OnDownloadProgressChanged(System.Net.DownloadProgressChangedEventArgs)
  System.Net.WebClient.OnDownloadStringCompleted(System.Net.DownloadStringCompletedEventArgs):
    name:
      CSharp:
      - id: System.Net.WebClient.OnDownloadStringCompleted(System.Net.DownloadStringCompletedEventArgs)
        name: OnDownloadStringCompleted
        nameWithType: WebClient.OnDownloadStringCompleted
        qualifiedName: System.Net.WebClient.OnDownloadStringCompleted
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Net.DownloadStringCompletedEventArgs
        name: DownloadStringCompletedEventArgs
        nameWithType: DownloadStringCompletedEventArgs
        qualifiedName: System.Net.DownloadStringCompletedEventArgs
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.OnDownloadStringCompleted(System.Net.DownloadStringCompletedEventArgs)
        name: OnDownloadStringCompleted
        nameWithType: WebClient.OnDownloadStringCompleted
        qualifiedName: System.Net.WebClient.OnDownloadStringCompleted
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Net.DownloadStringCompletedEventArgs
        name: DownloadStringCompletedEventArgs
        nameWithType: DownloadStringCompletedEventArgs
        qualifiedName: System.Net.DownloadStringCompletedEventArgs
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.OnDownloadStringCompleted(System.Net.DownloadStringCompletedEventArgs)
  System.Net.WebClient.OnOpenReadCompleted(System.Net.OpenReadCompletedEventArgs):
    name:
      CSharp:
      - id: System.Net.WebClient.OnOpenReadCompleted(System.Net.OpenReadCompletedEventArgs)
        name: OnOpenReadCompleted
        nameWithType: WebClient.OnOpenReadCompleted
        qualifiedName: System.Net.WebClient.OnOpenReadCompleted
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Net.OpenReadCompletedEventArgs
        name: OpenReadCompletedEventArgs
        nameWithType: OpenReadCompletedEventArgs
        qualifiedName: System.Net.OpenReadCompletedEventArgs
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.OnOpenReadCompleted(System.Net.OpenReadCompletedEventArgs)
        name: OnOpenReadCompleted
        nameWithType: WebClient.OnOpenReadCompleted
        qualifiedName: System.Net.WebClient.OnOpenReadCompleted
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Net.OpenReadCompletedEventArgs
        name: OpenReadCompletedEventArgs
        nameWithType: OpenReadCompletedEventArgs
        qualifiedName: System.Net.OpenReadCompletedEventArgs
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.OnOpenReadCompleted(System.Net.OpenReadCompletedEventArgs)
  System.Net.WebClient.OnOpenWriteCompleted(System.Net.OpenWriteCompletedEventArgs):
    name:
      CSharp:
      - id: System.Net.WebClient.OnOpenWriteCompleted(System.Net.OpenWriteCompletedEventArgs)
        name: OnOpenWriteCompleted
        nameWithType: WebClient.OnOpenWriteCompleted
        qualifiedName: System.Net.WebClient.OnOpenWriteCompleted
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Net.OpenWriteCompletedEventArgs
        name: OpenWriteCompletedEventArgs
        nameWithType: OpenWriteCompletedEventArgs
        qualifiedName: System.Net.OpenWriteCompletedEventArgs
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.OnOpenWriteCompleted(System.Net.OpenWriteCompletedEventArgs)
        name: OnOpenWriteCompleted
        nameWithType: WebClient.OnOpenWriteCompleted
        qualifiedName: System.Net.WebClient.OnOpenWriteCompleted
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Net.OpenWriteCompletedEventArgs
        name: OpenWriteCompletedEventArgs
        nameWithType: OpenWriteCompletedEventArgs
        qualifiedName: System.Net.OpenWriteCompletedEventArgs
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.OnOpenWriteCompleted(System.Net.OpenWriteCompletedEventArgs)
  System.Net.WebClient.OnUploadDataCompleted(System.Net.UploadDataCompletedEventArgs):
    name:
      CSharp:
      - id: System.Net.WebClient.OnUploadDataCompleted(System.Net.UploadDataCompletedEventArgs)
        name: OnUploadDataCompleted
        nameWithType: WebClient.OnUploadDataCompleted
        qualifiedName: System.Net.WebClient.OnUploadDataCompleted
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Net.UploadDataCompletedEventArgs
        name: UploadDataCompletedEventArgs
        nameWithType: UploadDataCompletedEventArgs
        qualifiedName: System.Net.UploadDataCompletedEventArgs
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.OnUploadDataCompleted(System.Net.UploadDataCompletedEventArgs)
        name: OnUploadDataCompleted
        nameWithType: WebClient.OnUploadDataCompleted
        qualifiedName: System.Net.WebClient.OnUploadDataCompleted
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Net.UploadDataCompletedEventArgs
        name: UploadDataCompletedEventArgs
        nameWithType: UploadDataCompletedEventArgs
        qualifiedName: System.Net.UploadDataCompletedEventArgs
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.OnUploadDataCompleted(System.Net.UploadDataCompletedEventArgs)
  System.Net.WebClient.OnUploadFileCompleted(System.Net.UploadFileCompletedEventArgs):
    name:
      CSharp:
      - id: System.Net.WebClient.OnUploadFileCompleted(System.Net.UploadFileCompletedEventArgs)
        name: OnUploadFileCompleted
        nameWithType: WebClient.OnUploadFileCompleted
        qualifiedName: System.Net.WebClient.OnUploadFileCompleted
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Net.UploadFileCompletedEventArgs
        name: UploadFileCompletedEventArgs
        nameWithType: UploadFileCompletedEventArgs
        qualifiedName: System.Net.UploadFileCompletedEventArgs
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.OnUploadFileCompleted(System.Net.UploadFileCompletedEventArgs)
        name: OnUploadFileCompleted
        nameWithType: WebClient.OnUploadFileCompleted
        qualifiedName: System.Net.WebClient.OnUploadFileCompleted
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Net.UploadFileCompletedEventArgs
        name: UploadFileCompletedEventArgs
        nameWithType: UploadFileCompletedEventArgs
        qualifiedName: System.Net.UploadFileCompletedEventArgs
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.OnUploadFileCompleted(System.Net.UploadFileCompletedEventArgs)
  System.Net.WebClient.OnUploadProgressChanged(System.Net.UploadProgressChangedEventArgs):
    name:
      CSharp:
      - id: System.Net.WebClient.OnUploadProgressChanged(System.Net.UploadProgressChangedEventArgs)
        name: OnUploadProgressChanged
        nameWithType: WebClient.OnUploadProgressChanged
        qualifiedName: System.Net.WebClient.OnUploadProgressChanged
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Net.UploadProgressChangedEventArgs
        name: UploadProgressChangedEventArgs
        nameWithType: UploadProgressChangedEventArgs
        qualifiedName: System.Net.UploadProgressChangedEventArgs
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.OnUploadProgressChanged(System.Net.UploadProgressChangedEventArgs)
        name: OnUploadProgressChanged
        nameWithType: WebClient.OnUploadProgressChanged
        qualifiedName: System.Net.WebClient.OnUploadProgressChanged
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Net.UploadProgressChangedEventArgs
        name: UploadProgressChangedEventArgs
        nameWithType: UploadProgressChangedEventArgs
        qualifiedName: System.Net.UploadProgressChangedEventArgs
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.OnUploadProgressChanged(System.Net.UploadProgressChangedEventArgs)
  System.Net.WebClient.OnUploadStringCompleted(System.Net.UploadStringCompletedEventArgs):
    name:
      CSharp:
      - id: System.Net.WebClient.OnUploadStringCompleted(System.Net.UploadStringCompletedEventArgs)
        name: OnUploadStringCompleted
        nameWithType: WebClient.OnUploadStringCompleted
        qualifiedName: System.Net.WebClient.OnUploadStringCompleted
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Net.UploadStringCompletedEventArgs
        name: UploadStringCompletedEventArgs
        nameWithType: UploadStringCompletedEventArgs
        qualifiedName: System.Net.UploadStringCompletedEventArgs
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.OnUploadStringCompleted(System.Net.UploadStringCompletedEventArgs)
        name: OnUploadStringCompleted
        nameWithType: WebClient.OnUploadStringCompleted
        qualifiedName: System.Net.WebClient.OnUploadStringCompleted
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Net.UploadStringCompletedEventArgs
        name: UploadStringCompletedEventArgs
        nameWithType: UploadStringCompletedEventArgs
        qualifiedName: System.Net.UploadStringCompletedEventArgs
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.OnUploadStringCompleted(System.Net.UploadStringCompletedEventArgs)
  System.Net.WebClient.OnUploadValuesCompleted(System.Net.UploadValuesCompletedEventArgs):
    name:
      CSharp:
      - id: System.Net.WebClient.OnUploadValuesCompleted(System.Net.UploadValuesCompletedEventArgs)
        name: OnUploadValuesCompleted
        nameWithType: WebClient.OnUploadValuesCompleted
        qualifiedName: System.Net.WebClient.OnUploadValuesCompleted
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Net.UploadValuesCompletedEventArgs
        name: UploadValuesCompletedEventArgs
        nameWithType: UploadValuesCompletedEventArgs
        qualifiedName: System.Net.UploadValuesCompletedEventArgs
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.OnUploadValuesCompleted(System.Net.UploadValuesCompletedEventArgs)
        name: OnUploadValuesCompleted
        nameWithType: WebClient.OnUploadValuesCompleted
        qualifiedName: System.Net.WebClient.OnUploadValuesCompleted
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Net.UploadValuesCompletedEventArgs
        name: UploadValuesCompletedEventArgs
        nameWithType: UploadValuesCompletedEventArgs
        qualifiedName: System.Net.UploadValuesCompletedEventArgs
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.OnUploadValuesCompleted(System.Net.UploadValuesCompletedEventArgs)
  System.Net.WebClient.OpenRead(System.String):
    name:
      CSharp:
      - id: System.Net.WebClient.OpenRead(System.String)
        name: OpenRead
        nameWithType: WebClient.OpenRead
        qualifiedName: System.Net.WebClient.OpenRead
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.OpenRead(System.String)
        name: OpenRead
        nameWithType: WebClient.OpenRead
        qualifiedName: System.Net.WebClient.OpenRead
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.OpenRead(System.String)
  System.Net.WebClient.OpenRead(System.Uri):
    name:
      CSharp:
      - id: System.Net.WebClient.OpenRead(System.Uri)
        name: OpenRead
        nameWithType: WebClient.OpenRead
        qualifiedName: System.Net.WebClient.OpenRead
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.OpenRead(System.Uri)
        name: OpenRead
        nameWithType: WebClient.OpenRead
        qualifiedName: System.Net.WebClient.OpenRead
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.OpenRead(System.Uri)
  System.Net.WebClient.OpenReadAsync(System.Uri):
    name:
      CSharp:
      - id: System.Net.WebClient.OpenReadAsync(System.Uri)
        name: OpenReadAsync
        nameWithType: WebClient.OpenReadAsync
        qualifiedName: System.Net.WebClient.OpenReadAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.OpenReadAsync(System.Uri)
        name: OpenReadAsync
        nameWithType: WebClient.OpenReadAsync
        qualifiedName: System.Net.WebClient.OpenReadAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.OpenReadAsync(System.Uri)
  System.Net.WebClient.OpenReadAsync(System.Uri,System.Object):
    name:
      CSharp:
      - id: System.Net.WebClient.OpenReadAsync(System.Uri,System.Object)
        name: OpenReadAsync
        nameWithType: WebClient.OpenReadAsync
        qualifiedName: System.Net.WebClient.OpenReadAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.OpenReadAsync(System.Uri,System.Object)
        name: OpenReadAsync
        nameWithType: WebClient.OpenReadAsync
        qualifiedName: System.Net.WebClient.OpenReadAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.OpenReadAsync(System.Uri,System.Object)
  System.Net.WebClient.OpenReadTaskAsync(System.String):
    name:
      CSharp:
      - id: System.Net.WebClient.OpenReadTaskAsync(System.String)
        name: OpenReadTaskAsync
        nameWithType: WebClient.OpenReadTaskAsync
        qualifiedName: System.Net.WebClient.OpenReadTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.OpenReadTaskAsync(System.String)
        name: OpenReadTaskAsync
        nameWithType: WebClient.OpenReadTaskAsync
        qualifiedName: System.Net.WebClient.OpenReadTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.OpenReadTaskAsync(System.String)
  System.Net.WebClient.OpenReadTaskAsync(System.Uri):
    name:
      CSharp:
      - id: System.Net.WebClient.OpenReadTaskAsync(System.Uri)
        name: OpenReadTaskAsync
        nameWithType: WebClient.OpenReadTaskAsync
        qualifiedName: System.Net.WebClient.OpenReadTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.OpenReadTaskAsync(System.Uri)
        name: OpenReadTaskAsync
        nameWithType: WebClient.OpenReadTaskAsync
        qualifiedName: System.Net.WebClient.OpenReadTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.OpenReadTaskAsync(System.Uri)
  System.Net.WebClient.OpenWrite(System.String):
    name:
      CSharp:
      - id: System.Net.WebClient.OpenWrite(System.String)
        name: OpenWrite
        nameWithType: WebClient.OpenWrite
        qualifiedName: System.Net.WebClient.OpenWrite
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.OpenWrite(System.String)
        name: OpenWrite
        nameWithType: WebClient.OpenWrite
        qualifiedName: System.Net.WebClient.OpenWrite
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.OpenWrite(System.String)
  System.Net.WebClient.OpenWrite(System.String,System.String):
    name:
      CSharp:
      - id: System.Net.WebClient.OpenWrite(System.String,System.String)
        name: OpenWrite
        nameWithType: WebClient.OpenWrite
        qualifiedName: System.Net.WebClient.OpenWrite
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.OpenWrite(System.String,System.String)
        name: OpenWrite
        nameWithType: WebClient.OpenWrite
        qualifiedName: System.Net.WebClient.OpenWrite
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.OpenWrite(System.String,System.String)
  System.Net.WebClient.OpenWrite(System.Uri):
    name:
      CSharp:
      - id: System.Net.WebClient.OpenWrite(System.Uri)
        name: OpenWrite
        nameWithType: WebClient.OpenWrite
        qualifiedName: System.Net.WebClient.OpenWrite
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.OpenWrite(System.Uri)
        name: OpenWrite
        nameWithType: WebClient.OpenWrite
        qualifiedName: System.Net.WebClient.OpenWrite
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.OpenWrite(System.Uri)
  System.Net.WebClient.OpenWrite(System.Uri,System.String):
    name:
      CSharp:
      - id: System.Net.WebClient.OpenWrite(System.Uri,System.String)
        name: OpenWrite
        nameWithType: WebClient.OpenWrite
        qualifiedName: System.Net.WebClient.OpenWrite
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.OpenWrite(System.Uri,System.String)
        name: OpenWrite
        nameWithType: WebClient.OpenWrite
        qualifiedName: System.Net.WebClient.OpenWrite
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.OpenWrite(System.Uri,System.String)
  System.Net.WebClient.OpenWriteAsync(System.Uri):
    name:
      CSharp:
      - id: System.Net.WebClient.OpenWriteAsync(System.Uri)
        name: OpenWriteAsync
        nameWithType: WebClient.OpenWriteAsync
        qualifiedName: System.Net.WebClient.OpenWriteAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.OpenWriteAsync(System.Uri)
        name: OpenWriteAsync
        nameWithType: WebClient.OpenWriteAsync
        qualifiedName: System.Net.WebClient.OpenWriteAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.OpenWriteAsync(System.Uri)
  System.Net.WebClient.OpenWriteAsync(System.Uri,System.String):
    name:
      CSharp:
      - id: System.Net.WebClient.OpenWriteAsync(System.Uri,System.String)
        name: OpenWriteAsync
        nameWithType: WebClient.OpenWriteAsync
        qualifiedName: System.Net.WebClient.OpenWriteAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.OpenWriteAsync(System.Uri,System.String)
        name: OpenWriteAsync
        nameWithType: WebClient.OpenWriteAsync
        qualifiedName: System.Net.WebClient.OpenWriteAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.OpenWriteAsync(System.Uri,System.String)
  System.Net.WebClient.OpenWriteAsync(System.Uri,System.String,System.Object):
    name:
      CSharp:
      - id: System.Net.WebClient.OpenWriteAsync(System.Uri,System.String,System.Object)
        name: OpenWriteAsync
        nameWithType: WebClient.OpenWriteAsync
        qualifiedName: System.Net.WebClient.OpenWriteAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.OpenWriteAsync(System.Uri,System.String,System.Object)
        name: OpenWriteAsync
        nameWithType: WebClient.OpenWriteAsync
        qualifiedName: System.Net.WebClient.OpenWriteAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.OpenWriteAsync(System.Uri,System.String,System.Object)
  System.Net.WebClient.OpenWriteTaskAsync(System.String):
    name:
      CSharp:
      - id: System.Net.WebClient.OpenWriteTaskAsync(System.String)
        name: OpenWriteTaskAsync
        nameWithType: WebClient.OpenWriteTaskAsync
        qualifiedName: System.Net.WebClient.OpenWriteTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.OpenWriteTaskAsync(System.String)
        name: OpenWriteTaskAsync
        nameWithType: WebClient.OpenWriteTaskAsync
        qualifiedName: System.Net.WebClient.OpenWriteTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.OpenWriteTaskAsync(System.String)
  System.Net.WebClient.OpenWriteTaskAsync(System.String,System.String):
    name:
      CSharp:
      - id: System.Net.WebClient.OpenWriteTaskAsync(System.String,System.String)
        name: OpenWriteTaskAsync
        nameWithType: WebClient.OpenWriteTaskAsync
        qualifiedName: System.Net.WebClient.OpenWriteTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.OpenWriteTaskAsync(System.String,System.String)
        name: OpenWriteTaskAsync
        nameWithType: WebClient.OpenWriteTaskAsync
        qualifiedName: System.Net.WebClient.OpenWriteTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.OpenWriteTaskAsync(System.String,System.String)
  System.Net.WebClient.OpenWriteTaskAsync(System.Uri):
    name:
      CSharp:
      - id: System.Net.WebClient.OpenWriteTaskAsync(System.Uri)
        name: OpenWriteTaskAsync
        nameWithType: WebClient.OpenWriteTaskAsync
        qualifiedName: System.Net.WebClient.OpenWriteTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.OpenWriteTaskAsync(System.Uri)
        name: OpenWriteTaskAsync
        nameWithType: WebClient.OpenWriteTaskAsync
        qualifiedName: System.Net.WebClient.OpenWriteTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.OpenWriteTaskAsync(System.Uri)
  System.Net.WebClient.OpenWriteTaskAsync(System.Uri,System.String):
    name:
      CSharp:
      - id: System.Net.WebClient.OpenWriteTaskAsync(System.Uri,System.String)
        name: OpenWriteTaskAsync
        nameWithType: WebClient.OpenWriteTaskAsync
        qualifiedName: System.Net.WebClient.OpenWriteTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.OpenWriteTaskAsync(System.Uri,System.String)
        name: OpenWriteTaskAsync
        nameWithType: WebClient.OpenWriteTaskAsync
        qualifiedName: System.Net.WebClient.OpenWriteTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.OpenWriteTaskAsync(System.Uri,System.String)
  System.Net.WebClient.UploadData(System.String,System.Byte[]):
    name:
      CSharp:
      - id: System.Net.WebClient.UploadData(System.String,System.Byte[])
        name: UploadData
        nameWithType: WebClient.UploadData
        qualifiedName: System.Net.WebClient.UploadData
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.UploadData(System.String,System.Byte[])
        name: UploadData
        nameWithType: WebClient.UploadData
        qualifiedName: System.Net.WebClient.UploadData
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.UploadData(System.String,System.Byte[])
  System.Net.WebClient.UploadData(System.String,System.String,System.Byte[]):
    name:
      CSharp:
      - id: System.Net.WebClient.UploadData(System.String,System.String,System.Byte[])
        name: UploadData
        nameWithType: WebClient.UploadData
        qualifiedName: System.Net.WebClient.UploadData
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.UploadData(System.String,System.String,System.Byte[])
        name: UploadData
        nameWithType: WebClient.UploadData
        qualifiedName: System.Net.WebClient.UploadData
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.UploadData(System.String,System.String,System.Byte[])
  System.Net.WebClient.UploadData(System.Uri,System.Byte[]):
    name:
      CSharp:
      - id: System.Net.WebClient.UploadData(System.Uri,System.Byte[])
        name: UploadData
        nameWithType: WebClient.UploadData
        qualifiedName: System.Net.WebClient.UploadData
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.UploadData(System.Uri,System.Byte[])
        name: UploadData
        nameWithType: WebClient.UploadData
        qualifiedName: System.Net.WebClient.UploadData
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.UploadData(System.Uri,System.Byte[])
  System.Net.WebClient.UploadData(System.Uri,System.String,System.Byte[]):
    name:
      CSharp:
      - id: System.Net.WebClient.UploadData(System.Uri,System.String,System.Byte[])
        name: UploadData
        nameWithType: WebClient.UploadData
        qualifiedName: System.Net.WebClient.UploadData
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.UploadData(System.Uri,System.String,System.Byte[])
        name: UploadData
        nameWithType: WebClient.UploadData
        qualifiedName: System.Net.WebClient.UploadData
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.UploadData(System.Uri,System.String,System.Byte[])
  System.Net.WebClient.UploadDataAsync(System.Uri,System.Byte[]):
    name:
      CSharp:
      - id: System.Net.WebClient.UploadDataAsync(System.Uri,System.Byte[])
        name: UploadDataAsync
        nameWithType: WebClient.UploadDataAsync
        qualifiedName: System.Net.WebClient.UploadDataAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.UploadDataAsync(System.Uri,System.Byte[])
        name: UploadDataAsync
        nameWithType: WebClient.UploadDataAsync
        qualifiedName: System.Net.WebClient.UploadDataAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.UploadDataAsync(System.Uri,System.Byte[])
  System.Net.WebClient.UploadDataAsync(System.Uri,System.String,System.Byte[]):
    name:
      CSharp:
      - id: System.Net.WebClient.UploadDataAsync(System.Uri,System.String,System.Byte[])
        name: UploadDataAsync
        nameWithType: WebClient.UploadDataAsync
        qualifiedName: System.Net.WebClient.UploadDataAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.UploadDataAsync(System.Uri,System.String,System.Byte[])
        name: UploadDataAsync
        nameWithType: WebClient.UploadDataAsync
        qualifiedName: System.Net.WebClient.UploadDataAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.UploadDataAsync(System.Uri,System.String,System.Byte[])
  System.Net.WebClient.UploadDataAsync(System.Uri,System.String,System.Byte[],System.Object):
    name:
      CSharp:
      - id: System.Net.WebClient.UploadDataAsync(System.Uri,System.String,System.Byte[],System.Object)
        name: UploadDataAsync
        nameWithType: WebClient.UploadDataAsync
        qualifiedName: System.Net.WebClient.UploadDataAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.UploadDataAsync(System.Uri,System.String,System.Byte[],System.Object)
        name: UploadDataAsync
        nameWithType: WebClient.UploadDataAsync
        qualifiedName: System.Net.WebClient.UploadDataAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.UploadDataAsync(System.Uri,System.String,System.Byte[],System.Object)
  System.Net.WebClient.UploadDataTaskAsync(System.String,System.Byte[]):
    name:
      CSharp:
      - id: System.Net.WebClient.UploadDataTaskAsync(System.String,System.Byte[])
        name: UploadDataTaskAsync
        nameWithType: WebClient.UploadDataTaskAsync
        qualifiedName: System.Net.WebClient.UploadDataTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.UploadDataTaskAsync(System.String,System.Byte[])
        name: UploadDataTaskAsync
        nameWithType: WebClient.UploadDataTaskAsync
        qualifiedName: System.Net.WebClient.UploadDataTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.UploadDataTaskAsync(System.String,System.Byte[])
  System.Net.WebClient.UploadDataTaskAsync(System.String,System.String,System.Byte[]):
    name:
      CSharp:
      - id: System.Net.WebClient.UploadDataTaskAsync(System.String,System.String,System.Byte[])
        name: UploadDataTaskAsync
        nameWithType: WebClient.UploadDataTaskAsync
        qualifiedName: System.Net.WebClient.UploadDataTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.UploadDataTaskAsync(System.String,System.String,System.Byte[])
        name: UploadDataTaskAsync
        nameWithType: WebClient.UploadDataTaskAsync
        qualifiedName: System.Net.WebClient.UploadDataTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.UploadDataTaskAsync(System.String,System.String,System.Byte[])
  System.Net.WebClient.UploadDataTaskAsync(System.Uri,System.Byte[]):
    name:
      CSharp:
      - id: System.Net.WebClient.UploadDataTaskAsync(System.Uri,System.Byte[])
        name: UploadDataTaskAsync
        nameWithType: WebClient.UploadDataTaskAsync
        qualifiedName: System.Net.WebClient.UploadDataTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.UploadDataTaskAsync(System.Uri,System.Byte[])
        name: UploadDataTaskAsync
        nameWithType: WebClient.UploadDataTaskAsync
        qualifiedName: System.Net.WebClient.UploadDataTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.UploadDataTaskAsync(System.Uri,System.Byte[])
  System.Net.WebClient.UploadDataTaskAsync(System.Uri,System.String,System.Byte[]):
    name:
      CSharp:
      - id: System.Net.WebClient.UploadDataTaskAsync(System.Uri,System.String,System.Byte[])
        name: UploadDataTaskAsync
        nameWithType: WebClient.UploadDataTaskAsync
        qualifiedName: System.Net.WebClient.UploadDataTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.UploadDataTaskAsync(System.Uri,System.String,System.Byte[])
        name: UploadDataTaskAsync
        nameWithType: WebClient.UploadDataTaskAsync
        qualifiedName: System.Net.WebClient.UploadDataTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.UploadDataTaskAsync(System.Uri,System.String,System.Byte[])
  System.Net.WebClient.UploadFile(System.String,System.String):
    name:
      CSharp:
      - id: System.Net.WebClient.UploadFile(System.String,System.String)
        name: UploadFile
        nameWithType: WebClient.UploadFile
        qualifiedName: System.Net.WebClient.UploadFile
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.UploadFile(System.String,System.String)
        name: UploadFile
        nameWithType: WebClient.UploadFile
        qualifiedName: System.Net.WebClient.UploadFile
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.UploadFile(System.String,System.String)
  System.Net.WebClient.UploadFile(System.String,System.String,System.String):
    name:
      CSharp:
      - id: System.Net.WebClient.UploadFile(System.String,System.String,System.String)
        name: UploadFile
        nameWithType: WebClient.UploadFile
        qualifiedName: System.Net.WebClient.UploadFile
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.UploadFile(System.String,System.String,System.String)
        name: UploadFile
        nameWithType: WebClient.UploadFile
        qualifiedName: System.Net.WebClient.UploadFile
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.UploadFile(System.String,System.String,System.String)
  System.Net.WebClient.UploadFile(System.Uri,System.String):
    name:
      CSharp:
      - id: System.Net.WebClient.UploadFile(System.Uri,System.String)
        name: UploadFile
        nameWithType: WebClient.UploadFile
        qualifiedName: System.Net.WebClient.UploadFile
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.UploadFile(System.Uri,System.String)
        name: UploadFile
        nameWithType: WebClient.UploadFile
        qualifiedName: System.Net.WebClient.UploadFile
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.UploadFile(System.Uri,System.String)
  System.Net.WebClient.UploadFile(System.Uri,System.String,System.String):
    name:
      CSharp:
      - id: System.Net.WebClient.UploadFile(System.Uri,System.String,System.String)
        name: UploadFile
        nameWithType: WebClient.UploadFile
        qualifiedName: System.Net.WebClient.UploadFile
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.UploadFile(System.Uri,System.String,System.String)
        name: UploadFile
        nameWithType: WebClient.UploadFile
        qualifiedName: System.Net.WebClient.UploadFile
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.UploadFile(System.Uri,System.String,System.String)
  System.Net.WebClient.UploadFileAsync(System.Uri,System.String):
    name:
      CSharp:
      - id: System.Net.WebClient.UploadFileAsync(System.Uri,System.String)
        name: UploadFileAsync
        nameWithType: WebClient.UploadFileAsync
        qualifiedName: System.Net.WebClient.UploadFileAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.UploadFileAsync(System.Uri,System.String)
        name: UploadFileAsync
        nameWithType: WebClient.UploadFileAsync
        qualifiedName: System.Net.WebClient.UploadFileAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.UploadFileAsync(System.Uri,System.String)
  System.Net.WebClient.UploadFileAsync(System.Uri,System.String,System.String):
    name:
      CSharp:
      - id: System.Net.WebClient.UploadFileAsync(System.Uri,System.String,System.String)
        name: UploadFileAsync
        nameWithType: WebClient.UploadFileAsync
        qualifiedName: System.Net.WebClient.UploadFileAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.UploadFileAsync(System.Uri,System.String,System.String)
        name: UploadFileAsync
        nameWithType: WebClient.UploadFileAsync
        qualifiedName: System.Net.WebClient.UploadFileAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.UploadFileAsync(System.Uri,System.String,System.String)
  System.Net.WebClient.UploadFileAsync(System.Uri,System.String,System.String,System.Object):
    name:
      CSharp:
      - id: System.Net.WebClient.UploadFileAsync(System.Uri,System.String,System.String,System.Object)
        name: UploadFileAsync
        nameWithType: WebClient.UploadFileAsync
        qualifiedName: System.Net.WebClient.UploadFileAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.UploadFileAsync(System.Uri,System.String,System.String,System.Object)
        name: UploadFileAsync
        nameWithType: WebClient.UploadFileAsync
        qualifiedName: System.Net.WebClient.UploadFileAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.UploadFileAsync(System.Uri,System.String,System.String,System.Object)
  System.Net.WebClient.UploadFileTaskAsync(System.String,System.String):
    name:
      CSharp:
      - id: System.Net.WebClient.UploadFileTaskAsync(System.String,System.String)
        name: UploadFileTaskAsync
        nameWithType: WebClient.UploadFileTaskAsync
        qualifiedName: System.Net.WebClient.UploadFileTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.UploadFileTaskAsync(System.String,System.String)
        name: UploadFileTaskAsync
        nameWithType: WebClient.UploadFileTaskAsync
        qualifiedName: System.Net.WebClient.UploadFileTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.UploadFileTaskAsync(System.String,System.String)
  System.Net.WebClient.UploadFileTaskAsync(System.String,System.String,System.String):
    name:
      CSharp:
      - id: System.Net.WebClient.UploadFileTaskAsync(System.String,System.String,System.String)
        name: UploadFileTaskAsync
        nameWithType: WebClient.UploadFileTaskAsync
        qualifiedName: System.Net.WebClient.UploadFileTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.UploadFileTaskAsync(System.String,System.String,System.String)
        name: UploadFileTaskAsync
        nameWithType: WebClient.UploadFileTaskAsync
        qualifiedName: System.Net.WebClient.UploadFileTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.UploadFileTaskAsync(System.String,System.String,System.String)
  System.Net.WebClient.UploadFileTaskAsync(System.Uri,System.String):
    name:
      CSharp:
      - id: System.Net.WebClient.UploadFileTaskAsync(System.Uri,System.String)
        name: UploadFileTaskAsync
        nameWithType: WebClient.UploadFileTaskAsync
        qualifiedName: System.Net.WebClient.UploadFileTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.UploadFileTaskAsync(System.Uri,System.String)
        name: UploadFileTaskAsync
        nameWithType: WebClient.UploadFileTaskAsync
        qualifiedName: System.Net.WebClient.UploadFileTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.UploadFileTaskAsync(System.Uri,System.String)
  System.Net.WebClient.UploadFileTaskAsync(System.Uri,System.String,System.String):
    name:
      CSharp:
      - id: System.Net.WebClient.UploadFileTaskAsync(System.Uri,System.String,System.String)
        name: UploadFileTaskAsync
        nameWithType: WebClient.UploadFileTaskAsync
        qualifiedName: System.Net.WebClient.UploadFileTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.UploadFileTaskAsync(System.Uri,System.String,System.String)
        name: UploadFileTaskAsync
        nameWithType: WebClient.UploadFileTaskAsync
        qualifiedName: System.Net.WebClient.UploadFileTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.UploadFileTaskAsync(System.Uri,System.String,System.String)
  System.Net.WebClient.UploadString(System.String,System.String):
    name:
      CSharp:
      - id: System.Net.WebClient.UploadString(System.String,System.String)
        name: UploadString
        nameWithType: WebClient.UploadString
        qualifiedName: System.Net.WebClient.UploadString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.UploadString(System.String,System.String)
        name: UploadString
        nameWithType: WebClient.UploadString
        qualifiedName: System.Net.WebClient.UploadString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.UploadString(System.String,System.String)
  System.Net.WebClient.UploadString(System.String,System.String,System.String):
    name:
      CSharp:
      - id: System.Net.WebClient.UploadString(System.String,System.String,System.String)
        name: UploadString
        nameWithType: WebClient.UploadString
        qualifiedName: System.Net.WebClient.UploadString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.UploadString(System.String,System.String,System.String)
        name: UploadString
        nameWithType: WebClient.UploadString
        qualifiedName: System.Net.WebClient.UploadString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.UploadString(System.String,System.String,System.String)
  System.Net.WebClient.UploadString(System.Uri,System.String):
    name:
      CSharp:
      - id: System.Net.WebClient.UploadString(System.Uri,System.String)
        name: UploadString
        nameWithType: WebClient.UploadString
        qualifiedName: System.Net.WebClient.UploadString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.UploadString(System.Uri,System.String)
        name: UploadString
        nameWithType: WebClient.UploadString
        qualifiedName: System.Net.WebClient.UploadString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.UploadString(System.Uri,System.String)
  System.Net.WebClient.UploadString(System.Uri,System.String,System.String):
    name:
      CSharp:
      - id: System.Net.WebClient.UploadString(System.Uri,System.String,System.String)
        name: UploadString
        nameWithType: WebClient.UploadString
        qualifiedName: System.Net.WebClient.UploadString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.UploadString(System.Uri,System.String,System.String)
        name: UploadString
        nameWithType: WebClient.UploadString
        qualifiedName: System.Net.WebClient.UploadString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.UploadString(System.Uri,System.String,System.String)
  System.Net.WebClient.UploadStringAsync(System.Uri,System.String):
    name:
      CSharp:
      - id: System.Net.WebClient.UploadStringAsync(System.Uri,System.String)
        name: UploadStringAsync
        nameWithType: WebClient.UploadStringAsync
        qualifiedName: System.Net.WebClient.UploadStringAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.UploadStringAsync(System.Uri,System.String)
        name: UploadStringAsync
        nameWithType: WebClient.UploadStringAsync
        qualifiedName: System.Net.WebClient.UploadStringAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String)
  System.Net.WebClient.UploadStringAsync(System.Uri,System.String,System.String):
    name:
      CSharp:
      - id: System.Net.WebClient.UploadStringAsync(System.Uri,System.String,System.String)
        name: UploadStringAsync
        nameWithType: WebClient.UploadStringAsync
        qualifiedName: System.Net.WebClient.UploadStringAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.UploadStringAsync(System.Uri,System.String,System.String)
        name: UploadStringAsync
        nameWithType: WebClient.UploadStringAsync
        qualifiedName: System.Net.WebClient.UploadStringAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String,System.String)
  System.Net.WebClient.UploadStringAsync(System.Uri,System.String,System.String,System.Object):
    name:
      CSharp:
      - id: System.Net.WebClient.UploadStringAsync(System.Uri,System.String,System.String,System.Object)
        name: UploadStringAsync
        nameWithType: WebClient.UploadStringAsync
        qualifiedName: System.Net.WebClient.UploadStringAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.UploadStringAsync(System.Uri,System.String,System.String,System.Object)
        name: UploadStringAsync
        nameWithType: WebClient.UploadStringAsync
        qualifiedName: System.Net.WebClient.UploadStringAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String,System.String,System.Object)
  System.Net.WebClient.UploadStringTaskAsync(System.String,System.String):
    name:
      CSharp:
      - id: System.Net.WebClient.UploadStringTaskAsync(System.String,System.String)
        name: UploadStringTaskAsync
        nameWithType: WebClient.UploadStringTaskAsync
        qualifiedName: System.Net.WebClient.UploadStringTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.UploadStringTaskAsync(System.String,System.String)
        name: UploadStringTaskAsync
        nameWithType: WebClient.UploadStringTaskAsync
        qualifiedName: System.Net.WebClient.UploadStringTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.UploadStringTaskAsync(System.String,System.String)
  System.Net.WebClient.UploadStringTaskAsync(System.String,System.String,System.String):
    name:
      CSharp:
      - id: System.Net.WebClient.UploadStringTaskAsync(System.String,System.String,System.String)
        name: UploadStringTaskAsync
        nameWithType: WebClient.UploadStringTaskAsync
        qualifiedName: System.Net.WebClient.UploadStringTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.UploadStringTaskAsync(System.String,System.String,System.String)
        name: UploadStringTaskAsync
        nameWithType: WebClient.UploadStringTaskAsync
        qualifiedName: System.Net.WebClient.UploadStringTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.UploadStringTaskAsync(System.String,System.String,System.String)
  System.Net.WebClient.UploadStringTaskAsync(System.Uri,System.String):
    name:
      CSharp:
      - id: System.Net.WebClient.UploadStringTaskAsync(System.Uri,System.String)
        name: UploadStringTaskAsync
        nameWithType: WebClient.UploadStringTaskAsync
        qualifiedName: System.Net.WebClient.UploadStringTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.UploadStringTaskAsync(System.Uri,System.String)
        name: UploadStringTaskAsync
        nameWithType: WebClient.UploadStringTaskAsync
        qualifiedName: System.Net.WebClient.UploadStringTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.UploadStringTaskAsync(System.Uri,System.String)
  System.Net.WebClient.UploadStringTaskAsync(System.Uri,System.String,System.String):
    name:
      CSharp:
      - id: System.Net.WebClient.UploadStringTaskAsync(System.Uri,System.String,System.String)
        name: UploadStringTaskAsync
        nameWithType: WebClient.UploadStringTaskAsync
        qualifiedName: System.Net.WebClient.UploadStringTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.UploadStringTaskAsync(System.Uri,System.String,System.String)
        name: UploadStringTaskAsync
        nameWithType: WebClient.UploadStringTaskAsync
        qualifiedName: System.Net.WebClient.UploadStringTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.UploadStringTaskAsync(System.Uri,System.String,System.String)
  System.Net.WebClient.UploadValues(System.String,System.Collections.Specialized.NameValueCollection):
    name:
      CSharp:
      - id: System.Net.WebClient.UploadValues(System.String,System.Collections.Specialized.NameValueCollection)
        name: UploadValues
        nameWithType: WebClient.UploadValues
        qualifiedName: System.Net.WebClient.UploadValues
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Specialized.NameValueCollection
        name: NameValueCollection
        nameWithType: NameValueCollection
        qualifiedName: System.Collections.Specialized.NameValueCollection
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.UploadValues(System.String,System.Collections.Specialized.NameValueCollection)
        name: UploadValues
        nameWithType: WebClient.UploadValues
        qualifiedName: System.Net.WebClient.UploadValues
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Specialized.NameValueCollection
        name: NameValueCollection
        nameWithType: NameValueCollection
        qualifiedName: System.Collections.Specialized.NameValueCollection
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.UploadValues(System.String,System.Collections.Specialized.NameValueCollection)
  System.Net.WebClient.UploadValues(System.String,System.String,System.Collections.Specialized.NameValueCollection):
    name:
      CSharp:
      - id: System.Net.WebClient.UploadValues(System.String,System.String,System.Collections.Specialized.NameValueCollection)
        name: UploadValues
        nameWithType: WebClient.UploadValues
        qualifiedName: System.Net.WebClient.UploadValues
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Specialized.NameValueCollection
        name: NameValueCollection
        nameWithType: NameValueCollection
        qualifiedName: System.Collections.Specialized.NameValueCollection
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.UploadValues(System.String,System.String,System.Collections.Specialized.NameValueCollection)
        name: UploadValues
        nameWithType: WebClient.UploadValues
        qualifiedName: System.Net.WebClient.UploadValues
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Specialized.NameValueCollection
        name: NameValueCollection
        nameWithType: NameValueCollection
        qualifiedName: System.Collections.Specialized.NameValueCollection
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.UploadValues(System.String,System.String,System.Collections.Specialized.NameValueCollection)
  System.Net.WebClient.UploadValues(System.Uri,System.Collections.Specialized.NameValueCollection):
    name:
      CSharp:
      - id: System.Net.WebClient.UploadValues(System.Uri,System.Collections.Specialized.NameValueCollection)
        name: UploadValues
        nameWithType: WebClient.UploadValues
        qualifiedName: System.Net.WebClient.UploadValues
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Specialized.NameValueCollection
        name: NameValueCollection
        nameWithType: NameValueCollection
        qualifiedName: System.Collections.Specialized.NameValueCollection
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.UploadValues(System.Uri,System.Collections.Specialized.NameValueCollection)
        name: UploadValues
        nameWithType: WebClient.UploadValues
        qualifiedName: System.Net.WebClient.UploadValues
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Specialized.NameValueCollection
        name: NameValueCollection
        nameWithType: NameValueCollection
        qualifiedName: System.Collections.Specialized.NameValueCollection
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.UploadValues(System.Uri,System.Collections.Specialized.NameValueCollection)
  System.Net.WebClient.UploadValues(System.Uri,System.String,System.Collections.Specialized.NameValueCollection):
    name:
      CSharp:
      - id: System.Net.WebClient.UploadValues(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)
        name: UploadValues
        nameWithType: WebClient.UploadValues
        qualifiedName: System.Net.WebClient.UploadValues
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Specialized.NameValueCollection
        name: NameValueCollection
        nameWithType: NameValueCollection
        qualifiedName: System.Collections.Specialized.NameValueCollection
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.UploadValues(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)
        name: UploadValues
        nameWithType: WebClient.UploadValues
        qualifiedName: System.Net.WebClient.UploadValues
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Specialized.NameValueCollection
        name: NameValueCollection
        nameWithType: NameValueCollection
        qualifiedName: System.Collections.Specialized.NameValueCollection
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.UploadValues(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)
  System.Net.WebClient.UploadValuesAsync(System.Uri,System.Collections.Specialized.NameValueCollection):
    name:
      CSharp:
      - id: System.Net.WebClient.UploadValuesAsync(System.Uri,System.Collections.Specialized.NameValueCollection)
        name: UploadValuesAsync
        nameWithType: WebClient.UploadValuesAsync
        qualifiedName: System.Net.WebClient.UploadValuesAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Specialized.NameValueCollection
        name: NameValueCollection
        nameWithType: NameValueCollection
        qualifiedName: System.Collections.Specialized.NameValueCollection
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.UploadValuesAsync(System.Uri,System.Collections.Specialized.NameValueCollection)
        name: UploadValuesAsync
        nameWithType: WebClient.UploadValuesAsync
        qualifiedName: System.Net.WebClient.UploadValuesAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Specialized.NameValueCollection
        name: NameValueCollection
        nameWithType: NameValueCollection
        qualifiedName: System.Collections.Specialized.NameValueCollection
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.UploadValuesAsync(System.Uri,System.Collections.Specialized.NameValueCollection)
  System.Net.WebClient.UploadValuesAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection):
    name:
      CSharp:
      - id: System.Net.WebClient.UploadValuesAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)
        name: UploadValuesAsync
        nameWithType: WebClient.UploadValuesAsync
        qualifiedName: System.Net.WebClient.UploadValuesAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Specialized.NameValueCollection
        name: NameValueCollection
        nameWithType: NameValueCollection
        qualifiedName: System.Collections.Specialized.NameValueCollection
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.UploadValuesAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)
        name: UploadValuesAsync
        nameWithType: WebClient.UploadValuesAsync
        qualifiedName: System.Net.WebClient.UploadValuesAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Specialized.NameValueCollection
        name: NameValueCollection
        nameWithType: NameValueCollection
        qualifiedName: System.Collections.Specialized.NameValueCollection
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.UploadValuesAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)
  ? System.Net.WebClient.UploadValuesAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection,System.Object)
  : name:
      CSharp:
      - id: System.Net.WebClient.UploadValuesAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection,System.Object)
        name: UploadValuesAsync
        nameWithType: WebClient.UploadValuesAsync
        qualifiedName: System.Net.WebClient.UploadValuesAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Specialized.NameValueCollection
        name: NameValueCollection
        nameWithType: NameValueCollection
        qualifiedName: System.Collections.Specialized.NameValueCollection
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.UploadValuesAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection,System.Object)
        name: UploadValuesAsync
        nameWithType: WebClient.UploadValuesAsync
        qualifiedName: System.Net.WebClient.UploadValuesAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Specialized.NameValueCollection
        name: NameValueCollection
        nameWithType: NameValueCollection
        qualifiedName: System.Collections.Specialized.NameValueCollection
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.UploadValuesAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection,System.Object)
  System.Net.WebClient.UploadValuesTaskAsync(System.String,System.Collections.Specialized.NameValueCollection):
    name:
      CSharp:
      - id: System.Net.WebClient.UploadValuesTaskAsync(System.String,System.Collections.Specialized.NameValueCollection)
        name: UploadValuesTaskAsync
        nameWithType: WebClient.UploadValuesTaskAsync
        qualifiedName: System.Net.WebClient.UploadValuesTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Specialized.NameValueCollection
        name: NameValueCollection
        nameWithType: NameValueCollection
        qualifiedName: System.Collections.Specialized.NameValueCollection
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.UploadValuesTaskAsync(System.String,System.Collections.Specialized.NameValueCollection)
        name: UploadValuesTaskAsync
        nameWithType: WebClient.UploadValuesTaskAsync
        qualifiedName: System.Net.WebClient.UploadValuesTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Specialized.NameValueCollection
        name: NameValueCollection
        nameWithType: NameValueCollection
        qualifiedName: System.Collections.Specialized.NameValueCollection
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.UploadValuesTaskAsync(System.String,System.Collections.Specialized.NameValueCollection)
  System.Net.WebClient.UploadValuesTaskAsync(System.String,System.String,System.Collections.Specialized.NameValueCollection):
    name:
      CSharp:
      - id: System.Net.WebClient.UploadValuesTaskAsync(System.String,System.String,System.Collections.Specialized.NameValueCollection)
        name: UploadValuesTaskAsync
        nameWithType: WebClient.UploadValuesTaskAsync
        qualifiedName: System.Net.WebClient.UploadValuesTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Specialized.NameValueCollection
        name: NameValueCollection
        nameWithType: NameValueCollection
        qualifiedName: System.Collections.Specialized.NameValueCollection
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.UploadValuesTaskAsync(System.String,System.String,System.Collections.Specialized.NameValueCollection)
        name: UploadValuesTaskAsync
        nameWithType: WebClient.UploadValuesTaskAsync
        qualifiedName: System.Net.WebClient.UploadValuesTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Specialized.NameValueCollection
        name: NameValueCollection
        nameWithType: NameValueCollection
        qualifiedName: System.Collections.Specialized.NameValueCollection
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.UploadValuesTaskAsync(System.String,System.String,System.Collections.Specialized.NameValueCollection)
  System.Net.WebClient.UploadValuesTaskAsync(System.Uri,System.Collections.Specialized.NameValueCollection):
    name:
      CSharp:
      - id: System.Net.WebClient.UploadValuesTaskAsync(System.Uri,System.Collections.Specialized.NameValueCollection)
        name: UploadValuesTaskAsync
        nameWithType: WebClient.UploadValuesTaskAsync
        qualifiedName: System.Net.WebClient.UploadValuesTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Specialized.NameValueCollection
        name: NameValueCollection
        nameWithType: NameValueCollection
        qualifiedName: System.Collections.Specialized.NameValueCollection
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.UploadValuesTaskAsync(System.Uri,System.Collections.Specialized.NameValueCollection)
        name: UploadValuesTaskAsync
        nameWithType: WebClient.UploadValuesTaskAsync
        qualifiedName: System.Net.WebClient.UploadValuesTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Specialized.NameValueCollection
        name: NameValueCollection
        nameWithType: NameValueCollection
        qualifiedName: System.Collections.Specialized.NameValueCollection
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.UploadValuesTaskAsync(System.Uri,System.Collections.Specialized.NameValueCollection)
  System.Net.WebClient.UploadValuesTaskAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection):
    name:
      CSharp:
      - id: System.Net.WebClient.UploadValuesTaskAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)
        name: UploadValuesTaskAsync
        nameWithType: WebClient.UploadValuesTaskAsync
        qualifiedName: System.Net.WebClient.UploadValuesTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Specialized.NameValueCollection
        name: NameValueCollection
        nameWithType: NameValueCollection
        qualifiedName: System.Collections.Specialized.NameValueCollection
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.UploadValuesTaskAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)
        name: UploadValuesTaskAsync
        nameWithType: WebClient.UploadValuesTaskAsync
        qualifiedName: System.Net.WebClient.UploadValuesTaskAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Specialized.NameValueCollection
        name: NameValueCollection
        nameWithType: NameValueCollection
        qualifiedName: System.Collections.Specialized.NameValueCollection
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.UploadValuesTaskAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)
  System.Net.WebClient.BaseAddress:
    name:
      CSharp:
      - id: System.Net.WebClient.BaseAddress
        name: BaseAddress
        nameWithType: WebClient.BaseAddress
        qualifiedName: System.Net.WebClient.BaseAddress
        isExternal: true
      VB:
      - id: System.Net.WebClient.BaseAddress
        name: BaseAddress
        nameWithType: WebClient.BaseAddress
        qualifiedName: System.Net.WebClient.BaseAddress
        isExternal: true
    isDefinition: true
    parent: System.Net.WebClient
    commentId: P:System.Net.WebClient.BaseAddress
  System.Net.WebClient.CachePolicy:
    name:
      CSharp:
      - id: System.Net.WebClient.CachePolicy
        name: CachePolicy
        nameWithType: WebClient.CachePolicy
        qualifiedName: System.Net.WebClient.CachePolicy
        isExternal: true
      VB:
      - id: System.Net.WebClient.CachePolicy
        name: CachePolicy
        nameWithType: WebClient.CachePolicy
        qualifiedName: System.Net.WebClient.CachePolicy
        isExternal: true
    isDefinition: true
    parent: System.Net.WebClient
    commentId: P:System.Net.WebClient.CachePolicy
  System.Net.WebClient.Credentials:
    name:
      CSharp:
      - id: System.Net.WebClient.Credentials
        name: Credentials
        nameWithType: WebClient.Credentials
        qualifiedName: System.Net.WebClient.Credentials
        isExternal: true
      VB:
      - id: System.Net.WebClient.Credentials
        name: Credentials
        nameWithType: WebClient.Credentials
        qualifiedName: System.Net.WebClient.Credentials
        isExternal: true
    isDefinition: true
    parent: System.Net.WebClient
    commentId: P:System.Net.WebClient.Credentials
  System.Net.WebClient.Encoding:
    name:
      CSharp:
      - id: System.Net.WebClient.Encoding
        name: Encoding
        nameWithType: WebClient.Encoding
        qualifiedName: System.Net.WebClient.Encoding
        isExternal: true
      VB:
      - id: System.Net.WebClient.Encoding
        name: Encoding
        nameWithType: WebClient.Encoding
        qualifiedName: System.Net.WebClient.Encoding
        isExternal: true
    isDefinition: true
    parent: System.Net.WebClient
    commentId: P:System.Net.WebClient.Encoding
  System.Net.WebClient.Headers:
    name:
      CSharp:
      - id: System.Net.WebClient.Headers
        name: Headers
        nameWithType: WebClient.Headers
        qualifiedName: System.Net.WebClient.Headers
        isExternal: true
      VB:
      - id: System.Net.WebClient.Headers
        name: Headers
        nameWithType: WebClient.Headers
        qualifiedName: System.Net.WebClient.Headers
        isExternal: true
    isDefinition: true
    parent: System.Net.WebClient
    commentId: P:System.Net.WebClient.Headers
  System.Net.WebClient.IsBusy:
    name:
      CSharp:
      - id: System.Net.WebClient.IsBusy
        name: IsBusy
        nameWithType: WebClient.IsBusy
        qualifiedName: System.Net.WebClient.IsBusy
        isExternal: true
      VB:
      - id: System.Net.WebClient.IsBusy
        name: IsBusy
        nameWithType: WebClient.IsBusy
        qualifiedName: System.Net.WebClient.IsBusy
        isExternal: true
    isDefinition: true
    parent: System.Net.WebClient
    commentId: P:System.Net.WebClient.IsBusy
  System.Net.WebClient.Proxy:
    name:
      CSharp:
      - id: System.Net.WebClient.Proxy
        name: Proxy
        nameWithType: WebClient.Proxy
        qualifiedName: System.Net.WebClient.Proxy
        isExternal: true
      VB:
      - id: System.Net.WebClient.Proxy
        name: Proxy
        nameWithType: WebClient.Proxy
        qualifiedName: System.Net.WebClient.Proxy
        isExternal: true
    isDefinition: true
    parent: System.Net.WebClient
    commentId: P:System.Net.WebClient.Proxy
  System.Net.WebClient.QueryString:
    name:
      CSharp:
      - id: System.Net.WebClient.QueryString
        name: QueryString
        nameWithType: WebClient.QueryString
        qualifiedName: System.Net.WebClient.QueryString
        isExternal: true
      VB:
      - id: System.Net.WebClient.QueryString
        name: QueryString
        nameWithType: WebClient.QueryString
        qualifiedName: System.Net.WebClient.QueryString
        isExternal: true
    isDefinition: true
    parent: System.Net.WebClient
    commentId: P:System.Net.WebClient.QueryString
  System.Net.WebClient.ResponseHeaders:
    name:
      CSharp:
      - id: System.Net.WebClient.ResponseHeaders
        name: ResponseHeaders
        nameWithType: WebClient.ResponseHeaders
        qualifiedName: System.Net.WebClient.ResponseHeaders
        isExternal: true
      VB:
      - id: System.Net.WebClient.ResponseHeaders
        name: ResponseHeaders
        nameWithType: WebClient.ResponseHeaders
        qualifiedName: System.Net.WebClient.ResponseHeaders
        isExternal: true
    isDefinition: true
    parent: System.Net.WebClient
    commentId: P:System.Net.WebClient.ResponseHeaders
  System.Net.WebClient.UseDefaultCredentials:
    name:
      CSharp:
      - id: System.Net.WebClient.UseDefaultCredentials
        name: UseDefaultCredentials
        nameWithType: WebClient.UseDefaultCredentials
        qualifiedName: System.Net.WebClient.UseDefaultCredentials
        isExternal: true
      VB:
      - id: System.Net.WebClient.UseDefaultCredentials
        name: UseDefaultCredentials
        nameWithType: WebClient.UseDefaultCredentials
        qualifiedName: System.Net.WebClient.UseDefaultCredentials
        isExternal: true
    isDefinition: true
    parent: System.Net.WebClient
    commentId: P:System.Net.WebClient.UseDefaultCredentials
  System.Net.WebClient.DownloadDataCompleted:
    name:
      CSharp:
      - id: System.Net.WebClient.DownloadDataCompleted
        name: DownloadDataCompleted
        nameWithType: WebClient.DownloadDataCompleted
        qualifiedName: System.Net.WebClient.DownloadDataCompleted
        isExternal: true
      VB:
      - id: System.Net.WebClient.DownloadDataCompleted
        name: DownloadDataCompleted
        nameWithType: WebClient.DownloadDataCompleted
        qualifiedName: System.Net.WebClient.DownloadDataCompleted
        isExternal: true
    isDefinition: true
    parent: System.Net.WebClient
    commentId: E:System.Net.WebClient.DownloadDataCompleted
  System.Net.WebClient.DownloadFileCompleted:
    name:
      CSharp:
      - id: System.Net.WebClient.DownloadFileCompleted
        name: DownloadFileCompleted
        nameWithType: WebClient.DownloadFileCompleted
        qualifiedName: System.Net.WebClient.DownloadFileCompleted
        isExternal: true
      VB:
      - id: System.Net.WebClient.DownloadFileCompleted
        name: DownloadFileCompleted
        nameWithType: WebClient.DownloadFileCompleted
        qualifiedName: System.Net.WebClient.DownloadFileCompleted
        isExternal: true
    isDefinition: true
    parent: System.Net.WebClient
    commentId: E:System.Net.WebClient.DownloadFileCompleted
  System.Net.WebClient.DownloadProgressChanged:
    name:
      CSharp:
      - id: System.Net.WebClient.DownloadProgressChanged
        name: DownloadProgressChanged
        nameWithType: WebClient.DownloadProgressChanged
        qualifiedName: System.Net.WebClient.DownloadProgressChanged
        isExternal: true
      VB:
      - id: System.Net.WebClient.DownloadProgressChanged
        name: DownloadProgressChanged
        nameWithType: WebClient.DownloadProgressChanged
        qualifiedName: System.Net.WebClient.DownloadProgressChanged
        isExternal: true
    isDefinition: true
    parent: System.Net.WebClient
    commentId: E:System.Net.WebClient.DownloadProgressChanged
  System.Net.WebClient.DownloadStringCompleted:
    name:
      CSharp:
      - id: System.Net.WebClient.DownloadStringCompleted
        name: DownloadStringCompleted
        nameWithType: WebClient.DownloadStringCompleted
        qualifiedName: System.Net.WebClient.DownloadStringCompleted
        isExternal: true
      VB:
      - id: System.Net.WebClient.DownloadStringCompleted
        name: DownloadStringCompleted
        nameWithType: WebClient.DownloadStringCompleted
        qualifiedName: System.Net.WebClient.DownloadStringCompleted
        isExternal: true
    isDefinition: true
    parent: System.Net.WebClient
    commentId: E:System.Net.WebClient.DownloadStringCompleted
  System.Net.WebClient.OpenReadCompleted:
    name:
      CSharp:
      - id: System.Net.WebClient.OpenReadCompleted
        name: OpenReadCompleted
        nameWithType: WebClient.OpenReadCompleted
        qualifiedName: System.Net.WebClient.OpenReadCompleted
        isExternal: true
      VB:
      - id: System.Net.WebClient.OpenReadCompleted
        name: OpenReadCompleted
        nameWithType: WebClient.OpenReadCompleted
        qualifiedName: System.Net.WebClient.OpenReadCompleted
        isExternal: true
    isDefinition: true
    parent: System.Net.WebClient
    commentId: E:System.Net.WebClient.OpenReadCompleted
  System.Net.WebClient.OpenWriteCompleted:
    name:
      CSharp:
      - id: System.Net.WebClient.OpenWriteCompleted
        name: OpenWriteCompleted
        nameWithType: WebClient.OpenWriteCompleted
        qualifiedName: System.Net.WebClient.OpenWriteCompleted
        isExternal: true
      VB:
      - id: System.Net.WebClient.OpenWriteCompleted
        name: OpenWriteCompleted
        nameWithType: WebClient.OpenWriteCompleted
        qualifiedName: System.Net.WebClient.OpenWriteCompleted
        isExternal: true
    isDefinition: true
    parent: System.Net.WebClient
    commentId: E:System.Net.WebClient.OpenWriteCompleted
  System.Net.WebClient.UploadDataCompleted:
    name:
      CSharp:
      - id: System.Net.WebClient.UploadDataCompleted
        name: UploadDataCompleted
        nameWithType: WebClient.UploadDataCompleted
        qualifiedName: System.Net.WebClient.UploadDataCompleted
        isExternal: true
      VB:
      - id: System.Net.WebClient.UploadDataCompleted
        name: UploadDataCompleted
        nameWithType: WebClient.UploadDataCompleted
        qualifiedName: System.Net.WebClient.UploadDataCompleted
        isExternal: true
    isDefinition: true
    parent: System.Net.WebClient
    commentId: E:System.Net.WebClient.UploadDataCompleted
  System.Net.WebClient.UploadFileCompleted:
    name:
      CSharp:
      - id: System.Net.WebClient.UploadFileCompleted
        name: UploadFileCompleted
        nameWithType: WebClient.UploadFileCompleted
        qualifiedName: System.Net.WebClient.UploadFileCompleted
        isExternal: true
      VB:
      - id: System.Net.WebClient.UploadFileCompleted
        name: UploadFileCompleted
        nameWithType: WebClient.UploadFileCompleted
        qualifiedName: System.Net.WebClient.UploadFileCompleted
        isExternal: true
    isDefinition: true
    parent: System.Net.WebClient
    commentId: E:System.Net.WebClient.UploadFileCompleted
  System.Net.WebClient.UploadProgressChanged:
    name:
      CSharp:
      - id: System.Net.WebClient.UploadProgressChanged
        name: UploadProgressChanged
        nameWithType: WebClient.UploadProgressChanged
        qualifiedName: System.Net.WebClient.UploadProgressChanged
        isExternal: true
      VB:
      - id: System.Net.WebClient.UploadProgressChanged
        name: UploadProgressChanged
        nameWithType: WebClient.UploadProgressChanged
        qualifiedName: System.Net.WebClient.UploadProgressChanged
        isExternal: true
    isDefinition: true
    parent: System.Net.WebClient
    commentId: E:System.Net.WebClient.UploadProgressChanged
  System.Net.WebClient.UploadStringCompleted:
    name:
      CSharp:
      - id: System.Net.WebClient.UploadStringCompleted
        name: UploadStringCompleted
        nameWithType: WebClient.UploadStringCompleted
        qualifiedName: System.Net.WebClient.UploadStringCompleted
        isExternal: true
      VB:
      - id: System.Net.WebClient.UploadStringCompleted
        name: UploadStringCompleted
        nameWithType: WebClient.UploadStringCompleted
        qualifiedName: System.Net.WebClient.UploadStringCompleted
        isExternal: true
    isDefinition: true
    parent: System.Net.WebClient
    commentId: E:System.Net.WebClient.UploadStringCompleted
  System.Net.WebClient.UploadValuesCompleted:
    name:
      CSharp:
      - id: System.Net.WebClient.UploadValuesCompleted
        name: UploadValuesCompleted
        nameWithType: WebClient.UploadValuesCompleted
        qualifiedName: System.Net.WebClient.UploadValuesCompleted
        isExternal: true
      VB:
      - id: System.Net.WebClient.UploadValuesCompleted
        name: UploadValuesCompleted
        nameWithType: WebClient.UploadValuesCompleted
        qualifiedName: System.Net.WebClient.UploadValuesCompleted
        isExternal: true
    isDefinition: true
    parent: System.Net.WebClient
    commentId: E:System.Net.WebClient.UploadValuesCompleted
  System.ComponentModel.Component.Dispose(System.Boolean):
    name:
      CSharp:
      - id: System.ComponentModel.Component.Dispose(System.Boolean)
        name: Dispose
        nameWithType: Component.Dispose
        qualifiedName: System.ComponentModel.Component.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ComponentModel.Component.Dispose(System.Boolean)
        name: Dispose
        nameWithType: Component.Dispose
        qualifiedName: System.ComponentModel.Component.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ComponentModel.Component
    commentId: M:System.ComponentModel.Component.Dispose(System.Boolean)
  IMS_Library.MojangInteropUtility.WebClientWithTimeout.#ctor*:
    name:
      CSharp:
      - id: IMS_Library.MojangInteropUtility.WebClientWithTimeout.#ctor*
        name: WebClientWithTimeout
        nameWithType: MojangInteropUtility.WebClientWithTimeout.WebClientWithTimeout
        qualifiedName: IMS_Library.MojangInteropUtility.WebClientWithTimeout.WebClientWithTimeout
      VB:
      - id: IMS_Library.MojangInteropUtility.WebClientWithTimeout.#ctor*
        name: WebClientWithTimeout
        nameWithType: MojangInteropUtility.WebClientWithTimeout.WebClientWithTimeout
        qualifiedName: IMS_Library.MojangInteropUtility.WebClientWithTimeout.WebClientWithTimeout
    isDefinition: true
    commentId: Overload:IMS_Library.MojangInteropUtility.WebClientWithTimeout.#ctor
  System.Net.WebRequest:
    name:
      CSharp:
      - id: System.Net.WebRequest
        name: WebRequest
        nameWithType: WebRequest
        qualifiedName: System.Net.WebRequest
        isExternal: true
      VB:
      - id: System.Net.WebRequest
        name: WebRequest
        nameWithType: WebRequest
        qualifiedName: System.Net.WebRequest
        isExternal: true
    isDefinition: true
    parent: System.Net
    commentId: T:System.Net.WebRequest
  System.Uri:
    name:
      CSharp:
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      VB:
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Uri
  System.Net.WebClient.GetWebRequest(System.Uri):
    name:
      CSharp:
      - id: System.Net.WebClient.GetWebRequest(System.Uri)
        name: GetWebRequest
        nameWithType: WebClient.GetWebRequest
        qualifiedName: System.Net.WebClient.GetWebRequest
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Net.WebClient.GetWebRequest(System.Uri)
        name: GetWebRequest
        nameWithType: WebClient.GetWebRequest
        qualifiedName: System.Net.WebClient.GetWebRequest
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Net.WebClient
    commentId: M:System.Net.WebClient.GetWebRequest(System.Uri)
  IMS_Library.MojangInteropUtility.WebClientWithTimeout.GetWebRequest*:
    name:
      CSharp:
      - id: IMS_Library.MojangInteropUtility.WebClientWithTimeout.GetWebRequest*
        name: GetWebRequest
        nameWithType: MojangInteropUtility.WebClientWithTimeout.GetWebRequest
        qualifiedName: IMS_Library.MojangInteropUtility.WebClientWithTimeout.GetWebRequest
      VB:
      - id: IMS_Library.MojangInteropUtility.WebClientWithTimeout.GetWebRequest*
        name: GetWebRequest
        nameWithType: MojangInteropUtility.WebClientWithTimeout.GetWebRequest
        qualifiedName: IMS_Library.MojangInteropUtility.WebClientWithTimeout.GetWebRequest
    isDefinition: true
    commentId: Overload:IMS_Library.MojangInteropUtility.WebClientWithTimeout.GetWebRequest
  IMS_Library.MojangInteropUtility.WebClientWithTimeout:
    name:
      CSharp:
      - id: IMS_Library.MojangInteropUtility.WebClientWithTimeout
        name: MojangInteropUtility.WebClientWithTimeout
        nameWithType: MojangInteropUtility.WebClientWithTimeout
        qualifiedName: IMS_Library.MojangInteropUtility.WebClientWithTimeout
      VB:
      - id: IMS_Library.MojangInteropUtility.WebClientWithTimeout
        name: MojangInteropUtility.WebClientWithTimeout
        nameWithType: MojangInteropUtility.WebClientWithTimeout
        qualifiedName: IMS_Library.MojangInteropUtility.WebClientWithTimeout
    isDefinition: true
    commentId: T:IMS_Library.MojangInteropUtility.WebClientWithTimeout
  IMS_Library.ServerConfiguration.IMS_Library.IMSConfigurationUtility.FromConfiguration``1:
    name:
      CSharp:
      - id: IMS_Library.IMSConfigurationUtility.FromConfiguration``1
        name: FromConfiguration<ServerConfiguration>
        nameWithType: IMSConfigurationUtility.FromConfiguration<ServerConfiguration>
        qualifiedName: IMS_Library.IMSConfigurationUtility.FromConfiguration<IMS_Library.ServerConfiguration>
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.IMSConfigurationUtility.FromConfiguration``1
        name: FromConfiguration(Of ServerConfiguration)
        nameWithType: IMSConfigurationUtility.FromConfiguration(Of ServerConfiguration)
        qualifiedName: IMS_Library.IMSConfigurationUtility.FromConfiguration(Of IMS_Library.ServerConfiguration)
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: IMS_Library.IMSConfigurationUtility.FromConfiguration``1(``0)
    parent: IMS_Library.IMSConfigurationUtility
    commentId: M:IMS_Library.IMSConfigurationUtility.FromConfiguration``1(``0)
  IMS_Library.ServerConfiguration.IMS_Library.IMSConfigurationUtility.SaveConfiguration``1:
    name:
      CSharp:
      - id: IMS_Library.IMSConfigurationUtility.SaveConfiguration``1
        name: SaveConfiguration<ServerConfiguration>
        nameWithType: IMSConfigurationUtility.SaveConfiguration<ServerConfiguration>
        qualifiedName: IMS_Library.IMSConfigurationUtility.SaveConfiguration<IMS_Library.ServerConfiguration>
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.IMSConfigurationUtility.SaveConfiguration``1
        name: SaveConfiguration(Of ServerConfiguration)
        nameWithType: IMSConfigurationUtility.SaveConfiguration(Of ServerConfiguration)
        qualifiedName: IMS_Library.IMSConfigurationUtility.SaveConfiguration(Of IMS_Library.ServerConfiguration)
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: IMS_Library.IMSConfigurationUtility.SaveConfiguration``1(``0)
    parent: IMS_Library.IMSConfigurationUtility
    commentId: M:IMS_Library.IMSConfigurationUtility.SaveConfiguration``1(``0)
  IMS_Library.ServerConfiguration.#ctor*:
    name:
      CSharp:
      - id: IMS_Library.ServerConfiguration.#ctor*
        name: ServerConfiguration
        nameWithType: ServerConfiguration.ServerConfiguration
        qualifiedName: IMS_Library.ServerConfiguration.ServerConfiguration
      VB:
      - id: IMS_Library.ServerConfiguration.#ctor*
        name: ServerConfiguration
        nameWithType: ServerConfiguration.ServerConfiguration
        qualifiedName: IMS_Library.ServerConfiguration.ServerConfiguration
    isDefinition: true
    commentId: Overload:IMS_Library.ServerConfiguration.#ctor
  IMS_Library.ServerConfiguration.GetServerFolderLocation*:
    name:
      CSharp:
      - id: IMS_Library.ServerConfiguration.GetServerFolderLocation*
        name: GetServerFolderLocation
        nameWithType: ServerConfiguration.GetServerFolderLocation
        qualifiedName: IMS_Library.ServerConfiguration.GetServerFolderLocation
      VB:
      - id: IMS_Library.ServerConfiguration.GetServerFolderLocation*
        name: GetServerFolderLocation
        nameWithType: ServerConfiguration.GetServerFolderLocation
        qualifiedName: IMS_Library.ServerConfiguration.GetServerFolderLocation
    isDefinition: true
    commentId: Overload:IMS_Library.ServerConfiguration.GetServerFolderLocation
  IMS_Library.ServerConfiguration.GetDefaultFilePath*:
    name:
      CSharp:
      - id: IMS_Library.ServerConfiguration.GetDefaultFilePath*
        name: GetDefaultFilePath
        nameWithType: ServerConfiguration.GetDefaultFilePath
        qualifiedName: IMS_Library.ServerConfiguration.GetDefaultFilePath
      VB:
      - id: IMS_Library.ServerConfiguration.GetDefaultFilePath*
        name: GetDefaultFilePath
        nameWithType: ServerConfiguration.GetDefaultFilePath
        qualifiedName: IMS_Library.ServerConfiguration.GetDefaultFilePath
    isDefinition: true
    commentId: Overload:IMS_Library.ServerConfiguration.GetDefaultFilePath
  IMS_Library.ServerConfiguration.GetUsedPorts*:
    name:
      CSharp:
      - id: IMS_Library.ServerConfiguration.GetUsedPorts*
        name: GetUsedPorts
        nameWithType: ServerConfiguration.GetUsedPorts
        qualifiedName: IMS_Library.ServerConfiguration.GetUsedPorts
      VB:
      - id: IMS_Library.ServerConfiguration.GetUsedPorts*
        name: GetUsedPorts
        nameWithType: ServerConfiguration.GetUsedPorts
        qualifiedName: IMS_Library.ServerConfiguration.GetUsedPorts
    isDefinition: true
    commentId: Overload:IMS_Library.ServerConfiguration.GetUsedPorts
  IMS_Library.ServerConfiguration.GetPortsToForward*:
    name:
      CSharp:
      - id: IMS_Library.ServerConfiguration.GetPortsToForward*
        name: GetPortsToForward
        nameWithType: ServerConfiguration.GetPortsToForward
        qualifiedName: IMS_Library.ServerConfiguration.GetPortsToForward
      VB:
      - id: IMS_Library.ServerConfiguration.GetPortsToForward*
        name: GetPortsToForward
        nameWithType: ServerConfiguration.GetPortsToForward
        qualifiedName: IMS_Library.ServerConfiguration.GetPortsToForward
    isDefinition: true
    commentId: Overload:IMS_Library.ServerConfiguration.GetPortsToForward
  IMS_Library.ServerConfiguration.CreateServer*:
    name:
      CSharp:
      - id: IMS_Library.ServerConfiguration.CreateServer*
        name: CreateServer
        nameWithType: ServerConfiguration.CreateServer
        qualifiedName: IMS_Library.ServerConfiguration.CreateServer
      VB:
      - id: IMS_Library.ServerConfiguration.CreateServer*
        name: CreateServer
        nameWithType: ServerConfiguration.CreateServer
        qualifiedName: IMS_Library.ServerConfiguration.CreateServer
    isDefinition: true
    commentId: Overload:IMS_Library.ServerConfiguration.CreateServer
  IMS_Library.ServerProxy.ID*:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.ID*
        name: ID
        nameWithType: ServerProxy.ID
        qualifiedName: IMS_Library.ServerProxy.ID
      VB:
      - id: IMS_Library.ServerProxy.ID*
        name: ID
        nameWithType: ServerProxy.ID
        qualifiedName: IMS_Library.ServerProxy.ID
    isDefinition: true
    commentId: Overload:IMS_Library.ServerProxy.ID
  IMS_Library.ServerProxy.ServerState:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.ServerState
        name: ServerProxy.ServerState
        nameWithType: ServerProxy.ServerState
        qualifiedName: IMS_Library.ServerProxy.ServerState
      VB:
      - id: IMS_Library.ServerProxy.ServerState
        name: ServerProxy.ServerState
        nameWithType: ServerProxy.ServerState
        qualifiedName: IMS_Library.ServerProxy.ServerState
    isDefinition: true
    parent: IMS_Library
    commentId: T:IMS_Library.ServerProxy.ServerState
  IMS_Library.ServerProxy.State*:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.State*
        name: State
        nameWithType: ServerProxy.State
        qualifiedName: IMS_Library.ServerProxy.State
      VB:
      - id: IMS_Library.ServerProxy.State*
        name: State
        nameWithType: ServerProxy.State
        qualifiedName: IMS_Library.ServerProxy.State
    isDefinition: true
    commentId: Overload:IMS_Library.ServerProxy.State
  IMS_Library.ServerProxy.CurrentConfiguration*:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.CurrentConfiguration*
        name: CurrentConfiguration
        nameWithType: ServerProxy.CurrentConfiguration
        qualifiedName: IMS_Library.ServerProxy.CurrentConfiguration
      VB:
      - id: IMS_Library.ServerProxy.CurrentConfiguration*
        name: CurrentConfiguration
        nameWithType: ServerProxy.CurrentConfiguration
        qualifiedName: IMS_Library.ServerProxy.CurrentConfiguration
    isDefinition: true
    commentId: Overload:IMS_Library.ServerProxy.CurrentConfiguration
  IMS_Library.ServerProxy.SupportsWhitelist*:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.SupportsWhitelist*
        name: SupportsWhitelist
        nameWithType: ServerProxy.SupportsWhitelist
        qualifiedName: IMS_Library.ServerProxy.SupportsWhitelist
      VB:
      - id: IMS_Library.ServerProxy.SupportsWhitelist*
        name: SupportsWhitelist
        nameWithType: ServerProxy.SupportsWhitelist
        qualifiedName: IMS_Library.ServerProxy.SupportsWhitelist
    isDefinition: true
    commentId: Overload:IMS_Library.ServerProxy.SupportsWhitelist
  IMS_Library.ServerProxy.WhitelistEnabled*:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.WhitelistEnabled*
        name: WhitelistEnabled
        nameWithType: ServerProxy.WhitelistEnabled
        qualifiedName: IMS_Library.ServerProxy.WhitelistEnabled
      VB:
      - id: IMS_Library.ServerProxy.WhitelistEnabled*
        name: WhitelistEnabled
        nameWithType: ServerProxy.WhitelistEnabled
        qualifiedName: IMS_Library.ServerProxy.WhitelistEnabled
    isDefinition: true
    commentId: Overload:IMS_Library.ServerProxy.WhitelistEnabled
  IMS_Library.ServerProxy.SupportsBanning*:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.SupportsBanning*
        name: SupportsBanning
        nameWithType: ServerProxy.SupportsBanning
        qualifiedName: IMS_Library.ServerProxy.SupportsBanning
      VB:
      - id: IMS_Library.ServerProxy.SupportsBanning*
        name: SupportsBanning
        nameWithType: ServerProxy.SupportsBanning
        qualifiedName: IMS_Library.ServerProxy.SupportsBanning
    isDefinition: true
    commentId: Overload:IMS_Library.ServerProxy.SupportsBanning
  IMS_Library.ServerProxy.SupportsBanningIPs*:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.SupportsBanningIPs*
        name: SupportsBanningIPs
        nameWithType: ServerProxy.SupportsBanningIPs
        qualifiedName: IMS_Library.ServerProxy.SupportsBanningIPs
      VB:
      - id: IMS_Library.ServerProxy.SupportsBanningIPs*
        name: SupportsBanningIPs
        nameWithType: ServerProxy.SupportsBanningIPs
        qualifiedName: IMS_Library.ServerProxy.SupportsBanningIPs
    isDefinition: true
    commentId: Overload:IMS_Library.ServerProxy.SupportsBanningIPs
  IMS_Library.ServerProxy.SupportsOps*:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.SupportsOps*
        name: SupportsOps
        nameWithType: ServerProxy.SupportsOps
        qualifiedName: IMS_Library.ServerProxy.SupportsOps
      VB:
      - id: IMS_Library.ServerProxy.SupportsOps*
        name: SupportsOps
        nameWithType: ServerProxy.SupportsOps
        qualifiedName: IMS_Library.ServerProxy.SupportsOps
    isDefinition: true
    commentId: Overload:IMS_Library.ServerProxy.SupportsOps
  IMS_Library.ServerProxy.SupportsIPs*:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.SupportsIPs*
        name: SupportsIPs
        nameWithType: ServerProxy.SupportsIPs
        qualifiedName: IMS_Library.ServerProxy.SupportsIPs
      VB:
      - id: IMS_Library.ServerProxy.SupportsIPs*
        name: SupportsIPs
        nameWithType: ServerProxy.SupportsIPs
        qualifiedName: IMS_Library.ServerProxy.SupportsIPs
    isDefinition: true
    commentId: Overload:IMS_Library.ServerProxy.SupportsIPs
  IMS_Library.ServerProxy.SupportsKicking*:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.SupportsKicking*
        name: SupportsKicking
        nameWithType: ServerProxy.SupportsKicking
        qualifiedName: IMS_Library.ServerProxy.SupportsKicking
      VB:
      - id: IMS_Library.ServerProxy.SupportsKicking*
        name: SupportsKicking
        nameWithType: ServerProxy.SupportsKicking
        qualifiedName: IMS_Library.ServerProxy.SupportsKicking
    isDefinition: true
    commentId: Overload:IMS_Library.ServerProxy.SupportsKicking
  IMS_Library.ServerProxy.SupportedEdition*:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.SupportedEdition*
        name: SupportedEdition
        nameWithType: ServerProxy.SupportedEdition
        qualifiedName: IMS_Library.ServerProxy.SupportedEdition
      VB:
      - id: IMS_Library.ServerProxy.SupportedEdition*
        name: SupportedEdition
        nameWithType: ServerProxy.SupportedEdition
        qualifiedName: IMS_Library.ServerProxy.SupportedEdition
    isDefinition: true
    commentId: Overload:IMS_Library.ServerProxy.SupportedEdition
  IMS_Library.ServerProxy.#ctor*:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.#ctor*
        name: ServerProxy
        nameWithType: ServerProxy.ServerProxy
        qualifiedName: IMS_Library.ServerProxy.ServerProxy
      VB:
      - id: IMS_Library.ServerProxy.#ctor*
        name: ServerProxy
        nameWithType: ServerProxy.ServerProxy
        qualifiedName: IMS_Library.ServerProxy.ServerProxy
    isDefinition: true
    commentId: Overload:IMS_Library.ServerProxy.#ctor
  IMS_Library.ServerProxy.ServerState.Running:
    commentId: F:IMS_Library.ServerProxy.ServerState.Running
  IMS_Library.ServerProxy.StartAsync*:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.StartAsync*
        name: StartAsync
        nameWithType: ServerProxy.StartAsync
        qualifiedName: IMS_Library.ServerProxy.StartAsync
      VB:
      - id: IMS_Library.ServerProxy.StartAsync*
        name: StartAsync
        nameWithType: ServerProxy.StartAsync
        qualifiedName: IMS_Library.ServerProxy.StartAsync
    isDefinition: true
    commentId: Overload:IMS_Library.ServerProxy.StartAsync
  IMS_Library.ServerProxy.ServerState.Disabled:
    commentId: F:IMS_Library.ServerProxy.ServerState.Disabled
  IMS_Library.ServerProxy.StopAsync*:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.StopAsync*
        name: StopAsync
        nameWithType: ServerProxy.StopAsync
        qualifiedName: IMS_Library.ServerProxy.StopAsync
      VB:
      - id: IMS_Library.ServerProxy.StopAsync*
        name: StopAsync
        nameWithType: ServerProxy.StopAsync
        qualifiedName: IMS_Library.ServerProxy.StopAsync
    isDefinition: true
    commentId: Overload:IMS_Library.ServerProxy.StopAsync
  IMS_Library.ServerProxy.RestartAsync*:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.RestartAsync*
        name: RestartAsync
        nameWithType: ServerProxy.RestartAsync
        qualifiedName: IMS_Library.ServerProxy.RestartAsync
      VB:
      - id: IMS_Library.ServerProxy.RestartAsync*
        name: RestartAsync
        nameWithType: ServerProxy.RestartAsync
        qualifiedName: IMS_Library.ServerProxy.RestartAsync
    isDefinition: true
    commentId: Overload:IMS_Library.ServerProxy.RestartAsync
  IMS_Library.ServerProxy.GetPlayerInformationByUsername*:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.GetPlayerInformationByUsername*
        name: GetPlayerInformationByUsername
        nameWithType: ServerProxy.GetPlayerInformationByUsername
        qualifiedName: IMS_Library.ServerProxy.GetPlayerInformationByUsername
      VB:
      - id: IMS_Library.ServerProxy.GetPlayerInformationByUsername*
        name: GetPlayerInformationByUsername
        nameWithType: ServerProxy.GetPlayerInformationByUsername
        qualifiedName: IMS_Library.ServerProxy.GetPlayerInformationByUsername
    isDefinition: true
    commentId: Overload:IMS_Library.ServerProxy.GetPlayerInformationByUsername
  IMS_Library.ServerProxy.GetPlayerInformationByUUID*:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.GetPlayerInformationByUUID*
        name: GetPlayerInformationByUUID
        nameWithType: ServerProxy.GetPlayerInformationByUUID
        qualifiedName: IMS_Library.ServerProxy.GetPlayerInformationByUUID
      VB:
      - id: IMS_Library.ServerProxy.GetPlayerInformationByUUID*
        name: GetPlayerInformationByUUID
        nameWithType: ServerProxy.GetPlayerInformationByUUID
        qualifiedName: IMS_Library.ServerProxy.GetPlayerInformationByUUID
    isDefinition: true
    commentId: Overload:IMS_Library.ServerProxy.GetPlayerInformationByUUID
  IMS_Library.ServerProxy.GetOnlinePlayers*:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.GetOnlinePlayers*
        name: GetOnlinePlayers
        nameWithType: ServerProxy.GetOnlinePlayers
        qualifiedName: IMS_Library.ServerProxy.GetOnlinePlayers
      VB:
      - id: IMS_Library.ServerProxy.GetOnlinePlayers*
        name: GetOnlinePlayers
        nameWithType: ServerProxy.GetOnlinePlayers
        qualifiedName: IMS_Library.ServerProxy.GetOnlinePlayers
    isDefinition: true
    commentId: Overload:IMS_Library.ServerProxy.GetOnlinePlayers
  IMS_Library.ServerProxy.GetAllPlayers*:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.GetAllPlayers*
        name: GetAllPlayers
        nameWithType: ServerProxy.GetAllPlayers
        qualifiedName: IMS_Library.ServerProxy.GetAllPlayers
      VB:
      - id: IMS_Library.ServerProxy.GetAllPlayers*
        name: GetAllPlayers
        nameWithType: ServerProxy.GetAllPlayers
        qualifiedName: IMS_Library.ServerProxy.GetAllPlayers
    isDefinition: true
    commentId: Overload:IMS_Library.ServerProxy.GetAllPlayers
  IMS_Library.ServerProxy.GetAllOps*:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.GetAllOps*
        name: GetAllOps
        nameWithType: ServerProxy.GetAllOps
        qualifiedName: IMS_Library.ServerProxy.GetAllOps
      VB:
      - id: IMS_Library.ServerProxy.GetAllOps*
        name: GetAllOps
        nameWithType: ServerProxy.GetAllOps
        qualifiedName: IMS_Library.ServerProxy.GetAllOps
    isDefinition: true
    commentId: Overload:IMS_Library.ServerProxy.GetAllOps
  IMS_Library.ServerProxy.GetAllBans*:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.GetAllBans*
        name: GetAllBans
        nameWithType: ServerProxy.GetAllBans
        qualifiedName: IMS_Library.ServerProxy.GetAllBans
      VB:
      - id: IMS_Library.ServerProxy.GetAllBans*
        name: GetAllBans
        nameWithType: ServerProxy.GetAllBans
        qualifiedName: IMS_Library.ServerProxy.GetAllBans
    isDefinition: true
    commentId: Overload:IMS_Library.ServerProxy.GetAllBans
  IMS_Library.ServerProxy.GetAllBannedIPs*:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.GetAllBannedIPs*
        name: GetAllBannedIPs
        nameWithType: ServerProxy.GetAllBannedIPs
        qualifiedName: IMS_Library.ServerProxy.GetAllBannedIPs
      VB:
      - id: IMS_Library.ServerProxy.GetAllBannedIPs*
        name: GetAllBannedIPs
        nameWithType: ServerProxy.GetAllBannedIPs
        qualifiedName: IMS_Library.ServerProxy.GetAllBannedIPs
    isDefinition: true
    commentId: Overload:IMS_Library.ServerProxy.GetAllBannedIPs
  IMS_Library.ServerProxy.GetAllWhitelistedPlayers*:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.GetAllWhitelistedPlayers*
        name: GetAllWhitelistedPlayers
        nameWithType: ServerProxy.GetAllWhitelistedPlayers
        qualifiedName: IMS_Library.ServerProxy.GetAllWhitelistedPlayers
      VB:
      - id: IMS_Library.ServerProxy.GetAllWhitelistedPlayers*
        name: GetAllWhitelistedPlayers
        nameWithType: ServerProxy.GetAllWhitelistedPlayers
        qualifiedName: IMS_Library.ServerProxy.GetAllWhitelistedPlayers
    isDefinition: true
    commentId: Overload:IMS_Library.ServerProxy.GetAllWhitelistedPlayers
  IMS_Library.ServerProxy.WhitelistPlayer*:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.WhitelistPlayer*
        name: WhitelistPlayer
        nameWithType: ServerProxy.WhitelistPlayer
        qualifiedName: IMS_Library.ServerProxy.WhitelistPlayer
      VB:
      - id: IMS_Library.ServerProxy.WhitelistPlayer*
        name: WhitelistPlayer
        nameWithType: ServerProxy.WhitelistPlayer
        qualifiedName: IMS_Library.ServerProxy.WhitelistPlayer
    isDefinition: true
    commentId: Overload:IMS_Library.ServerProxy.WhitelistPlayer
  IMS_Library.ServerProxy.RemoveWhitelistPlayer*:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.RemoveWhitelistPlayer*
        name: RemoveWhitelistPlayer
        nameWithType: ServerProxy.RemoveWhitelistPlayer
        qualifiedName: IMS_Library.ServerProxy.RemoveWhitelistPlayer
      VB:
      - id: IMS_Library.ServerProxy.RemoveWhitelistPlayer*
        name: RemoveWhitelistPlayer
        nameWithType: ServerProxy.RemoveWhitelistPlayer
        qualifiedName: IMS_Library.ServerProxy.RemoveWhitelistPlayer
    isDefinition: true
    commentId: Overload:IMS_Library.ServerProxy.RemoveWhitelistPlayer
  IMS_Library.ServerProxy.OpPlayer*:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.OpPlayer*
        name: OpPlayer
        nameWithType: ServerProxy.OpPlayer
        qualifiedName: IMS_Library.ServerProxy.OpPlayer
      VB:
      - id: IMS_Library.ServerProxy.OpPlayer*
        name: OpPlayer
        nameWithType: ServerProxy.OpPlayer
        qualifiedName: IMS_Library.ServerProxy.OpPlayer
    isDefinition: true
    commentId: Overload:IMS_Library.ServerProxy.OpPlayer
  IMS_Library.ServerProxy.DeopPlayer*:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.DeopPlayer*
        name: DeopPlayer
        nameWithType: ServerProxy.DeopPlayer
        qualifiedName: IMS_Library.ServerProxy.DeopPlayer
      VB:
      - id: IMS_Library.ServerProxy.DeopPlayer*
        name: DeopPlayer
        nameWithType: ServerProxy.DeopPlayer
        qualifiedName: IMS_Library.ServerProxy.DeopPlayer
    isDefinition: true
    commentId: Overload:IMS_Library.ServerProxy.DeopPlayer
  IMS_Library.ServerProxy.KickPlayer*:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.KickPlayer*
        name: KickPlayer
        nameWithType: ServerProxy.KickPlayer
        qualifiedName: IMS_Library.ServerProxy.KickPlayer
      VB:
      - id: IMS_Library.ServerProxy.KickPlayer*
        name: KickPlayer
        nameWithType: ServerProxy.KickPlayer
        qualifiedName: IMS_Library.ServerProxy.KickPlayer
    isDefinition: true
    commentId: Overload:IMS_Library.ServerProxy.KickPlayer
  IMS_Library.ServerProxy.BanPlayer*:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.BanPlayer*
        name: BanPlayer
        nameWithType: ServerProxy.BanPlayer
        qualifiedName: IMS_Library.ServerProxy.BanPlayer
      VB:
      - id: IMS_Library.ServerProxy.BanPlayer*
        name: BanPlayer
        nameWithType: ServerProxy.BanPlayer
        qualifiedName: IMS_Library.ServerProxy.BanPlayer
    isDefinition: true
    commentId: Overload:IMS_Library.ServerProxy.BanPlayer
  IMS_Library.ServerProxy.BanIP*:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.BanIP*
        name: BanIP
        nameWithType: ServerProxy.BanIP
        qualifiedName: IMS_Library.ServerProxy.BanIP
      VB:
      - id: IMS_Library.ServerProxy.BanIP*
        name: BanIP
        nameWithType: ServerProxy.BanIP
        qualifiedName: IMS_Library.ServerProxy.BanIP
    isDefinition: true
    commentId: Overload:IMS_Library.ServerProxy.BanIP
  IMS_Library.ServerProxy.UnbanPlayer*:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.UnbanPlayer*
        name: UnbanPlayer
        nameWithType: ServerProxy.UnbanPlayer
        qualifiedName: IMS_Library.ServerProxy.UnbanPlayer
      VB:
      - id: IMS_Library.ServerProxy.UnbanPlayer*
        name: UnbanPlayer
        nameWithType: ServerProxy.UnbanPlayer
        qualifiedName: IMS_Library.ServerProxy.UnbanPlayer
    isDefinition: true
    commentId: Overload:IMS_Library.ServerProxy.UnbanPlayer
  IMS_Library.ServerProxy.UnbanIP*:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.UnbanIP*
        name: UnbanIP
        nameWithType: ServerProxy.UnbanIP
        qualifiedName: IMS_Library.ServerProxy.UnbanIP
      VB:
      - id: IMS_Library.ServerProxy.UnbanIP*
        name: UnbanIP
        nameWithType: ServerProxy.UnbanIP
        qualifiedName: IMS_Library.ServerProxy.UnbanIP
    isDefinition: true
    commentId: Overload:IMS_Library.ServerProxy.UnbanIP
  IMS_Library.ServerProxy.SendConsoleCommand*:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.SendConsoleCommand*
        name: SendConsoleCommand
        nameWithType: ServerProxy.SendConsoleCommand
        qualifiedName: IMS_Library.ServerProxy.SendConsoleCommand
      VB:
      - id: IMS_Library.ServerProxy.SendConsoleCommand*
        name: SendConsoleCommand
        nameWithType: ServerProxy.SendConsoleCommand
        qualifiedName: IMS_Library.ServerProxy.SendConsoleCommand
    isDefinition: true
    commentId: Overload:IMS_Library.ServerProxy.SendConsoleCommand
  IMS_Library.ServerProxy.GetConsoleText*:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.GetConsoleText*
        name: GetConsoleText
        nameWithType: ServerProxy.GetConsoleText
        qualifiedName: IMS_Library.ServerProxy.GetConsoleText
      VB:
      - id: IMS_Library.ServerProxy.GetConsoleText*
        name: GetConsoleText
        nameWithType: ServerProxy.GetConsoleText
        qualifiedName: IMS_Library.ServerProxy.GetConsoleText
    isDefinition: true
    commentId: Overload:IMS_Library.ServerProxy.GetConsoleText
  IMS_Library.ServerProxy.ReloadServerWhitelist*:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.ReloadServerWhitelist*
        name: ReloadServerWhitelist
        nameWithType: ServerProxy.ReloadServerWhitelist
        qualifiedName: IMS_Library.ServerProxy.ReloadServerWhitelist
      VB:
      - id: IMS_Library.ServerProxy.ReloadServerWhitelist*
        name: ReloadServerWhitelist
        nameWithType: ServerProxy.ReloadServerWhitelist
        qualifiedName: IMS_Library.ServerProxy.ReloadServerWhitelist
    isDefinition: true
    commentId: Overload:IMS_Library.ServerProxy.ReloadServerWhitelist
  IMS_Library.ServerProxy.ReloadServerPermissions*:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.ReloadServerPermissions*
        name: ReloadServerPermissions
        nameWithType: ServerProxy.ReloadServerPermissions
        qualifiedName: IMS_Library.ServerProxy.ReloadServerPermissions
      VB:
      - id: IMS_Library.ServerProxy.ReloadServerPermissions*
        name: ReloadServerPermissions
        nameWithType: ServerProxy.ReloadServerPermissions
        qualifiedName: IMS_Library.ServerProxy.ReloadServerPermissions
    isDefinition: true
    commentId: Overload:IMS_Library.ServerProxy.ReloadServerPermissions
  IMS_Library.ServerProxy.GetLogFiles*:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.GetLogFiles*
        name: GetLogFiles
        nameWithType: ServerProxy.GetLogFiles
        qualifiedName: IMS_Library.ServerProxy.GetLogFiles
      VB:
      - id: IMS_Library.ServerProxy.GetLogFiles*
        name: GetLogFiles
        nameWithType: ServerProxy.GetLogFiles
        qualifiedName: IMS_Library.ServerProxy.GetLogFiles
    isDefinition: true
    commentId: Overload:IMS_Library.ServerProxy.GetLogFiles
  IMS_Library.ServerProxy.GetLogFile*:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.GetLogFile*
        name: GetLogFile
        nameWithType: ServerProxy.GetLogFile
        qualifiedName: IMS_Library.ServerProxy.GetLogFile
      VB:
      - id: IMS_Library.ServerProxy.GetLogFile*
        name: GetLogFile
        nameWithType: ServerProxy.GetLogFile
        qualifiedName: IMS_Library.ServerProxy.GetLogFile
    isDefinition: true
    commentId: Overload:IMS_Library.ServerProxy.GetLogFile
  IMS_Library.ServerProxy.BackupToLocationAsync*:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.BackupToLocationAsync*
        name: BackupToLocationAsync
        nameWithType: ServerProxy.BackupToLocationAsync
        qualifiedName: IMS_Library.ServerProxy.BackupToLocationAsync
      VB:
      - id: IMS_Library.ServerProxy.BackupToLocationAsync*
        name: BackupToLocationAsync
        nameWithType: ServerProxy.BackupToLocationAsync
        qualifiedName: IMS_Library.ServerProxy.BackupToLocationAsync
    isDefinition: true
    commentId: Overload:IMS_Library.ServerProxy.BackupToLocationAsync
  IMS_Library.ServerProxy.BackupToZipFileAsync*:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.BackupToZipFileAsync*
        name: BackupToZipFileAsync
        nameWithType: ServerProxy.BackupToZipFileAsync
        qualifiedName: IMS_Library.ServerProxy.BackupToZipFileAsync
      VB:
      - id: IMS_Library.ServerProxy.BackupToZipFileAsync*
        name: BackupToZipFileAsync
        nameWithType: ServerProxy.BackupToZipFileAsync
        qualifiedName: IMS_Library.ServerProxy.BackupToZipFileAsync
    isDefinition: true
    commentId: Overload:IMS_Library.ServerProxy.BackupToZipFileAsync
  IMS_Library.ServerProxy.GetDefaultServerConfiguration*:
    name:
      CSharp:
      - id: IMS_Library.ServerProxy.GetDefaultServerConfiguration*
        name: GetDefaultServerConfiguration
        nameWithType: ServerProxy.GetDefaultServerConfiguration
        qualifiedName: IMS_Library.ServerProxy.GetDefaultServerConfiguration
      VB:
      - id: IMS_Library.ServerProxy.GetDefaultServerConfiguration*
        name: GetDefaultServerConfiguration
        nameWithType: ServerProxy.GetDefaultServerConfiguration
        qualifiedName: IMS_Library.ServerProxy.GetDefaultServerConfiguration
    isDefinition: true
    commentId: Overload:IMS_Library.ServerProxy.GetDefaultServerConfiguration
  IMS_Library.ServerVersionInformation.ReleaseType:
    name:
      CSharp:
      - id: IMS_Library.ServerVersionInformation.ReleaseType
        name: ServerVersionInformation.ReleaseType
        nameWithType: ServerVersionInformation.ReleaseType
        qualifiedName: IMS_Library.ServerVersionInformation.ReleaseType
      VB:
      - id: IMS_Library.ServerVersionInformation.ReleaseType
        name: ServerVersionInformation.ReleaseType
        nameWithType: ServerVersionInformation.ReleaseType
        qualifiedName: IMS_Library.ServerVersionInformation.ReleaseType
    isDefinition: true
    parent: IMS_Library
    commentId: T:IMS_Library.ServerVersionInformation.ReleaseType
  IMS_Library.ServerVersionInformation.PhysicalLocation*:
    name:
      CSharp:
      - id: IMS_Library.ServerVersionInformation.PhysicalLocation*
        name: PhysicalLocation
        nameWithType: ServerVersionInformation.PhysicalLocation
        qualifiedName: IMS_Library.ServerVersionInformation.PhysicalLocation
      VB:
      - id: IMS_Library.ServerVersionInformation.PhysicalLocation*
        name: PhysicalLocation
        nameWithType: ServerVersionInformation.PhysicalLocation
        qualifiedName: IMS_Library.ServerVersionInformation.PhysicalLocation
    isDefinition: true
    commentId: Overload:IMS_Library.ServerVersionInformation.PhysicalLocation
  IMS_Library.ServerVersionInformation.#ctor*:
    name:
      CSharp:
      - id: IMS_Library.ServerVersionInformation.#ctor*
        name: ServerVersionInformation
        nameWithType: ServerVersionInformation.ServerVersionInformation
        qualifiedName: IMS_Library.ServerVersionInformation.ServerVersionInformation
      VB:
      - id: IMS_Library.ServerVersionInformation.#ctor*
        name: ServerVersionInformation
        nameWithType: ServerVersionInformation.ServerVersionInformation
        qualifiedName: IMS_Library.ServerVersionInformation.ServerVersionInformation
    isDefinition: true
    commentId: Overload:IMS_Library.ServerVersionInformation.#ctor
  IMS_Library.ServerVersionInformation.DownloadServerBinaryAsync*:
    name:
      CSharp:
      - id: IMS_Library.ServerVersionInformation.DownloadServerBinaryAsync*
        name: DownloadServerBinaryAsync
        nameWithType: ServerVersionInformation.DownloadServerBinaryAsync
        qualifiedName: IMS_Library.ServerVersionInformation.DownloadServerBinaryAsync
      VB:
      - id: IMS_Library.ServerVersionInformation.DownloadServerBinaryAsync*
        name: DownloadServerBinaryAsync
        nameWithType: ServerVersionInformation.DownloadServerBinaryAsync
        qualifiedName: IMS_Library.ServerVersionInformation.DownloadServerBinaryAsync
    isDefinition: true
    commentId: Overload:IMS_Library.ServerVersionInformation.DownloadServerBinaryAsync
  IMS_Library.WebInterface.Start*:
    name:
      CSharp:
      - id: IMS_Library.WebInterface.Start*
        name: Start
        nameWithType: WebInterface.Start
        qualifiedName: IMS_Library.WebInterface.Start
      VB:
      - id: IMS_Library.WebInterface.Start*
        name: Start
        nameWithType: WebInterface.Start
        qualifiedName: IMS_Library.WebInterface.Start
    isDefinition: true
    commentId: Overload:IMS_Library.WebInterface.Start
  IMS_Library.WebInterface.Stop*:
    name:
      CSharp:
      - id: IMS_Library.WebInterface.Stop*
        name: Stop
        nameWithType: WebInterface.Stop
        qualifiedName: IMS_Library.WebInterface.Stop
      VB:
      - id: IMS_Library.WebInterface.Stop*
        name: Stop
        nameWithType: WebInterface.Stop
        qualifiedName: IMS_Library.WebInterface.Stop
    isDefinition: true
    commentId: Overload:IMS_Library.WebInterface.Stop
  IMS_Library.WebPort.#ctor*:
    name:
      CSharp:
      - id: IMS_Library.WebPort.#ctor*
        name: WebPort
        nameWithType: WebPort.WebPort
        qualifiedName: IMS_Library.WebPort.WebPort
      VB:
      - id: IMS_Library.WebPort.#ctor*
        name: WebPort
        nameWithType: WebPort.WebPort
        qualifiedName: IMS_Library.WebPort.WebPort
    isDefinition: true
    commentId: Overload:IMS_Library.WebPort.#ctor
  System.Collections.Generic.IList{IMS_Library.World}:
    name:
      CSharp:
      - id: System.Collections.Generic.IList`1
        name: IList
        nameWithType: IList
        qualifiedName: System.Collections.Generic.IList
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: IMS_Library.World
        name: World
        nameWithType: World
        qualifiedName: IMS_Library.World
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IList`1
        name: IList
        nameWithType: IList
        qualifiedName: System.Collections.Generic.IList
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: IMS_Library.World
        name: World
        nameWithType: World
        qualifiedName: IMS_Library.World
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IList`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IList{IMS_Library.World}
  IMS_Library.WorldController.LoadedWorlds*:
    name:
      CSharp:
      - id: IMS_Library.WorldController.LoadedWorlds*
        name: LoadedWorlds
        nameWithType: WorldController.LoadedWorlds
        qualifiedName: IMS_Library.WorldController.LoadedWorlds
      VB:
      - id: IMS_Library.WorldController.LoadedWorlds*
        name: LoadedWorlds
        nameWithType: WorldController.LoadedWorlds
        qualifiedName: IMS_Library.WorldController.LoadedWorlds
    isDefinition: true
    commentId: Overload:IMS_Library.WorldController.LoadedWorlds
  IMS_Library.WorldController.Start*:
    name:
      CSharp:
      - id: IMS_Library.WorldController.Start*
        name: Start
        nameWithType: WorldController.Start
        qualifiedName: IMS_Library.WorldController.Start
      VB:
      - id: IMS_Library.WorldController.Start*
        name: Start
        nameWithType: WorldController.Start
        qualifiedName: IMS_Library.WorldController.Start
    isDefinition: true
    commentId: Overload:IMS_Library.WorldController.Start
  IMS_Library.World:
    name:
      CSharp:
      - id: IMS_Library.World
        name: World
        nameWithType: World
        qualifiedName: IMS_Library.World
      VB:
      - id: IMS_Library.World
        name: World
        nameWithType: World
        qualifiedName: IMS_Library.World
    isDefinition: true
    parent: IMS_Library
    commentId: T:IMS_Library.World
  IMS_Library.WorldController.GetWorldByID*:
    name:
      CSharp:
      - id: IMS_Library.WorldController.GetWorldByID*
        name: GetWorldByID
        nameWithType: WorldController.GetWorldByID
        qualifiedName: IMS_Library.WorldController.GetWorldByID
      VB:
      - id: IMS_Library.WorldController.GetWorldByID*
        name: GetWorldByID
        nameWithType: WorldController.GetWorldByID
        qualifiedName: IMS_Library.WorldController.GetWorldByID
    isDefinition: true
    commentId: Overload:IMS_Library.WorldController.GetWorldByID
  IMS_Library.WorldController.GetServerOfWorld*:
    name:
      CSharp:
      - id: IMS_Library.WorldController.GetServerOfWorld*
        name: GetServerOfWorld
        nameWithType: WorldController.GetServerOfWorld
        qualifiedName: IMS_Library.WorldController.GetServerOfWorld
      VB:
      - id: IMS_Library.WorldController.GetServerOfWorld*
        name: GetServerOfWorld
        nameWithType: WorldController.GetServerOfWorld
        qualifiedName: IMS_Library.WorldController.GetServerOfWorld
    isDefinition: true
    commentId: Overload:IMS_Library.WorldController.GetServerOfWorld
  IMS_Library.WorldController.AddWorldToRegistry*:
    name:
      CSharp:
      - id: IMS_Library.WorldController.AddWorldToRegistry*
        name: AddWorldToRegistry
        nameWithType: WorldController.AddWorldToRegistry
        qualifiedName: IMS_Library.WorldController.AddWorldToRegistry
      VB:
      - id: IMS_Library.WorldController.AddWorldToRegistry*
        name: AddWorldToRegistry
        nameWithType: WorldController.AddWorldToRegistry
        qualifiedName: IMS_Library.WorldController.AddWorldToRegistry
    isDefinition: true
    commentId: Overload:IMS_Library.WorldController.AddWorldToRegistry
  IMS_Library.WorldController.DeleteWorldAsync*:
    name:
      CSharp:
      - id: IMS_Library.WorldController.DeleteWorldAsync*
        name: DeleteWorldAsync
        nameWithType: WorldController.DeleteWorldAsync
        qualifiedName: IMS_Library.WorldController.DeleteWorldAsync
      VB:
      - id: IMS_Library.WorldController.DeleteWorldAsync*
        name: DeleteWorldAsync
        nameWithType: WorldController.DeleteWorldAsync
        qualifiedName: IMS_Library.WorldController.DeleteWorldAsync
    isDefinition: true
    commentId: Overload:IMS_Library.WorldController.DeleteWorldAsync
  IMS_Library.WorldController.Stop*:
    name:
      CSharp:
      - id: IMS_Library.WorldController.Stop*
        name: Stop
        nameWithType: WorldController.Stop
        qualifiedName: IMS_Library.WorldController.Stop
      VB:
      - id: IMS_Library.WorldController.Stop*
        name: Stop
        nameWithType: WorldController.Stop
        qualifiedName: IMS_Library.WorldController.Stop
    isDefinition: true
    commentId: Overload:IMS_Library.WorldController.Stop
  IMS_Library.IBackupPolicy:
    name:
      CSharp:
      - id: IMS_Library.IBackupPolicy
        name: IBackupPolicy
        nameWithType: IBackupPolicy
        qualifiedName: IMS_Library.IBackupPolicy
      VB:
      - id: IMS_Library.IBackupPolicy
        name: IBackupPolicy
        nameWithType: IBackupPolicy
        qualifiedName: IMS_Library.IBackupPolicy
    isDefinition: true
    parent: IMS_Library
    commentId: T:IMS_Library.IBackupPolicy
  System.TimeSpan:
    name:
      CSharp:
      - id: System.TimeSpan
        name: TimeSpan
        nameWithType: TimeSpan
        qualifiedName: System.TimeSpan
        isExternal: true
      VB:
      - id: System.TimeSpan
        name: TimeSpan
        nameWithType: TimeSpan
        qualifiedName: System.TimeSpan
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.TimeSpan
  IMS_Library.BackupAfterTimeIntervalPolicy.BackupInterval:
    commentId: F:IMS_Library.BackupAfterTimeIntervalPolicy.BackupInterval
  IMS_Library.BackupAfterTimeIntervalPolicy.Update*:
    name:
      CSharp:
      - id: IMS_Library.BackupAfterTimeIntervalPolicy.Update*
        name: Update
        nameWithType: BackupAfterTimeIntervalPolicy.Update
        qualifiedName: IMS_Library.BackupAfterTimeIntervalPolicy.Update
      VB:
      - id: IMS_Library.BackupAfterTimeIntervalPolicy.Update*
        name: Update
        nameWithType: BackupAfterTimeIntervalPolicy.Update
        qualifiedName: IMS_Library.BackupAfterTimeIntervalPolicy.Update
    isDefinition: true
    commentId: Overload:IMS_Library.BackupAfterTimeIntervalPolicy.Update
  IMS_Library.IBackupPolicy.Update(IMS_Library.World):
    name:
      CSharp:
      - id: IMS_Library.IBackupPolicy.Update(IMS_Library.World)
        name: Update
        nameWithType: IBackupPolicy.Update
        qualifiedName: IMS_Library.IBackupPolicy.Update
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: IMS_Library.World
        name: World
        nameWithType: World
        qualifiedName: IMS_Library.World
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.IBackupPolicy.Update(IMS_Library.World)
        name: Update
        nameWithType: IBackupPolicy.Update
        qualifiedName: IMS_Library.IBackupPolicy.Update
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: IMS_Library.World
        name: World
        nameWithType: World
        qualifiedName: IMS_Library.World
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IMS_Library.IBackupPolicy
    commentId: M:IMS_Library.IBackupPolicy.Update(IMS_Library.World)
  IMS_Library.BackupAfterTimeIntervalPolicy:
    name:
      CSharp:
      - id: IMS_Library.BackupAfterTimeIntervalPolicy
        name: BackupAfterTimeIntervalPolicy
        nameWithType: BackupAfterTimeIntervalPolicy
        qualifiedName: IMS_Library.BackupAfterTimeIntervalPolicy
      VB:
      - id: IMS_Library.BackupAfterTimeIntervalPolicy
        name: BackupAfterTimeIntervalPolicy
        nameWithType: BackupAfterTimeIntervalPolicy
        qualifiedName: IMS_Library.BackupAfterTimeIntervalPolicy
    isDefinition: true
    commentId: T:IMS_Library.BackupAfterTimeIntervalPolicy
  IMS_Library.BackupInformation:
    name:
      CSharp:
      - id: IMS_Library.BackupInformation
        name: BackupInformation
        nameWithType: BackupInformation
        qualifiedName: IMS_Library.BackupInformation
      VB:
      - id: IMS_Library.BackupInformation
        name: BackupInformation
        nameWithType: BackupInformation
        qualifiedName: IMS_Library.BackupInformation
    isDefinition: true
    parent: IMS_Library
    commentId: T:IMS_Library.BackupInformation
  IMS_Library.IBackupPolicy.Update*:
    name:
      CSharp:
      - id: IMS_Library.IBackupPolicy.Update*
        name: Update
        nameWithType: IBackupPolicy.Update
        qualifiedName: IMS_Library.IBackupPolicy.Update
      VB:
      - id: IMS_Library.IBackupPolicy.Update*
        name: Update
        nameWithType: IBackupPolicy.Update
        qualifiedName: IMS_Library.IBackupPolicy.Update
    isDefinition: true
    commentId: Overload:IMS_Library.IBackupPolicy.Update
  IMS_Library.RemoveBackupAfterTimeIntervalPolicy.BackupRemovalTime:
    commentId: F:IMS_Library.RemoveBackupAfterTimeIntervalPolicy.BackupRemovalTime
  IMS_Library.RemoveBackupAfterTimeIntervalPolicy.Update*:
    name:
      CSharp:
      - id: IMS_Library.RemoveBackupAfterTimeIntervalPolicy.Update*
        name: Update
        nameWithType: RemoveBackupAfterTimeIntervalPolicy.Update
        qualifiedName: IMS_Library.RemoveBackupAfterTimeIntervalPolicy.Update
      VB:
      - id: IMS_Library.RemoveBackupAfterTimeIntervalPolicy.Update*
        name: Update
        nameWithType: RemoveBackupAfterTimeIntervalPolicy.Update
        qualifiedName: IMS_Library.RemoveBackupAfterTimeIntervalPolicy.Update
    isDefinition: true
    commentId: Overload:IMS_Library.RemoveBackupAfterTimeIntervalPolicy.Update
  IMS_Library.RemoveBackupAfterTimeIntervalPolicy:
    name:
      CSharp:
      - id: IMS_Library.RemoveBackupAfterTimeIntervalPolicy
        name: RemoveBackupAfterTimeIntervalPolicy
        nameWithType: RemoveBackupAfterTimeIntervalPolicy
        qualifiedName: IMS_Library.RemoveBackupAfterTimeIntervalPolicy
      VB:
      - id: IMS_Library.RemoveBackupAfterTimeIntervalPolicy
        name: RemoveBackupAfterTimeIntervalPolicy
        nameWithType: RemoveBackupAfterTimeIntervalPolicy
        qualifiedName: IMS_Library.RemoveBackupAfterTimeIntervalPolicy
    isDefinition: true
    commentId: T:IMS_Library.RemoveBackupAfterTimeIntervalPolicy
  IMS_Library.World.IMS_Library.IMSConfigurationUtility.FromConfiguration``1:
    name:
      CSharp:
      - id: IMS_Library.IMSConfigurationUtility.FromConfiguration``1
        name: FromConfiguration<World>
        nameWithType: IMSConfigurationUtility.FromConfiguration<World>
        qualifiedName: IMS_Library.IMSConfigurationUtility.FromConfiguration<IMS_Library.World>
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.IMSConfigurationUtility.FromConfiguration``1
        name: FromConfiguration(Of World)
        nameWithType: IMSConfigurationUtility.FromConfiguration(Of World)
        qualifiedName: IMS_Library.IMSConfigurationUtility.FromConfiguration(Of IMS_Library.World)
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: IMS_Library.IMSConfigurationUtility.FromConfiguration``1(``0)
    parent: IMS_Library.IMSConfigurationUtility
    commentId: M:IMS_Library.IMSConfigurationUtility.FromConfiguration``1(``0)
  IMS_Library.World.IMS_Library.IMSConfigurationUtility.SaveConfiguration``1:
    name:
      CSharp:
      - id: IMS_Library.IMSConfigurationUtility.SaveConfiguration``1
        name: SaveConfiguration<World>
        nameWithType: IMSConfigurationUtility.SaveConfiguration<World>
        qualifiedName: IMS_Library.IMSConfigurationUtility.SaveConfiguration<IMS_Library.World>
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IMS_Library.IMSConfigurationUtility.SaveConfiguration``1
        name: SaveConfiguration(Of World)
        nameWithType: IMSConfigurationUtility.SaveConfiguration(Of World)
        qualifiedName: IMS_Library.IMSConfigurationUtility.SaveConfiguration(Of IMS_Library.World)
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: IMS_Library.IMSConfigurationUtility.SaveConfiguration``1(``0)
    parent: IMS_Library.IMSConfigurationUtility
    commentId: M:IMS_Library.IMSConfigurationUtility.SaveConfiguration``1(``0)
  System.Collections.Generic.SynchronizedCollection`1:
    name:
      CSharp:
      - id: System.Collections.Generic.SynchronizedCollection`1
        name: SynchronizedCollection
        nameWithType: SynchronizedCollection
        qualifiedName: System.Collections.Generic.SynchronizedCollection
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.SynchronizedCollection`1
        name: SynchronizedCollection
        nameWithType: SynchronizedCollection
        qualifiedName: System.Collections.Generic.SynchronizedCollection
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.SynchronizedCollection`1
  System.Collections.Generic.SynchronizedCollection{IMS_Library.IBackupPolicy}:
    name:
      CSharp:
      - id: System.Collections.Generic.SynchronizedCollection`1
        name: SynchronizedCollection
        nameWithType: SynchronizedCollection
        qualifiedName: System.Collections.Generic.SynchronizedCollection
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: IMS_Library.IBackupPolicy
        name: IBackupPolicy
        nameWithType: IBackupPolicy
        qualifiedName: IMS_Library.IBackupPolicy
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.SynchronizedCollection`1
        name: SynchronizedCollection
        nameWithType: SynchronizedCollection
        qualifiedName: System.Collections.Generic.SynchronizedCollection
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: IMS_Library.IBackupPolicy
        name: IBackupPolicy
        nameWithType: IBackupPolicy
        qualifiedName: IMS_Library.IBackupPolicy
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.SynchronizedCollection`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.SynchronizedCollection{IMS_Library.IBackupPolicy}
  System.Collections.Concurrent.ConcurrentDictionary{System.Guid,IMS_Library.BackupInformation}:
    name:
      CSharp:
      - id: System.Collections.Concurrent.ConcurrentDictionary`2
        name: ConcurrentDictionary
        nameWithType: ConcurrentDictionary
        qualifiedName: System.Collections.Concurrent.ConcurrentDictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: System.Guid
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: IMS_Library.BackupInformation
        name: BackupInformation
        nameWithType: BackupInformation
        qualifiedName: IMS_Library.BackupInformation
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Concurrent.ConcurrentDictionary`2
        name: ConcurrentDictionary
        nameWithType: ConcurrentDictionary
        qualifiedName: System.Collections.Concurrent.ConcurrentDictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: System.Guid
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: IMS_Library.BackupInformation
        name: BackupInformation
        nameWithType: BackupInformation
        qualifiedName: IMS_Library.BackupInformation
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Concurrent.ConcurrentDictionary`2
    parent: System.Collections.Concurrent
    commentId: T:System.Collections.Concurrent.ConcurrentDictionary{System.Guid,IMS_Library.BackupInformation}
  IMS_Library.World.WorldPath:
    commentId: P:IMS_Library.World.WorldPath
  IMS_Library.World.FolderPath*:
    name:
      CSharp:
      - id: IMS_Library.World.FolderPath*
        name: FolderPath
        nameWithType: World.FolderPath
        qualifiedName: IMS_Library.World.FolderPath
      VB:
      - id: IMS_Library.World.FolderPath*
        name: FolderPath
        nameWithType: World.FolderPath
        qualifiedName: IMS_Library.World.FolderPath
    isDefinition: true
    commentId: Overload:IMS_Library.World.FolderPath
  IMS_Library.World.WorldPath*:
    name:
      CSharp:
      - id: IMS_Library.World.WorldPath*
        name: WorldPath
        nameWithType: World.WorldPath
        qualifiedName: IMS_Library.World.WorldPath
      VB:
      - id: IMS_Library.World.WorldPath*
        name: WorldPath
        nameWithType: World.WorldPath
        qualifiedName: IMS_Library.World.WorldPath
    isDefinition: true
    commentId: Overload:IMS_Library.World.WorldPath
  IMS_Library.World.IconPath*:
    name:
      CSharp:
      - id: IMS_Library.World.IconPath*
        name: IconPath
        nameWithType: World.IconPath
        qualifiedName: IMS_Library.World.IconPath
      VB:
      - id: IMS_Library.World.IconPath*
        name: IconPath
        nameWithType: World.IconPath
        qualifiedName: IMS_Library.World.IconPath
    isDefinition: true
    commentId: Overload:IMS_Library.World.IconPath
  IMS_Library.World.#ctor*:
    name:
      CSharp:
      - id: IMS_Library.World.#ctor*
        name: World
        nameWithType: World.World
        qualifiedName: IMS_Library.World.World
      VB:
      - id: IMS_Library.World.#ctor*
        name: World
        nameWithType: World.World
        qualifiedName: IMS_Library.World.World
    isDefinition: true
    commentId: Overload:IMS_Library.World.#ctor
  System.Threading.Tasks.Task{System.Guid}:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: System.Guid
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: System.Guid
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{System.Guid}
  IMS_Library.World.MakeBackupAsync*:
    name:
      CSharp:
      - id: IMS_Library.World.MakeBackupAsync*
        name: MakeBackupAsync
        nameWithType: World.MakeBackupAsync
        qualifiedName: IMS_Library.World.MakeBackupAsync
      VB:
      - id: IMS_Library.World.MakeBackupAsync*
        name: MakeBackupAsync
        nameWithType: World.MakeBackupAsync
        qualifiedName: IMS_Library.World.MakeBackupAsync
    isDefinition: true
    commentId: Overload:IMS_Library.World.MakeBackupAsync
  IMS_Library.World.RestoreFromBackupAsync*:
    name:
      CSharp:
      - id: IMS_Library.World.RestoreFromBackupAsync*
        name: RestoreFromBackupAsync
        nameWithType: World.RestoreFromBackupAsync
        qualifiedName: IMS_Library.World.RestoreFromBackupAsync
      VB:
      - id: IMS_Library.World.RestoreFromBackupAsync*
        name: RestoreFromBackupAsync
        nameWithType: World.RestoreFromBackupAsync
        qualifiedName: IMS_Library.World.RestoreFromBackupAsync
    isDefinition: true
    commentId: Overload:IMS_Library.World.RestoreFromBackupAsync
  IMS_Library.World.GetPathOfBackup*:
    name:
      CSharp:
      - id: IMS_Library.World.GetPathOfBackup*
        name: GetPathOfBackup
        nameWithType: World.GetPathOfBackup
        qualifiedName: IMS_Library.World.GetPathOfBackup
      VB:
      - id: IMS_Library.World.GetPathOfBackup*
        name: GetPathOfBackup
        nameWithType: World.GetPathOfBackup
        qualifiedName: IMS_Library.World.GetPathOfBackup
    isDefinition: true
    commentId: Overload:IMS_Library.World.GetPathOfBackup
  IMS_Library.World.DeleteBackupAsync*:
    name:
      CSharp:
      - id: IMS_Library.World.DeleteBackupAsync*
        name: DeleteBackupAsync
        nameWithType: World.DeleteBackupAsync
        qualifiedName: IMS_Library.World.DeleteBackupAsync
      VB:
      - id: IMS_Library.World.DeleteBackupAsync*
        name: DeleteBackupAsync
        nameWithType: World.DeleteBackupAsync
        qualifiedName: IMS_Library.World.DeleteBackupAsync
    isDefinition: true
    commentId: Overload:IMS_Library.World.DeleteBackupAsync
  IMS_Library.World.GetDefaultFilePath*:
    name:
      CSharp:
      - id: IMS_Library.World.GetDefaultFilePath*
        name: GetDefaultFilePath
        nameWithType: World.GetDefaultFilePath
        qualifiedName: IMS_Library.World.GetDefaultFilePath
      VB:
      - id: IMS_Library.World.GetDefaultFilePath*
        name: GetDefaultFilePath
        nameWithType: World.GetDefaultFilePath
        qualifiedName: IMS_Library.World.GetDefaultFilePath
    isDefinition: true
    commentId: Overload:IMS_Library.World.GetDefaultFilePath
  IMS_Library.World.RunBackupUpdates*:
    name:
      CSharp:
      - id: IMS_Library.World.RunBackupUpdates*
        name: RunBackupUpdates
        nameWithType: World.RunBackupUpdates
        qualifiedName: IMS_Library.World.RunBackupUpdates
      VB:
      - id: IMS_Library.World.RunBackupUpdates*
        name: RunBackupUpdates
        nameWithType: World.RunBackupUpdates
        qualifiedName: IMS_Library.World.RunBackupUpdates
    isDefinition: true
    commentId: Overload:IMS_Library.World.RunBackupUpdates
  IMS_Library.World.FolderPath:
    commentId: P:IMS_Library.World.FolderPath
  System.Threading.Tasks.Task{System.Int64}:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int64
        name: Int64
        nameWithType: Int64
        qualifiedName: System.Int64
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int64
        name: Int64
        nameWithType: Int64
        qualifiedName: System.Int64
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{System.Int64}
  IMS_Library.World.GetTotalSizeAsync*:
    name:
      CSharp:
      - id: IMS_Library.World.GetTotalSizeAsync*
        name: GetTotalSizeAsync
        nameWithType: World.GetTotalSizeAsync
        qualifiedName: IMS_Library.World.GetTotalSizeAsync
      VB:
      - id: IMS_Library.World.GetTotalSizeAsync*
        name: GetTotalSizeAsync
        nameWithType: World.GetTotalSizeAsync
        qualifiedName: IMS_Library.World.GetTotalSizeAsync
    isDefinition: true
    commentId: Overload:IMS_Library.World.GetTotalSizeAsync
  IMS_Library.World.GetWorldSizeAsync*:
    name:
      CSharp:
      - id: IMS_Library.World.GetWorldSizeAsync*
        name: GetWorldSizeAsync
        nameWithType: World.GetWorldSizeAsync
        qualifiedName: IMS_Library.World.GetWorldSizeAsync
      VB:
      - id: IMS_Library.World.GetWorldSizeAsync*
        name: GetWorldSizeAsync
        nameWithType: World.GetWorldSizeAsync
        qualifiedName: IMS_Library.World.GetWorldSizeAsync
    isDefinition: true
    commentId: Overload:IMS_Library.World.GetWorldSizeAsync
