@namespace IMS_Interface.Player

@using IMS_Library

@inherits PlayerDisplayView

@inject IJSRuntime JSRuntime

<style>
    .playertable > thead > tr > th {
        vertical-align: middle;
    }

    .playertable > tbody > tr > th {
        vertical-align: middle;
    }

    .playertable > tbody > tr > td {
        vertical-align: middle;
    }

    .playerheadicon {
        width: 28px;
        height: 28px;
        background-size: 100%;
        image-rendering: pixelated;
    }

    .linkbutton {
        background: none !important;
        border: none;
        padding: 0 !important;
        color: #23527c;
    }
</style>
@{
    IEnumerable<BanIPTag> bannedIPs = CurrentServer.GetAllBannedIPs();
    if (bannedIPs.Count() == 0)
    {
        <label style="padding-top:3px; font-weight:normal"><i>There are currently no banned IPs.</i></label>
        return;
    }
}
<table class="playertable table table-striped">
    <thead>
        <tr>
            <th>
                IP
            </th>
            <th>
                Banned on
            </th>
            <th>
                Banned by
            </th>
            <th>
                Reason
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @{
            IEnumerable<MinecraftPlayer> onlinePlayers = CurrentServer.GetOnlinePlayers();
            List<BanInformation> banPlayers = CurrentServer.GetAllBans();
            List<BanIPTag> banIPs = CurrentServer.GetAllBannedIPs();
        }
        @foreach (BanIPTag player in bannedIPs)
        {
            <tr>
                <th>
                    @player.ip
                </th>
                <td>
                    @DateTime.Parse(player.created).ToString()
                </td>
                <td>
                    @player.source
                </td>
                <td>
                    @player.reason
                </td>
                <td style="text-align:right">
                    <div style="display:inline">
                        <button class="linkbutton" @onclick="x => UnbanIP(player.ip)">Unban IP</button>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    protected string GetHoursAndMinutesOfTimespan(TimeSpan span)
    {
        string toReturn = "";
        toReturn += span.Minutes == 1 ? "1 minute" : span.Minutes + " minutes";
        if (span.TotalHours > 1)
        {
            if (Math.Round(span.TotalHours) == 1)
            {
                toReturn = "1 hour " + toReturn;
            }
            else
            {
                toReturn = Math.Round(span.TotalHours) + " hours " + toReturn;
            }
        }
        return toReturn;
    }

    protected void BanPlayer(string name)
    {
        CurrentServer.BanPlayer(name, "");
    }

    protected void UnbanPlayer(string name)
    {
        CurrentServer.UnbanPlayer(name);
    }

    protected void BanIP(string ip)
    {
        CurrentServer.BanIP(ip, "");
    }

    protected void UnbanIP(string ip)
    {
        CurrentServer.UnbanIP(ip);
    }

    protected void WhitelistPlayer(string name)
    {
        CurrentServer.WhitelistPlayer(name);
    }

    protected void UnwhitelistPlayer(string name)
    {
        CurrentServer.RemoveWhitelistPlayer(name);
    }

    protected void OpPlayer(string name)
    {
        CurrentServer.OpPlayer(name);
    }

    protected void DeopPlayer(string name)
    {
        CurrentServer.DeopPlayer(name);
    }

    protected void KickPlayer(string name)
    {
        CurrentServer.KickPlayer(name, "");
    }
}
