@namespace IMS_Interface

@inherits PreferenceDisplayView
@using System.Reflection

<label>@DisplayData.DisplayName</label>
<br />
<div data-toggle="tooltip"
     data-placement="right"
     data-title="@DisplayData.Description" style="display:inline-block; margin:5px 0px">
    <MultiToggle Options="@(new string[] { "Don't update", "Update" })"
                 SelectedIndex="SelectedItem"
                 OnSelectionChange="@(x => SelectedItem = x)"></MultiToggle>
</div>
@if (SelectedItem != 0)
{
    <label style="font-weight:normal; margin:0px 5px 0px 5px">at</label>
    <input class="form-control"
           style="margin-top:5px;margin-bottom:5px; width:150px; display:unset"
           type="time"
           @bind="Value" /><label style="margin-left:10px"> if a new version is available.</label>
}
<br />

@code {
    public DateTime Value
    {
        get
        {
            return (DateTime)DisplayData.ParentDisplay.CurrentConfiguration.GetType().GetField(DisplayData.FieldName, BindingFlags.Public | BindingFlags.Instance).GetValue(DisplayData.ParentDisplay.CurrentConfiguration);
        }
        set
        {
            DisplayData.ParentDisplay.CurrentConfiguration.GetType().GetField(DisplayData.FieldName, BindingFlags.Public | BindingFlags.Instance).SetValue(DisplayData.ParentDisplay.CurrentConfiguration, DateTime.Today.AddDays(1) + value.TimeOfDay);
            DisplayData.ParentDisplay.NotifyStateChanged();
        }
    }

    public int SelectedItem
    {
        get
        {
            DateTime? selection = (DateTime?)DisplayData.ParentDisplay.CurrentConfiguration.GetType().GetField(DisplayData.FieldName, BindingFlags.Public | BindingFlags.Instance).GetValue(DisplayData.ParentDisplay.CurrentConfiguration);
            if (selection is null)
            {
                return 0;
            }
            else
            {
                return 1;
            }
        }
        set
        {
            if (value == 0)
            {
                DisplayData.ParentDisplay.CurrentConfiguration.GetType().GetField(DisplayData.FieldName, BindingFlags.Public | BindingFlags.Instance).SetValue(DisplayData.ParentDisplay.CurrentConfiguration, null);
            }
            else
            {
                DisplayData.ParentDisplay.CurrentConfiguration.GetType().GetField(DisplayData.FieldName, BindingFlags.Public | BindingFlags.Instance).SetValue(DisplayData.ParentDisplay.CurrentConfiguration, DateTime.Today.AddDays(1));
            }
            DisplayData.ParentDisplay.NotifyStateChanged();
        }
    }
}