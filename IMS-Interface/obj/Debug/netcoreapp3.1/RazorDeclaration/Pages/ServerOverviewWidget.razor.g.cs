// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace IMS_Interface
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\Projects\IntegratedMinecraftServer\IMS-Interface\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Projects\IntegratedMinecraftServer\IMS-Interface\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Projects\IntegratedMinecraftServer\IMS-Interface\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\Projects\IntegratedMinecraftServer\IMS-Interface\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Projects\IntegratedMinecraftServer\IMS-Interface\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\Projects\IntegratedMinecraftServer\IMS-Interface\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\Projects\IntegratedMinecraftServer\IMS-Interface\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\Projects\IntegratedMinecraftServer\IMS-Interface\_Imports.razor"
using IMS_Interface;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\Projects\IntegratedMinecraftServer\IMS-Interface\_Imports.razor"
using IMS_Interface.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\Projects\IntegratedMinecraftServer\IMS-Interface\_Imports.razor"
using IMS_Interface.Player;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "D:\Projects\IntegratedMinecraftServer\IMS-Interface\_Imports.razor"
using IMS_Interface.World;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "D:\Projects\IntegratedMinecraftServer\IMS-Interface\_Imports.razor"
using IMS_Interface.Preferences;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Projects\IntegratedMinecraftServer\IMS-Interface\Pages\ServerOverviewWidget.razor"
using IMS_Library;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\Projects\IntegratedMinecraftServer\IMS-Interface\Pages\ServerOverviewWidget.razor"
using System.IO;

#line default
#line hidden
#nullable disable
    public partial class ServerOverviewWidget : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 122 "D:\Projects\IntegratedMinecraftServer\IMS-Interface\Pages\ServerOverviewWidget.razor"
       
    [Parameter]
    public ServerProxy CurrentServer { get; set; }
    [Parameter]
    public Action OnDelete { get; set; }

    protected void TryDeleteServer()
    {
        PopupManager.ShowPopup(new InformationPopupDisplay(
            "This will delete " + CurrentServer.CurrentConfiguration.ServerName + " and associated settings (like the whitelist and player permissions) permanently.  This will not remove or delete any Minecraft worlds.",
            "Delete server?",
            async x => {
                if(x == 0)
                {
                    PopupManager.ShowPopup(new LoadingPopupDisplay("Deleting server..."));
                    if(CurrentServer.State != ServerProxy.ServerState.Disabled)
                    {
                        await CurrentServer.StopAsync();
                    }
                    await IMS.Instance.ServerManager.DeleteServerAsync(CurrentServer.ID);
                    PopupManager.ClosePopup();
                    StateHasChanged();
                    OnDelete?.Invoke();
                }
            },
            "Delete", "Cancel"
        ));
    }

    protected void ChangeServerIcon()
    {
        PopupManager.ShowPopup(new ChangeServerIconDisplayView.ChangeServerIconDisplay((JavaServer)CurrentServer, StateHasChanged));
    }

    protected string GetServerIconLink()
    {
        if(CurrentServer is JavaServer server)
        {
            if(File.Exists(server.ServerIconLocation))
            {
                return Cache.CacheFile(server.ServerIconLocation);
            }
            else
            {
                return "/img/pack.png";
            }
        }
        else
        {
            return "/img/bedrock.png";
        }
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private FileCache Cache { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ServerProvider ServerSelector { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private PopupProvider PopupManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager Navigator { get; set; }
    }
}
#pragma warning restore 1591
