@using IMS_Library 
@using System.Reflection

@inherits PreferenceDisplayView
@inject PopupProvider PopupManager

<label>@DisplayData.DisplayName:</label><br />
<label><i>@(string.IsNullOrEmpty(CurrentVersion) ? "Using latest version" : "Using " + IMS.Instance.VersionManager.AvailableServerVersions[CurrentVersion].Name)</i></label><br />
<button class="btn btn-primary" data-toggle="tooltip"
    data-placement="right"
    data-title="@DisplayData.Description" style="display:inline-block; margin:5px 0px"
    @onclick="x => PopupManager.ShowPopup(new SelectServerVersionDisplayView.SelectServerVersionDisplay(CurrentVersion, CurrentEdition, DisplayData.ParentDisplay.CurrentConfiguration, DisplayData.ParentDisplay.CurrentConfiguration.GetType().GetField(DisplayData.FieldName, BindingFlags.Public | BindingFlags.Instance), StateHasChanged))">Change version</button><br />

@code {
    public string CurrentVersion
    {
        get
        {
            return (string)DisplayData.ParentDisplay.CurrentConfiguration.GetType()
                .GetField(DisplayData.FieldName, BindingFlags.Public | BindingFlags.Instance)
                .GetValue(DisplayData.ParentDisplay.CurrentConfiguration);
        }
    }

    public MinecraftEdition CurrentEdition
    {
        get
        {
            return (MinecraftEdition)DisplayData.ParentDisplay.CurrentConfiguration.GetType()
                .GetField("Edition", BindingFlags.Public | BindingFlags.Instance)
                .GetValue(DisplayData.ParentDisplay.CurrentConfiguration);
        }
    }

    public class MinecraftVersionDisplay : PreferenceDisplay {
        public MinecraftVersionDisplay(string name, string display, string description) : base(name, display, description)
        {

        }

        public override Type GetComponentType()
        {
            return typeof(MinecraftVersionDisplayView);
        }
    }
}
